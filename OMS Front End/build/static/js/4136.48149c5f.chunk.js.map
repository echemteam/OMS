{"version":3,"file":"static/js/4136.48149c5f.chunk.js","mappings":"6KAMA,MAwEA,EAxE0BA,IAYnB,IAZoB,UACzBC,EAAS,KACTC,EAAI,SACJC,EAAQ,UACRC,EAAS,aACTC,EAAY,QACZC,EAAO,YACPC,EAAW,MACXC,EAAK,cACLC,EAAa,aACbC,KACGC,GACJX,EAiBC,OAPAY,EAAAA,EAAAA,YAAU,KACJP,GACFA,EAAaD,EACf,GACC,CAACE,KAIFO,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBF,SAAA,CAC7BJ,EAAcO,cACbL,EAAAA,EAAAA,KAAA,OAAKI,UAAU,gBAAeF,UAC5BF,EAAAA,EAAAA,KAAA,MAAAE,SAAKJ,EAAcO,iBAEnB,IACJL,EAAAA,EAAAA,KAAA,OAAKI,UAAU,gCAA+BF,UAC5CF,EAAAA,EAAAA,KAACM,EAAAA,EAAQ,CACPjB,KAAMA,EACNkB,MAAOnB,EACPK,QAASA,EACTH,SA7BmBkB,CAACjB,EAAWkB,KACnCnB,GACFA,EAASC,EAAWkB,GAElBZ,GACFA,EAAa,eAAgBN,EAAWkB,EAC1C,EAwBQC,WAAsB,OAAXhB,QAAW,IAAXA,OAAW,EAAXA,EAAaiB,cAA2B,OAAbb,QAAa,IAAbA,OAAa,EAAbA,EAAeY,aAA0B,OAAbd,QAAa,IAAbA,OAAa,EAAbA,EAAec,WACjFnB,UAAWA,KACPO,EACJc,aAAa,OAGjBZ,EAAAA,EAAAA,KAACa,EAAAA,QAAc,CAAClB,MAAOA,GAAS,SAEjC,C","sources":["components/Forms/formField/FormCheckBoxFields.js"],"sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport Checkbox from \"../../ui/inputs/checkBox/CheckBox\";\r\nimport ValidationText from \"../../ui/inputs/validation/ValidationText\";\r\n\r\nconst FormCheckboxField = ({\r\n  labelName,\r\n  name,\r\n  onChange,\r\n  dataField,\r\n  onValidation,\r\n  checked,\r\n  formSetting,\r\n  error,\r\n  overRideProps,\r\n  fieldActions,\r\n  ...checkboxProps\r\n}) => {\r\n  const handleCheckboxChange = (dataField, value) => {\r\n    if (onChange) {\r\n      onChange(dataField, value);\r\n    }\r\n    if (fieldActions) {\r\n      fieldActions('CHECK_CHANGE', dataField, value);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (onValidation) {\r\n      onValidation(dataField);\r\n    }\r\n  }, [checked]);\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"input-field-sec\">\r\n        {checkboxProps.hasMainTitle ?\r\n          <div className=\"section-title\">\r\n            <h5>{checkboxProps.hasMainTitle}</h5>\r\n          </div>\r\n          : \"\"}\r\n        <div className=\"checkbox-label-part mb-2 mt-2\">\r\n          <Checkbox\r\n            name={name}\r\n            label={labelName}\r\n            checked={checked}\r\n            onChange={handleCheckboxChange}\r\n            isDisable={formSetting?.isViewOnly || checkboxProps?.isDisable || overRideProps?.isDisable}\r\n            dataField={dataField}\r\n            {...checkboxProps}\r\n            showColomns={true}\r\n          />\r\n        </div>\r\n        <ValidationText error={error || \"\"} />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nFormCheckboxField.propTypes = {\r\n  labelName: PropTypes.string,\r\n  name: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func,\r\n  dataField: PropTypes.string.isRequired,\r\n  onValidation: PropTypes.func,\r\n  checked: PropTypes.bool.isRequired,\r\n  formSetting: PropTypes.shape({\r\n    isViewOnly: PropTypes.bool,\r\n  }),\r\n  error: PropTypes.string,\r\n  overRideProps: PropTypes.shape({\r\n    isDisable: PropTypes.bool,\r\n  }),\r\n  fieldActions: PropTypes.func,\r\n  checkboxProps: PropTypes.object,\r\n};\r\n\r\nexport default FormCheckboxField;\r\n"],"names":["_ref","labelName","name","onChange","dataField","onValidation","checked","formSetting","error","overRideProps","fieldActions","checkboxProps","useEffect","_jsx","_Fragment","children","_jsxs","className","hasMainTitle","Checkbox","label","handleCheckboxChange","value","isDisable","isViewOnly","showColomns","ValidationText"],"sourceRoot":""}