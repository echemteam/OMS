{"version":3,"file":"static/js/8998.2487c8b2.chunk.js","mappings":"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","sources":["components/ApprovalCheckList/feature/ApprovalInformation/SupplierSetting.js"],"sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Checkbox from \"../../../ui/inputs/checkBox/CheckBox\";\r\nimport {\r\n  useLazyGetPaymentSettingsBySupplierIdQuery,\r\n  useLazyGetSupplierFinancialSettingsBySupplierIdQuery,\r\n} from \"../../../../app/services/supplierFinancialSettingsAPI\";\r\nimport Iconify from \"../../../ui/iconify/Iconify\";\r\n\r\nconst SupplierSetting = ({\r\n  isModelOpen,\r\n  mainId,\r\n  approvalChekedData,\r\n  handleCheckbox,\r\n}) => {\r\n  //** State */\r\n\r\n  const [settingData, setSettingData] = useState([]);\r\n  const [paymentTermsData, setPaymentTermsData] = useState([]);\r\n\r\n  const [openSections, setOpenSections] = useState([true]);\r\n\r\n  const [isChecked, setIsChecked] = useState(\r\n    approvalChekedData?.isChecked || false\r\n  );\r\n\r\n  //** API Call's */\r\n  const [\r\n    getPaymentSettingsBySupplierId,\r\n    {\r\n      isFetching: isGetPaymentSettingsBySupplierIdFetching,\r\n      isSuccess: isGetPaymentSettingsBySupplierIdSuccess,\r\n      data: isGetPaymentSettingsBySupplierIdData,\r\n    },\r\n  ] = useLazyGetPaymentSettingsBySupplierIdQuery();\r\n  const [\r\n    getSupplierFinancialSettingsBySupplierId,\r\n    {\r\n      isFetching: isGetSupplierFinancialSettingsBySupplierIdFetching,\r\n      isSuccess: isGetSupplierFinancialSettingsBySupplierIdSuccess,\r\n      data: isGetSupplierFinancialSettingsBySupplierIdData,\r\n    },\r\n  ] = useLazyGetSupplierFinancialSettingsBySupplierIdQuery();\r\n\r\n  useEffect(() => {\r\n    if (isModelOpen && mainId) {\r\n      getPaymentSettingsBySupplierId(mainId);\r\n      getSupplierFinancialSettingsBySupplierId(mainId);\r\n    }\r\n  }, [isModelOpen, mainId]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      !isGetPaymentSettingsBySupplierIdFetching &&\r\n      isGetPaymentSettingsBySupplierIdSuccess &&\r\n      isGetPaymentSettingsBySupplierIdData\r\n    ) {\r\n      setPaymentTermsData(isGetPaymentSettingsBySupplierIdData);\r\n    }\r\n  }, [\r\n    isGetPaymentSettingsBySupplierIdFetching,\r\n    isGetPaymentSettingsBySupplierIdSuccess,\r\n    isGetPaymentSettingsBySupplierIdData,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      !isGetSupplierFinancialSettingsBySupplierIdFetching &&\r\n      isGetSupplierFinancialSettingsBySupplierIdSuccess &&\r\n      isGetSupplierFinancialSettingsBySupplierIdData\r\n    ) {\r\n      setSettingData(isGetSupplierFinancialSettingsBySupplierIdData);\r\n    }\r\n  }, [\r\n    isGetSupplierFinancialSettingsBySupplierIdFetching,\r\n    isGetSupplierFinancialSettingsBySupplierIdSuccess,\r\n    isGetSupplierFinancialSettingsBySupplierIdData,\r\n  ]);\r\n\r\n  const handleChange = (checkedValue, newValue) => {\r\n    setIsChecked(newValue);\r\n    handleCheckbox(checkedValue, newValue);\r\n  };\r\n  // Toggle active section\r\n  const toggleSection = (index) => {\r\n    const updatedSections = [...openSections];\r\n    updatedSections[index] = !updatedSections[index]; // Toggle the clicked section\r\n    setOpenSections(updatedSections);\r\n  };\r\n  return (\r\n    <>\r\n      <div className={`card-top-title ${openSections[0] ? 'active' : ''}`} onClick={() => toggleSection(0)}>\r\n        <div className=\"d-flex align-items-center mr-2\">\r\n          <span>\r\n            <Iconify icon=\"ep:arrow-down-bold\" className=\"open-bar\" />\r\n          </span>\r\n          <h5> Finacial Information </h5>\r\n        </div>\r\n        <div className=\"checkbox-part\">\r\n          <Checkbox\r\n            name={\"settingInformation\"}\r\n            dataField={\"settingInformation\"}\r\n            checked={isChecked || false}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n      </div>\r\n      {openSections[0] && (\r\n        <div className=\"card-info-checklist\">\r\n          {settingData && paymentTermsData && (\r\n            <div className=\"card-part\">\r\n              <h6 className=\"name-title\">\r\n                <span className=\"label\">Payment Method:</span>\r\n                <p className=\"name-desc\"> {settingData.method} </p>\r\n              </h6>\r\n              <h6 className=\"name-title\">\r\n                <span className=\"label\">Purchase Order Delivery:</span>\r\n                <p className=\"name-desc\">{settingData.poDeliveryMethod}</p>\r\n              </h6>\r\n              <h6 className=\"name-title\">\r\n                <span className=\"label\">Credit Card Note:</span>\r\n                <p className=\"name-desc\">{paymentTermsData.ccNote}</p>\r\n              </h6>\r\n              <h6 className=\"name-title\">\r\n                <span className=\"label\">Payment Terms:</span>\r\n                <p className=\"name-desc\">{settingData.paymentTerm}</p>\r\n              </h6>\r\n              <h6 className=\"name-title d-block\">\r\n                <h6 className=\"label\">Check Mailing Address:</h6>\r\n                {paymentTermsData.mailingAddress && (\r\n                  <div className=\"address-card-part\">\r\n                    <h6 className=\"title\">\r\n                      {paymentTermsData.mailingAddress.type}\r\n                    </h6>\r\n                    <h6 className=\"add-line-desc\">\r\n                      {paymentTermsData.mailingAddress.addressLine1}\r\n                    </h6>\r\n                    <p className=\"add-line-desc\">\r\n                      {paymentTermsData.mailingAddress.isPreferredBilling}\r\n                    </p>\r\n                    <p className=\"add-line-desc\">\r\n                      {paymentTermsData.mailingAddress.cityName},{\" \"}\r\n                      {paymentTermsData.mailingAddress.stateCode\r\n                        ? paymentTermsData.mailingAddress.stateCode\r\n                        : paymentTermsData.mailingAddress.stateName}{\" \"}\r\n                      {paymentTermsData.mailingAddress.zipCode}\r\n                      <div>{paymentTermsData.mailingAddress.countryName}</div>\r\n                    </p>\r\n                  </div>\r\n                )}\r\n              </h6>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nSupplierSetting.propTypes = {\r\n  isModelOpen: PropTypes.bool.isRequired,\r\n  mainId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n  getFinacialSettingById: PropTypes.func.isRequired,\r\n  approvalChekedData: PropTypes.shape({\r\n    isChecked: PropTypes.bool,\r\n  }),\r\n  handleCheckbox: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SupplierSetting;\r\n"],"names":["_ref","isModelOpen","mainId","approvalChekedData","handleCheckbox","settingData","setSettingData","useState","paymentTermsData","setPaymentTermsData","openSections","setOpenSections","isChecked","setIsChecked","getPaymentSettingsBySupplierId","isFetching","isGetPaymentSettingsBySupplierIdFetching","isSuccess","isGetPaymentSettingsBySupplierIdSuccess","data","isGetPaymentSettingsBySupplierIdData","useLazyGetPaymentSettingsBySupplierIdQuery","getSupplierFinancialSettingsBySupplierId","isGetSupplierFinancialSettingsBySupplierIdFetching","isGetSupplierFinancialSettingsBySupplierIdSuccess","isGetSupplierFinancialSettingsBySupplierIdData","useLazyGetSupplierFinancialSettingsBySupplierIdQuery","useEffect","_jsxs","_Fragment","children","className","onClick","index","updatedSections","toggleSection","_jsx","Iconify","icon","Checkbox","name","dataField","checked","onChange","handleChange","checkedValue","newValue","method","poDeliveryMethod","ccNote","paymentTerm","mailingAddress","type","addressLine1","isPreferredBilling","cityName","stateCode","stateName","zipCode","countryName"],"sourceRoot":""}