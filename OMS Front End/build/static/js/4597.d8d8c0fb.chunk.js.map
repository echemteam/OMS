{"version":3,"file":"static/js/4597.d8d8c0fb.chunk.js","mappings":"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","sources":["data/editGridColumnType.js","pages/customerDetail/feature/customerSettingDetail/features/Carrier/config/CarrierConfig.js","pages/customerDetail/feature/customerSettingDetail/features/DeliveryMethod/config/DevliveryConfig.js","pages/customerDetail/feature/customerSettingDetail/features/ShippingSetting/config/ShippingConfig.js","pages/customerDetail/feature/customerSettingDetail/features/ShippingSetting/ShippingSettings.js"],"sourcesContent":["export const EditGridColumnType = {\r\n    INPUT: 1,\r\n    DROPDOWN: 2,\r\n    NUMERIC: 3,\r\n    DATEPICKER: 4,\r\n    CHECKBOX: 5,\r\n    // other types\r\n    ACTION: 10,\r\n}\r\n","import { EditGridColumnType } from \"../../../../../../../data/editGridColumnType\";\r\nimport { FormFieldTypes } from \"../../../../../../../data/formFieldType\";\r\nimport { GridColumnType } from \"../../../../../../../data/gridColumnType\";\r\n\r\nexport const addEditCarrierFormData = {\r\n  name: \"Shipping Form\",\r\n  initialState: {\r\n    carrierId: 0,\r\n    accountNumber: \"\",\r\n    handlingFee: 10,\r\n    isCarrierPrimary: false,\r\n  },\r\n  formFields: [\r\n    {\r\n      id: \"carrier\",\r\n      lable: \"Carrier \",\r\n      Field_Name: \"Carrier\",\r\n      fieldType: FormFieldTypes.SELECT,\r\n      dataField: \"carrier\",\r\n      fieldSetting: {\r\n        placeholder: \"Select Carrier\",\r\n        isEnableOnChange: true,\r\n      },\r\n      validation: [{ type: \"require\" }],\r\n      style: {\r\n        containerCss:\r\n          \"col-xxl-12 col-xl-12 col-md-12 col-12 col-12 mb-2 label-h-0\",\r\n      },\r\n    },\r\n    {\r\n      id: \"accountNumber\",\r\n      lable: \"Account Number \",\r\n      Field_Name: \"Account Number\",\r\n      fieldType: FormFieldTypes.INPUT,\r\n      dataField: \"accountNumber\",\r\n      fieldSetting: {\r\n        placeholder: \"Enter Account Number\",\r\n        allowSpace: true,\r\n        maxLength: 25,\r\n      },\r\n      validation: [{ type: \"require\" }],\r\n      style: {\r\n        containerCss:\r\n          \"col-xxl-12 col-xl-12 col-md-12 col-12 col-12 mb-3 label-h-0\",\r\n      },\r\n    },\r\n    {\r\n      id: \"handlingFee\",\r\n      lable: \"Handling Fee\",\r\n      Field_Name: \"Handling Fee\",\r\n      fieldType: FormFieldTypes.INPUT,\r\n      dataField: \"handlingFee\",\r\n      fieldSetting: {\r\n        placeholder: \"Enter Handling Fee\",\r\n        allowSpace: true,\r\n        maxLength: 3,\r\n      },\r\n      validation: [{ type: \"require\" }],\r\n      style: {\r\n        containerCss:\r\n          \"col-xxl-12 col-xl-12 col-md-12 col-12 col-12 mb-3 label-h-0\",\r\n      },\r\n    },\r\n    {\r\n      id: \"isCarrierPrimary\",\r\n      lable: \"Is Primary\",\r\n      Field_Name: \"Is Primary\",\r\n      fieldType: FormFieldTypes.CHECKBOX,\r\n      dataField: \"isCarrierPrimary\",\r\n      fieldSetting: {\r\n        placeholder: \"\",\r\n        allowSpace: true,\r\n      },\r\n      // validation: [{ type: \"require\" }],\r\n      style: {\r\n        containerCss: \"col-xxl-4 col-xl-12 col-md-12 col-12 col-12 mb-2\",\r\n      },\r\n    },\r\n  ],\r\n};\r\n\r\nexport const AccountGridConfig = {\r\n  columns: [\r\n    {\r\n      name: \"Carrier\",\r\n      fieldName: \"carrier\",\r\n      colStyle: {\r\n        width: \"25%\",\r\n      },\r\n    },\r\n    {\r\n      name: \"Account Number\",\r\n      colStyle: {\r\n        width: \"25%\",\r\n      },\r\n      fieldName: \"accountNumber\",\r\n      allowEditColumn: true,\r\n      editColumn: {\r\n        editColType: EditGridColumnType.INPUT,\r\n        editColFieldName: \"accountNumber\",\r\n        isDisable: false,\r\n        editColValidation: [\r\n          { type: \"required\", message: \"Account Number is required.\" },\r\n        ],\r\n        colConfig: {\r\n          maxLength: 9,\r\n        },\r\n      },\r\n      colSettings: {},\r\n      allowShort: false,\r\n    },\r\n    {\r\n      name: \"Handling Fee New\",\r\n      fieldName: \"handlingFee\",\r\n      colStyle: {\r\n        width: \"25%\",\r\n      },\r\n      colType: GridColumnType.MONEY,\r\n      allowEditColumn: true,\r\n      editColumn: {\r\n        editColType: EditGridColumnType.NUMERIC,\r\n        editColFieldName: \"handlingFee\",\r\n        isDisable: false,\r\n        editColValidation: [\r\n          { type: \"required\", message: \"Handling Fee is required.\" },\r\n          {\r\n            type: \"maxLength\",\r\n            value: 3,\r\n            message: \"Handling Fee must be at least 3 characters long.\",\r\n          },\r\n        ],\r\n\r\n        colConfig: {\r\n          maxLength: 3,\r\n        },\r\n      },\r\n      colSettings: {},\r\n      allowShort: false,\r\n    },\r\n\r\n    {\r\n      name: \"Is Primary\",\r\n      fieldName: \"isPrimary\",\r\n      colStyle: {\r\n        width: \"25%\",\r\n      },\r\n      colType: GridColumnType.CHECKBOX,\r\n      allowEditColumn: true,\r\n      editColumn: {\r\n        editColType: EditGridColumnType.CHECKBOX,\r\n        editColFieldName: \"isPrimary\",\r\n        isDisable: false,\r\n        editColValidation: [],\r\n        allowOnChange: false,\r\n      },\r\n      colSettings: {\r\n        // allowCheckbox: true,\r\n        // isDisabled: false\r\n        isDisabled: false,\r\n        allowEdit: true,\r\n      },\r\n      allowShort: false,\r\n    },\r\n\r\n    {\r\n      name: \"Action\",\r\n      colStyle: {\r\n        width: \"25%\",\r\n      },\r\n      colType: GridColumnType.ACTION,\r\n      defaultAction: {\r\n        allowEdit: true,\r\n        allowDelete: false,\r\n      },\r\n      allowShort: false,\r\n    },\r\n  ],\r\n  editSettings: {\r\n    defualtEditableView: false,\r\n    buttons: {\r\n      save: true,\r\n      cancel: true,\r\n    }\r\n  },\r\n  allowEdit: true,\r\n  handleRowDataUpdate: null,\r\n  OnColumnChangeEdit: null\r\n};\r\n","import { EditGridColumnType } from \"../../../../../../../data/editGridColumnType\";\r\nimport { FormFieldTypes } from \"../../../../../../../data/formFieldType\";\r\nimport { GridColumnType } from \"../../../../../../../data/gridColumnType\";\r\n\r\nexport const addEditDeliveryFormData = {\r\n    name: \"Shipping Form\",\r\n    initialState: {\r\n        charge: '',\r\n        chargeType: '',\r\n        isDeliveryMethodPrimary: false,\r\n    },\r\n    formFields: [\r\n        {\r\n            id: \"chargeType\",\r\n            lable: \"Charge Type \",\r\n            Field_Name: \"Charge Type\",\r\n            fieldType: FormFieldTypes.SELECT,\r\n            dataField: \"chargeType\",\r\n            fieldSetting: {\r\n                placeholder: \"Select Charge Type\",\r\n                isEnableOnChange: true,\r\n                isDisabled: false,\r\n            },\r\n            validation: [{ type: \"require\" }],\r\n            style: {\r\n                containerCss: \"col-xxl-12 col-xl-12 col-md-12 col-12 col-12 mb-2 label-h-0\",\r\n            },\r\n        },\r\n        {\r\n            id: \"charge\",\r\n            lable: \"Charge \",\r\n            Field_Name: \"Charge\",\r\n            fieldType: FormFieldTypes.NUMERIC,\r\n            dataField: \"charge\",\r\n            fieldSetting: {\r\n                placeholder: \"Enter Charge\",\r\n                allowSpace: true,\r\n                maxLength: 3,\r\n            },\r\n            validation: [{ type: \"require\" }],\r\n            style: {\r\n                containerCss: \"col-xxl-12 col-xl-12 col-md-12 col-12 col-12 mb-2 label-h-0\",\r\n            },\r\n        },\r\n        {\r\n            id: \"isDeliveryMethodPrimary\",\r\n            lable: \"Is Primary\",\r\n            Field_Name: \"Is Primary\",\r\n            fieldType: FormFieldTypes.CHECKBOX,\r\n            dataField: \"isDeliveryMethodPrimary\",\r\n            fieldSetting: {\r\n                placeholder: \"\",\r\n                allowSpace: true,\r\n            },\r\n            // validation: [{ type: \"require\" }],\r\n            style: {\r\n                containerCss: \"col-xxl-4 col-xl-12 col-md-12 col-12 col-12 mb-2\",\r\n            },\r\n        },\r\n\r\n    ],\r\n};\r\n\r\nexport const OurAccountGridConfig = {\r\n    columns: [\r\n        {\r\n            name: \"Zone\",\r\n            fieldName: \"zone\",\r\n            colStyle: {\r\n                width: \"20%\",\r\n            },\r\n        },\r\n        {\r\n            name: \"Charge Type\",\r\n            fieldName: \"name\",\r\n            colStyle: {\r\n                width: \"20%\",\r\n            },\r\n        },\r\n        {\r\n            name: \"Charge\",\r\n            fieldName: \"charge\",\r\n            colType: GridColumnType.MONEY,\r\n            colStyle: {\r\n                width: \"20%\",\r\n            },\r\n            allowEditColumn: true,\r\n            editColumn: {\r\n                editColType: EditGridColumnType.NUMERIC,\r\n                editColFieldName: \"charge\",\r\n                isDisable: false,\r\n                editColValidation: [\r\n                    { type: \"required\", message: \"Charge is required.\" },\r\n                    { type: \"maxLength\", value: 3, message: \"Charge Fee must be at least 3 characters long.\" }\r\n                ],\r\n            },\r\n            colSettings: {},\r\n            allowShort: false\r\n        },\r\n        {\r\n            name: \"Is Primary\",\r\n            fieldName: \"isPrimary\",\r\n            colType: GridColumnType.CHECKBOX,\r\n            colStyle: {\r\n                width: \"20%\",\r\n            },\r\n            colSettings: {\r\n                isDisabled: false,\r\n                allowEdit: true\r\n            },\r\n            allowEditColumn: true,\r\n            editColumn: {\r\n                editColType: EditGridColumnType.CHECKBOX,\r\n                editColFieldName: \"isPrimary\",\r\n                isDisable: false,\r\n                editColValidation: [],\r\n                allowOnChange: false,\r\n            },\r\n            allowShort: false\r\n        },\r\n        {\r\n            name: \"Action\",\r\n            colStyle: {\r\n                width: \"20%\",\r\n            },\r\n            colType: GridColumnType.ACTION,\r\n            defaultAction: {\r\n                allowEdit: true,\r\n                allowDelete: false,\r\n            },\r\n            allowShort: false\r\n        },\r\n    ],\r\n    editSettings: {\r\n        defualtEditableView: false,\r\n        buttons: {\r\n            save: true,\r\n            cancel: true\r\n        }\r\n    },\r\n    allowEdit: true,\r\n    handleRowDataUpdate: null,\r\n    OnColumnChangeEdit: null,\r\n    hasChildGridTable: false,\r\n};\r\n","import { FormFieldTypes } from \"../../../../../../../data/formFieldType\";\r\n\r\nexport const shippingFormData = {\r\n    name: \"Shipping Form\",\r\n    initialState: { deliveryAccountId: \"\" },\r\n    formFields: [\r\n        {\r\n            id: \"deliveryAccountId\",\r\n            lable: \"Account Type \",\r\n            Field_Name: \"Account Type\",\r\n            fieldType: FormFieldTypes.SELECT,\r\n            dataField: \"deliveryAccountId\",\r\n            fieldSetting: {\r\n                placeholder: \"Select Account\",\r\n                allowSpace: true,\r\n                isEnableOnChange: true\r\n            },\r\n            validation: [{ type: \"require\" }],\r\n            style: {\r\n                containerCss: \"col-xxl-6 col-xl-12 col-md-12 col-12 col-12\",\r\n            },\r\n        }\r\n    ],\r\n    formSetting: {\r\n        isViewOnly: false\r\n    }\r\n};","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useContext, useEffect, useImperativeHandle, useRef, useState } from \"react\";\r\n//** Lib's */\r\nimport { shippingFormData } from \"./config/ShippingConfig\";\r\nimport FormCreator from \"../../../../../../components/Forms/FormCreator\";\r\nimport DataLoader from \"../../../../../../components/ui/dataLoader/DataLoader\";\r\nimport BasicDetailContext from \"../../../../../../utils/ContextAPIs/Customer/BasicDetailContext\";\r\n//** Service's */\r\nimport SwalAlert from \"../../../../../../services/swalService/SwalService\";\r\nimport ToastService from \"../../../../../../services/toastService/ToastService\";\r\nimport { useLazyGetAllDeliveryAccountsQuery } from \"../../../../../../app/services/commonAPI\";\r\nimport { useAddCustomerShppingDeliveryCarriersAndDeliveryMethodsMutation, useLazyGetShppingDeliveryCarrierAndDeliveryMethodsByIdQuery } from \"../../../../../../app/services/customerSettingsAPI\";\r\nimport { securityKey } from \"../../../../../../data/SecurityKey\";\r\nimport { hasFunctionalPermission } from \"../../../../../../utils/AuthorizeNavigation/authorizeNavigation\";\r\nimport { OurAccountGridConfig } from \"../DeliveryMethod/config/DevliveryConfig\";\r\nimport { AccountGridConfig } from \"../Carrier/config/CarrierConfig\";\r\nimport { setDropDownOptionField } from \"../../../../../../utils/FormFields/FieldsSetting/SetFieldSetting\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n//** Component's */\r\nconst ManageCarrier = React.lazy(() => import(\"../Carrier/ManageCarrier\"));\r\nconst ManageDevliveryMethod = React.lazy(() => import(\"../DeliveryMethod/ManageDevliveryMethod\"));\r\n\r\nconst ShippingSettings = ({ isEditablePage, customerStatusId }) => {\r\n\r\n  const ref = useRef();\r\n  const { confirm } = SwalAlert();\r\n  const [isShowButton, setIsShowButton] = useState(true);\r\n  const [accountTypeId, setAccountTypeId] = useState(0);\r\n  const [formData, setFormData] = useState(shippingFormData);\r\n  const { customerId, setDeliveryMethodsList, setCarriersList, isResponsibleUser, isExistsFinancialSetting, financialRef,\r\n    getCustomerCompletionCount, subCustomer } = useContext(BasicDetailContext);\r\n\r\n  const [getAllAccountType, { isFetching: isAccountTypeFetching, isSuccess: isAccountTypeSuccess, data: isAccountTypeData, },] = useLazyGetAllDeliveryAccountsQuery();\r\n  const [addDefaultShippings, { isSuccess: isAddDefaultShippingsSuccess, data: isAddDefaultShippingsData, },] = useAddCustomerShppingDeliveryCarriersAndDeliveryMethodsMutation();\r\n  const [getDefaultList, { isFetching: isGetDefaultValueFetching, isSuccess: isGetDefaultValueSuccess, data: isGetDefaultValueData }] = useLazyGetShppingDeliveryCarrierAndDeliveryMethodsByIdQuery();\r\n\r\n  const { formSetting } = shippingFormData;\r\n  const DeliveryActionColumn = OurAccountGridConfig.columns.find(column => column.name === \"Action\");\r\n  const CarrierActionColumn = AccountGridConfig.columns.find(column => column.name === \"Action\");\r\n  const hasAddEditPermission = hasFunctionalPermission(securityKey.ADDEDITCUSTOMERSHIPPINGSETTING);\r\n\r\n  useEffect(() => {\r\n    if (isEditablePage) {\r\n      if (!isResponsibleUser) {\r\n        if (hasAddEditPermission.hasAccess === true) {\r\n          formSetting.isViewOnly = false;\r\n        } else {\r\n          setIsShowButton(false);\r\n          formSetting.isViewOnly = true;\r\n          DeliveryActionColumn.defaultAction.allowEdit = false;\r\n          DeliveryActionColumn.defaultAction.allowDelete = false;\r\n          CarrierActionColumn.defaultAction.allowEdit = false;\r\n          CarrierActionColumn.defaultAction.allowDelete = false;\r\n        }\r\n      }\r\n    }\r\n  }, [hasAddEditPermission]);\r\n\r\n  useEffect(() => {\r\n    getAllAccountType();\r\n    handleGetDefaultList();\r\n  }, [customerId, isEditablePage, isExistsFinancialSetting]);\r\n\r\n  useImperativeHandle(financialRef, () => ({\r\n    handleGetDefaultList,\r\n  }));\r\n\r\n  useEffect(() => {\r\n    if (!isAccountTypeFetching && isAccountTypeSuccess && isAccountTypeData) {\r\n      setDropDownOptionField(isAccountTypeData, 'deliveryAccountId', 'name', shippingFormData, 'deliveryAccountId');\r\n    }\r\n  }, [isAccountTypeFetching, isAccountTypeSuccess, isAccountTypeData]);\r\n\r\n  useEffect(() => {\r\n    if (isAddDefaultShippingsSuccess && isAddDefaultShippingsData) {\r\n      handleGetDefaultList();\r\n      ToastService.success(isAddDefaultShippingsData.errorMessage);\r\n      getCustomerCompletionCount(customerId, subCustomer);\r\n    }\r\n  }, [isAddDefaultShippingsSuccess, isAddDefaultShippingsData]);\r\n\r\n  useEffect(() => {\r\n    if (!isGetDefaultValueFetching && isGetDefaultValueSuccess && isGetDefaultValueData) {\r\n      let form = { ...shippingFormData };\r\n      form.initialState = {\r\n        deliveryAccountId: isGetDefaultValueData.deliveryAccountId\r\n      }\r\n      setFormData(form);\r\n      setAccountTypeId(isGetDefaultValueData.deliveryAccountId);\r\n\r\n      if (isGetDefaultValueData?.deliveryMethodsList?.length > 0) {\r\n        const updatedDeliveryMethodsList = isGetDefaultValueData?.deliveryMethodsList?.map((data) => ({\r\n          ...data,\r\n          zone: data.isForInternational ? 'International' : 'Domestic'\r\n        }));\r\n        setDeliveryMethodsList(updatedDeliveryMethodsList);\r\n      } else if (isGetDefaultValueData?.deliveryMethodsList?.length === 0) {\r\n        setDeliveryMethodsList([]);\r\n      }\r\n\r\n      if (isGetDefaultValueData?.shppingDeliveryCarriersList?.length > 0) {\r\n        setCarriersList(isGetDefaultValueData?.shppingDeliveryCarriersList);\r\n      } else if (isGetDefaultValueData?.shppingDeliveryCarriersList?.length === 0) {\r\n        setCarriersList([]);\r\n      }\r\n    }\r\n  }, [isGetDefaultValueFetching, isGetDefaultValueSuccess, isGetDefaultValueData]);\r\n\r\n  const handleChangeDropdown = (data, dataField) => {\r\n    if (dataField === 'deliveryAccountId') {\r\n      confirm(\r\n        \"Shipping Methods?\", \"Are you sure you want to Add Default Shipping Method?\",\r\n        \"Yes\", 'Cancel', true\r\n      ).then((confirmed) => {\r\n        let request = {\r\n          customerId: customerId,\r\n          deliveryAccountId: data.value\r\n        }\r\n        if (confirmed) {\r\n          let defaultRequest = {\r\n            ...request,\r\n            isByDefault: true\r\n          }\r\n          addDefaultShippings(defaultRequest);\r\n          setAccountTypeId(data.value);\r\n        }\r\n        else if (!confirmed) {\r\n          let form = { ...shippingFormData };\r\n          form.initialState = {\r\n            deliveryAccountId: isGetDefaultValueData?.deliveryAccountId\r\n          }\r\n          setFormData(form);\r\n          // let defaultRequest = {\r\n          //   ...request,\r\n          //   isByDefault: false\r\n          // }\r\n          // addDefaultShippings(defaultRequest);\r\n          // setAccountTypeId(data.value);\r\n        }\r\n      }\r\n      );\r\n    }\r\n  }\r\n  const formActionHandler = {\r\n    DDL_CHANGED: handleChangeDropdown,\r\n  };\r\n\r\n  const handleGetDefaultList = () => {\r\n    if (customerId && customerId > 0) {\r\n      getDefaultList(customerId);\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <FormCreator config={formData} ref={ref} {...formData} onActionChange={formActionHandler} />\r\n      {!isGetDefaultValueFetching ?\r\n        <div className=\"grid-section\">\r\n          {accountTypeId === 1 ?\r\n            <ManageDevliveryMethod isEditablePage={isEditablePage} isShowButton={isShowButton} handleGetDefaultList={handleGetDefaultList} customerStatusId={customerStatusId}\r\n              isGetDataLoading={isGetDefaultValueFetching} /> :\r\n            accountTypeId === 2 ?\r\n              <>\r\n                <ManageCarrier isShowButton={isShowButton} handleGetDefaultList={handleGetDefaultList} isGetDataLoading={isGetDefaultValueFetching}\r\n                  isEditablePage={isEditablePage} customerStatusId={customerStatusId} />\r\n                <ManageDevliveryMethod isShowButton={isShowButton} handleGetDefaultList={handleGetDefaultList} isGetDataLoading={isGetDefaultValueFetching}\r\n                  isEditablePage={isEditablePage} customerStatusId={customerStatusId} />\r\n              </> : null\r\n          }\r\n        </div>\r\n        : <DataLoader />}\r\n    </div>\r\n  );\r\n};\r\n\r\nShippingSettings.propTypes = {\r\n  isEditablePage: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default ShippingSettings;\r\n"],"names":["EditGridColumnType","INPUT","DROPDOWN","NUMERIC","DATEPICKER","CHECKBOX","ACTION","addEditCarrierFormData","name","initialState","carrierId","accountNumber","handlingFee","isCarrierPrimary","formFields","id","lable","Field_Name","fieldType","FormFieldTypes","SELECT","dataField","fieldSetting","placeholder","isEnableOnChange","validation","type","style","containerCss","allowSpace","maxLength","AccountGridConfig","columns","fieldName","colStyle","width","allowEditColumn","editColumn","editColType","editColFieldName","isDisable","editColValidation","message","colConfig","colSettings","allowShort","colType","GridColumnType","MONEY","value","allowOnChange","isDisabled","allowEdit","defaultAction","allowDelete","editSettings","defualtEditableView","buttons","save","cancel","handleRowDataUpdate","OnColumnChangeEdit","addEditDeliveryFormData","charge","chargeType","isDeliveryMethodPrimary","OurAccountGridConfig","hasChildGridTable","shippingFormData","deliveryAccountId","formSetting","isViewOnly","ManageCarrier","React","ManageDevliveryMethod","_ref","isEditablePage","customerStatusId","ref","useRef","confirm","SwalAlert","isShowButton","setIsShowButton","useState","accountTypeId","setAccountTypeId","formData","setFormData","customerId","setDeliveryMethodsList","setCarriersList","isResponsibleUser","isExistsFinancialSetting","financialRef","getCustomerCompletionCount","subCustomer","useContext","BasicDetailContext","getAllAccountType","isFetching","isAccountTypeFetching","isSuccess","isAccountTypeSuccess","data","isAccountTypeData","useLazyGetAllDeliveryAccountsQuery","addDefaultShippings","isAddDefaultShippingsSuccess","isAddDefaultShippingsData","useAddCustomerShppingDeliveryCarriersAndDeliveryMethodsMutation","getDefaultList","isGetDefaultValueFetching","isGetDefaultValueSuccess","isGetDefaultValueData","useLazyGetShppingDeliveryCarrierAndDeliveryMethodsByIdQuery","DeliveryActionColumn","find","column","CarrierActionColumn","hasAddEditPermission","hasFunctionalPermission","securityKey","ADDEDITCUSTOMERSHIPPINGSETTING","useEffect","hasAccess","handleGetDefaultList","useImperativeHandle","setDropDownOptionField","ToastService","success","errorMessage","_isGetDefaultValueDat","_isGetDefaultValueDat3","_isGetDefaultValueDat4","_isGetDefaultValueDat5","form","deliveryMethodsList","length","_isGetDefaultValueDat2","updatedDeliveryMethodsList","map","zone","isForInternational","shppingDeliveryCarriersList","formActionHandler","DDL_CHANGED","handleChangeDropdown","then","confirmed","request","defaultRequest","isByDefault","_jsxs","className","children","_jsx","FormCreator","config","onActionChange","DataLoader","isGetDataLoading","_Fragment"],"sourceRoot":""}