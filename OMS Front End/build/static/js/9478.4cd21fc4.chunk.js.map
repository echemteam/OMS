{"version":3,"file":"static/js/9478.4cd21fc4.chunk.js","mappings":"mMAEO,MAAMA,EAAsC,CAE/CC,aAAc,CAAEC,kBAAkB,GAAGC,kBAAkB,GAAIC,eAAe,GAAIC,sBAAsB,GAAKC,qBAAqB,IAC9HC,WAAY,CACR,CACIC,GAAI,oBACJC,MAAO,sBACPC,WAAY,qBACZC,UAAWC,EAAAA,EAAeC,QAC1BC,UAAW,oBACXC,aAAc,CACZC,YAAa,2BACbC,YAAY,EACZC,UAAU,GAEZC,WAAY,CAAC,CAAEC,KAAM,YACrBC,MAAO,CACLC,aAAc,iDAIlB,CACEd,GAAI,oBACJC,MAAO,sBACPC,WAAY,qBACZC,UAAWC,EAAAA,EAAeC,QAC1BC,UAAW,oBACXC,aAAc,CACZC,YAAa,2BACbC,YAAY,EACZC,UAAU,GAEZC,WAAY,CAAC,CAAEC,KAAM,YACrBC,MAAO,CACLC,aAAc,iDAGlB,CACEd,GAAI,iBACJC,MAAO,mBACPC,WAAY,kBACZC,UAAWC,EAAAA,EAAeC,QAC1BC,UAAW,iBACXC,aAAc,CACZC,YAAa,wBACbC,YAAY,EACZC,UAAU,GAEZC,WAAY,CAAC,CAAEC,KAAM,YACrBC,MAAO,CACLC,aAAc,iDAGlB,CACEd,GAAI,wBACJC,MAAO,0BACPC,WAAY,yBACZC,UAAWC,EAAAA,EAAeC,QAC1BC,UAAW,wBACXC,aAAc,CACZC,YAAa,+BACbC,YAAY,EACZC,UAAU,GAEZC,WAAY,CAAC,CAAEC,KAAM,YACrBC,MAAO,CACLC,aAAc,iDAGlB,CACEd,GAAI,uBACJC,MAAO,yBACPC,WAAY,wBACZC,UAAWC,EAAAA,EAAeC,QAC1BC,UAAW,uBACXC,aAAc,CACZC,YAAa,8BACbC,YAAY,EACZC,UAAU,GAEZC,WAAY,CAAC,CAAEC,KAAM,YACrBC,MAAO,CACLC,aAAc,kDAMxBC,YAAa,CACTC,YAAY,I,+CCjFpB,MAyFA,EAzFyCC,IACrC,MAAMC,GAAiCC,EAAAA,EAAAA,WAChCC,EAAiCC,IAAsCC,EAAAA,EAAAA,UAAS9B,IAChF+B,GAAsCC,UAAWC,EAA6CC,UAAWC,EAA6CC,KAAMC,KAA6CC,EAAAA,EAAAA,OACzMC,GAAkCC,WAAYC,EAA0CP,UAAWQ,EAAyCN,KAAMO,KAA0CC,EAAAA,EAAAA,OAC7LC,EAAiBC,IAAqBhB,EAAAA,EAAAA,UAAS,IAC9CiB,EAAiBC,IAAsBlB,EAAAA,EAAAA,WAAS,IACjD,YAAEP,GAAgBvB,EAClBiD,GAAQC,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,KAAKH,MAAMI,YAGvDC,EAAAA,EAAAA,YAAU,KACL7B,IACO,OAALwB,QAAK,IAALA,GAAAA,EAAOM,SAAS,UAClBP,GAAmB,GACnBzB,EAAYC,YAAa,IAEzBwB,GAAmB,GACnBzB,EAAYC,YAAa,GAE7B,GACC,CAACC,EAAgBwB,KAElBK,EAAAA,EAAAA,YAAU,KACFnB,GAA+CE,IACjDmB,EAAAA,EAAaC,QAAQpB,EAAyCqB,cAC9DnB,IACF,GACC,CAACJ,EAA6CE,KAEnDiB,EAAAA,EAAAA,YAAU,KACNf,GAAgC,GAClC,CAACA,IA6BH,OAXAe,EAAAA,EAAAA,YAAU,KACN,IAAKb,GAA4CC,GAA2CC,EAAsC,CAC9H,IAAIgB,EAAW,IAAK/B,GACpB+B,EAAS1D,aAAe,IACjB0C,GAEPd,EAAmC8B,GACnCb,EAAoBH,EAAqCiB,6BAC7D,IACD,CAACnB,EAA0CC,EAAyCC,IAEnFF,GACOoB,EAAAA,EAAAA,KAAA,OAAAC,UAAKD,EAAAA,EAAAA,KAACE,EAAAA,EAAU,OAK3BC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,4BAA2BH,SAAA,EAE9BD,EAAAA,EAAAA,KAACK,EAAAA,EAAW,CAACC,OAAQvC,EACjBwC,IAAK1C,KACFE,IAGVH,GACDoC,EAAAA,EAAAA,KAAA,OAAKI,UAAU,iBAAgBH,UAC3BD,EAAAA,EAAAA,KAAA,OAAKI,UAAU,4CAA2CH,UACtDD,EAAAA,EAAAA,KAACQ,EAAAA,EAAO,CACJC,oBAAoB,eACpBC,WAAW,OACXC,QA9CuBC,KACtC,IAAIC,EAAsBhD,EAA+BiD,QAAQC,cAClE,GAAGF,EAAoB,CACf,MAAMG,EAAQ,IACPH,EACHd,6BAA8Bf,EAC9B3C,kBAAqC,OAAnBwE,QAAmB,IAAnBA,OAAmB,EAAnBA,EAAqBxE,kBACvCC,kBAAqC,OAAnBuE,QAAmB,IAAnBA,OAAmB,EAAnBA,EAAqBvE,kBACvCC,eAAkC,OAAnBsE,QAAmB,IAAnBA,OAAmB,EAAnBA,EAAqBtE,eACpCC,sBAAyC,OAAnBqE,QAAmB,IAAnBA,OAAmB,EAAnBA,EAAqBrE,sBAC3CC,qBAAwC,OAAnBoE,QAAmB,IAAnBA,OAAmB,EAAnBA,EAAqBpE,sBAG9CyB,EAAmC8C,EAC7C,GAiCmB7C,UAAWC,EACX6C,UAAW/B,QAGjB,OACL,EC9FDgC,EAAmC,CAC9C9E,aAAc,CACZ+E,aAAc,GACdC,aAAc,GACdC,sBAAuB,GACvBC,YAAa,GACbC,QAAS,GACTC,cAAe,IAEjB9E,WAAY,CACV,CACEC,GAAI,eACJC,MAAO,iBACPC,WAAY,gBACZC,UAAWC,EAAAA,EAAeC,QAC1BC,UAAW,eACXC,aAAc,CACZC,YAAa,sBACbC,YAAY,EACZC,UAAW,GAEbC,WAAY,CAAC,CAAEC,KAAM,YACrBC,MAAO,CACLC,aAAc,iDAIlB,CACEd,GAAI,eACJC,MAAO,kBACPC,WAAY,iBACZC,UAAWC,EAAAA,EAAeC,QAC1BC,UAAW,eACXC,aAAc,CACZC,YAAa,uBACbC,YAAY,EACZC,UAAW,GAEbC,WAAY,CAAC,CAAEC,KAAM,YACrBC,MAAO,CACLC,aAAc,iDAGlB,CACEd,GAAI,wBACJC,MAAO,4BACPC,WAAY,2BACZC,UAAWC,EAAAA,EAAeC,QAC1BC,UAAW,wBACXC,aAAc,CACZC,YAAa,iCACbC,YAAY,EACZC,UAAW,GAEbC,WAAY,CAAC,CAAEC,KAAM,YACrBC,MAAO,CACLC,aAAc,iDAGlB,CACEd,GAAI,cACJC,MAAO,iBACPC,WAAY,gBACZC,UAAWC,EAAAA,EAAeC,QAC1BC,UAAW,cACXC,aAAc,CACZC,YAAa,sBACbC,YAAY,EACZC,UAAW,GAEbC,WAAY,CAAC,CAAEC,KAAM,YACrBC,MAAO,CACLC,aAAc,iDAGlB,CACEd,GAAI,UACJC,MAAO,YACPC,WAAY,WACZC,UAAWC,EAAAA,EAAeC,QAC1BC,UAAW,UACXC,aAAc,CACZC,YAAa,iBACbC,YAAY,EACZC,UAAW,GAEbC,WAAY,CAAC,CAAEC,KAAM,YACrBC,MAAO,CACLC,aAAc,iDAIlB,CACEd,GAAI,gBACJC,MAAO,yBACPC,WAAY,wBACZC,UAAWC,EAAAA,EAAe0E,OAC1BxE,UAAW,gBACXC,aAAc,CACZC,YAAa,+BACbuE,kBAAkB,GAEpBpE,WAAY,CAAC,CAAEC,KAAM,YACrBC,MAAO,CACLC,aAAc,kDAIpBC,YAAa,CACXC,YAAY,I,0BCnGhB,MA+GA,EA/GsCC,IAClC,MAAM+D,GAA8B7D,EAAAA,EAAAA,WAC7B8D,EAA8BC,IAAmC5D,EAAAA,EAAAA,UAASiD,IAC1EY,GAAsBnD,WAAYoD,EAA8B1D,UAAW2D,EAA6BzD,KAAM0D,KAAgCC,EAAAA,EAAAA,OAC9IC,GAAmChE,UAAWiE,EAA0C/D,UAAWgE,EAA0C9D,KAAM+D,KAA0CC,EAAAA,EAAAA,OAC7LC,GAA+B7D,WAAY8D,EAAuCpE,UAAWqE,EAAsCnE,KAAMoE,KAAuCC,EAAAA,EAAAA,OAChLC,EAA2BC,IAAgC7E,EAAAA,EAAAA,WAAS,IACpE8E,EAAgBC,IAAqB/E,EAAAA,EAAAA,UAAS,IAC9CiB,EAAiBC,IAAsBlB,EAAAA,EAAAA,WAAS,IACjD,YAAEP,GAAgBwD,EAClB9B,GAAQC,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,KAAKH,MAAMI,YAGvDC,EAAAA,EAAAA,YAAU,KACL7B,IACO,OAALwB,QAAK,IAALA,GAAAA,EAAOM,SAAS,UAClBP,GAAmB,GACnBzB,EAAYC,YAAa,IAEzBwB,GAAmB,GACnBzB,EAAYC,YAAa,GAE7B,GACC,CAACC,EAAgBwB,KAElBK,EAAAA,EAAAA,YAAU,KACNqC,IACAU,GAA6B,GAC/B,KAEF/C,EAAAA,EAAAA,YAAU,KACF4C,GAA4CC,IAC9C3C,EAAAA,EAAaC,QAAQ0C,EAAsCzC,cAC3D2C,IACF,GACC,CAACH,EAA0CC,KAGhD7C,EAAAA,EAAAA,YAAU,MACDsC,GAAgCC,GAA+BC,KAChEgB,EAAAA,EAAAA,IAAuBhB,EAA0B,gBAAiB,cAAef,EAAkC,iBACnH4B,GAA8BI,IAAeA,IACjD,GACD,CAACnB,EAA8BC,EAA6BC,IAwC/D,OAlBAxC,EAAAA,EAAAA,YAAU,KAEN,IAAKgD,GAAyCC,GAAwCC,EAAmC,CACrH,IAAI7C,EAAW,IAAK8B,GACpB9B,EAAS1D,aAAe,CACpB+G,0BAA0BR,EAAkCQ,0BAC5D3B,cAAemB,EAAkCS,oBACjDjC,aAAawB,EAAkCxB,aAC/CC,aAAauB,EAAkCvB,aAC/CC,sBAAsBsB,EAAkCtB,sBACxDC,YAAYqB,EAAkCrB,YAC9CC,QAAQoB,EAAkCU,SAE9CxB,EAAgC/B,GAChCkD,EAAiBL,EAAkCQ,0BACvD,IACD,CAACV,EAAuCC,EAAsCC,IAE7EF,GACOzC,EAAAA,EAAAA,KAAA,OAAAC,UAAKD,EAAAA,EAAAA,KAACE,EAAAA,EAAU,OAK3BC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,4BAA2BH,SAAA,EAE9BqD,EAAAA,EAAAA,eAACjD,EAAAA,EAAW,CAACC,OAAQsB,EACjBrB,IAAKoB,KACFC,EACJ2B,IAAKV,IAENjF,GACNoC,EAAAA,EAAAA,KAAA,OAAKI,UAAU,iBAAgBH,UAC3BD,EAAAA,EAAAA,KAAA,OAAKI,UAAU,4CAA2CH,UACtDD,EAAAA,EAAAA,KAACQ,EAAAA,EAAO,CACJC,oBAAoB,eACpBC,WAAW,OACXC,QAvDuBC,KAEvC,IAAI4C,EAAmB7B,EAA4Bb,QAAQC,cAC3D,GAAGyC,EAAiB,CACpB,MAAMxC,EAAQ,IACPwC,EACHL,0BAA2BJ,EAC3BK,oBAAqC,OAAhBI,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkBhC,cAAciC,MACrDtC,aAA6B,OAAhBqC,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkBrC,aAC/BC,aAA6B,OAAhBoC,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkBpC,aAC/BC,sBAAsC,OAAhBmC,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkBnC,sBACxCC,YAA4B,OAAhBkC,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkBlC,YAC9BC,QAAwB,OAAhBiC,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkBjC,SAG5BY,EAAgCnB,EACpC,GAwCmB7C,UAAWiE,EACXnB,UAAW/B,QAGjB,OACL,ECtHDwE,EAAiC,CAE1CtH,aAAc,CAAEuH,YAAY,IAC5BjH,WAAY,CACR,CACIC,GAAI,cACJC,MAAO,gBACPC,WAAY,eACZC,UAAWC,EAAAA,EAAeC,QAC1BC,UAAW,cACXC,aAAc,CACZC,YAAa,qBACbC,YAAY,EACZC,UAAU,GAEZC,WAAY,CAAC,CAAEC,KAAM,YACrBC,MAAO,CACLC,aAAc,0DAMxBC,YAAa,CACTC,YAAY,ICuEpB,EAvFsCC,IAClC,MAAMgG,GAA4B9F,EAAAA,EAAAA,WAC3B+F,EAA4BC,IAAiC7F,EAAAA,EAAAA,UAASyF,IACtEK,GAAwC5F,UAAW6F,EAA+C3F,UAAW4F,EAA+C1F,KAAM2F,KAAgDC,EAAAA,EAAAA,OAClNC,GAAoCzF,WAAY0F,EAA4ChG,UAAWiG,EAA2C/F,KAAMgG,KAA4CC,EAAAA,EAAAA,OACpMC,EAAoBC,IAAyBzG,EAAAA,EAAAA,UAAS,IACtDiB,EAAiBC,IAAsBlB,EAAAA,EAAAA,WAAS,IACjD,YAAEP,GAAgBgG,EAClBtE,GAAQC,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,KAAKH,MAAMI,YAGvDC,EAAAA,EAAAA,YAAU,KACL7B,IACO,OAALwB,QAAK,IAALA,GAAAA,EAAOM,SAAS,UAClBP,GAAmB,GACnBzB,EAAYC,YAAa,IAEzBwB,GAAmB,GACnBzB,EAAYC,YAAa,GAE7B,GACC,CAACC,EAAgBwB,KAElBK,EAAAA,EAAAA,YAAU,KACFwE,GAAiDC,IACjDvE,EAAAA,EAAaC,QAAQsE,EAA2CrE,cAChEuE,IACJ,GACD,CAACH,EAA+CC,KAEnDzE,EAAAA,EAAAA,YAAU,KACN2E,GAAkC,GACnC,CAACA,IA2BJ,OAbA3E,EAAAA,EAAAA,YAAU,KACN,IAAK4E,GAA8CC,GAA6CC,EAAwC,CACpI,IAAIzE,EAAW,IAAK+D,GACpB/D,EAAS1D,aAAe,IACjBmI,GAGPT,EAA8BhE,GAC9B4E,EAAsBH,EAAuCI,+BAEjE,IACD,CAACN,EAA4CC,EAA2CC,IAEvFF,GACOrE,EAAAA,EAAAA,KAAA,OAAAC,UAAKD,EAAAA,EAAAA,KAACE,EAAAA,EAAU,OAKvBC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,4BAA2BH,SAAA,EAEtCD,EAAAA,EAAAA,KAACK,EAAAA,EAAW,CAACC,OAAQuD,EACjBtD,IAAKqD,KACDC,IAGNjG,GACFoC,EAAAA,EAAAA,KAAA,OAAKI,UAAU,iBAAgBH,UAC3BD,EAAAA,EAAAA,KAAA,OAAKI,UAAU,4CAA2CH,UACtDD,EAAAA,EAAAA,KAACQ,EAAAA,EAAO,CACJC,oBAAoB,eACpBC,WAAW,OACXC,QA5CkBiE,KAClC,IAAIC,EAAiBjB,EAA0B9C,QAAQC,cACvD,GAAI8D,EAAgB,CAChB,MAAM7D,EAAU,IACT6D,EACHF,+BAAgCF,EAChCd,YAA2B,OAAdkB,QAAc,IAAdA,OAAc,EAAdA,EAAgBlB,aAEjCI,EAAqC/C,EACzC,GAoCgB7C,UAAW6F,EACX/C,UAAW/B,QAGhB,OACL,ECtEd,QAlBA,WACE,OACEiB,EAAAA,EAAAA,MAAA,OAAAF,SAAA,EACQD,EAAAA,EAAAA,KAAC8E,EAAAA,QAAW,CAACC,UAAU,aAAY9E,UAC/BD,EAAAA,EAAAA,KAACgF,EAA4B,CAACpH,gBAAgB,OAGlDoC,EAAAA,EAAAA,KAAC8E,EAAAA,QAAW,CAACC,UAAU,WAAU9E,UAC7BD,EAAAA,EAAAA,KAACiF,EAAiC,CAACrH,gBAAgB,OAGvDoC,EAAAA,EAAAA,KAAC8E,EAAAA,QAAW,CAACC,UAAU,QAAO9E,UAC1BD,EAAAA,EAAAA,KAACkF,EAA8B,CAACtH,gBAAgB,QAIhE,C","sources":["pages/organization/feature/organizationShippingCharges/config/OrganizationShippingCharges.data.js","pages/organization/feature/organizationShippingCharges/OrganizationShippingChargesDetail.js","pages/organization/feature/organizationOtherChargesDetail/config/OrganizationOtherCharges.data.js","pages/organization/feature/organizationOtherChargesDetail/OrganizationOtherChargesDetail.js","pages/organization/feature/organizationAccountingDetail/config/OrganizationAccounting.data.js","pages/organization/feature/organizationAccountingDetail/OrganizationAccountingDetail.js","pages/organization/feature/organizationChargesDetails/OrganizationChargesDetails.js"],"sourcesContent":["import { FormFieldTypes } from \"../../../../../data/formFieldType\";\r\n\r\nexport const OrganizationShippingChargesFormData = {\r\n  \r\n    initialState: { domesticOvernight:\"\",domesticSecondDay:\"\", domesticGround:\"\", internationalPriority:\"\",  internationalEconomy:\"\" },\r\n    formFields: [\r\n        {\r\n            id: \"domesticOvernight\",\r\n            lable: \"Domestic Overnight \",\r\n            Field_Name: \"Domestic Overnight\",\r\n            fieldType: FormFieldTypes.NUMERIC,\r\n            dataField: \"domesticOvernight\",\r\n            fieldSetting: {\r\n              placeholder: \"Enter Domestic Overnight\",\r\n              allowSpace: true,\r\n              maxLength:4\r\n            },\r\n            validation: [{ type: \"require\" }],\r\n            style: {\r\n              containerCss: \"col-xxl-6 col-xl-12 col-md-6 col-12 mb-input\",\r\n            },\r\n          },\r\n    \r\n          {\r\n            id: \"domesticSecondDay\",\r\n            lable: \"Domestic SecondDay \",\r\n            Field_Name: \"Domestic SecondDay\",\r\n            fieldType: FormFieldTypes.NUMERIC,\r\n            dataField: \"domesticSecondDay\",\r\n            fieldSetting: {\r\n              placeholder: \"Enter Domestic SecondDay\",\r\n              allowSpace: true,\r\n              maxLength:4\r\n            },\r\n            validation: [{ type: \"require\" }],\r\n            style: {\r\n              containerCss: \"col-xxl-6 col-xl-12 col-md-6 col-12 mb-input\",\r\n            },\r\n          },\r\n          {\r\n            id: \"domesticGround\",\r\n            lable: \"Domestic Ground \",\r\n            Field_Name: \"Domestic Ground\",\r\n            fieldType: FormFieldTypes.NUMERIC,\r\n            dataField: \"domesticGround\",\r\n            fieldSetting: {\r\n              placeholder: \"Enter Domestic Ground\",\r\n              allowSpace: true,\r\n              maxLength:4\r\n            },\r\n            validation: [{ type: \"require\" }],\r\n            style: {\r\n              containerCss: \"col-xxl-6 col-xl-12 col-md-6 col-12 mb-input\",\r\n            },\r\n          },\r\n          {\r\n            id: \"internationalPriority\",\r\n            lable: \"International Priority \",\r\n            Field_Name: \"International Priority\",\r\n            fieldType: FormFieldTypes.NUMERIC,\r\n            dataField: \"internationalPriority\",\r\n            fieldSetting: {\r\n              placeholder: \"Enter International Priority\",\r\n              allowSpace: true,\r\n              maxLength:4\r\n            },\r\n            validation: [{ type: \"require\" }],\r\n            style: {\r\n              containerCss: \"col-xxl-6 col-xl-12 col-md-6 col-12 mb-input\",\r\n            },\r\n          },\r\n          {\r\n            id: \"internationalEconomy\",\r\n            lable: \"International Economy \",\r\n            Field_Name: \"International Economy\",\r\n            fieldType: FormFieldTypes.NUMERIC,\r\n            dataField: \"internationalEconomy\",\r\n            fieldSetting: {\r\n              placeholder: \"Enter International Economy\",\r\n              allowSpace: true,\r\n              maxLength:4\r\n            },\r\n            validation: [{ type: \"require\" }],\r\n            style: {\r\n              containerCss: \"col-xxl-6 col-xl-12 col-md-6 col-12 mb-input\",\r\n            },\r\n          },\r\n\r\n        \r\n    ],\r\n    formSetting: {\r\n        isViewOnly: false\r\n    }\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { useRef,useState,useEffect } from \"react\";\r\nimport FormCreator from \"../../../../components/Forms/FormCreator\";\r\nimport Buttons from \"../../../../components/ui/button/Buttons\";\r\nimport ToastService from \"../../../../services/toastService/ToastService\";\r\nimport { OrganizationShippingChargesFormData } from \"./config/OrganizationShippingCharges.data\";\r\nimport { useAddEditOrganizationShippingChargesMutation, useLazyGetOrganizationShippingChargesQuery } from \"../../../../app/services/organizationAPI\";\r\nimport DataLoader from \"../../../../components/ui/dataLoader/DataLoader\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst OrganizationShippingChargesDetail=(isEditablePage)=>{\r\n    const organizationShippingChargesRef = useRef();\r\n    const [organizationShippingChargesData, setOrganizationShippingChargesData] = useState(OrganizationShippingChargesFormData);\r\n    const [addEditOrganizationShippingCharges, { isLoading: isAddEditOrganizationShippingChargesLoading, isSuccess: isAddEditOrganizationShippingChargesSuccess, data: isAddEditOrganizationShippingChargesData }] =useAddEditOrganizationShippingChargesMutation();\r\n    const [getOrganizationShippingCharges, { isFetching: isGetOrganizationShippingChargesFetching, isSuccess: isGetOrganizationShippingChargesSuccess, data: isGetOrganizationShippingChargesData }] = useLazyGetOrganizationShippingChargesQuery();\r\n    const[shippingChargeId,setShippingChargeId]=useState(0);\r\n    const [isButtonDisable, setIsButtonDisable] = useState(false);\r\n    const { formSetting } = OrganizationShippingChargesFormData;\r\n    const roles = useSelector((state) => state.auth.roles.roleName );\r\n\r\n   \r\n   useEffect(() => {\r\n    if (isEditablePage) {\r\n      if (roles?.includes(\"Admin\")) {  \r\n        setIsButtonDisable(false);\r\n        formSetting.isViewOnly = false;\r\n      } else {\r\n        setIsButtonDisable(true);\r\n        formSetting.isViewOnly = true;\r\n      }\r\n    }\r\n  }, [isEditablePage, roles]);\r\n\r\n    useEffect(() => {\r\n        if (isAddEditOrganizationShippingChargesSuccess && isAddEditOrganizationShippingChargesData) {\r\n          ToastService.success(isAddEditOrganizationShippingChargesData.errorMessage);\r\n          getOrganizationShippingCharges();\r\n        }\r\n      }, [isAddEditOrganizationShippingChargesSuccess, isAddEditOrganizationShippingChargesData]);\r\n\r\n    useEffect(()=>{\r\n        getOrganizationShippingCharges();   \r\n    },[getOrganizationShippingCharges])\r\n\r\n      const handleAddEditShippingChargesDetail=()=>{\r\n         let shippingChargesData = organizationShippingChargesRef.current.getFormData();\r\n        if(shippingChargesData){\r\n                const request={\r\n                    ...shippingChargesData,\r\n                    organizationShippingChargeId: shippingChargeId,\r\n                    domesticOvernight:shippingChargesData?.domesticOvernight,\r\n                    domesticSecondDay:shippingChargesData?.domesticSecondDay,\r\n                    domesticGround:shippingChargesData?.domesticGround,\r\n                    internationalPriority:shippingChargesData?.internationalPriority,\r\n                    internationalEconomy:shippingChargesData?.internationalEconomy,    \r\n        \r\n                }\r\n                addEditOrganizationShippingCharges(request);       \r\n      }\r\n    }\r\n    useEffect(() => {\r\n        if (!isGetOrganizationShippingChargesFetching && isGetOrganizationShippingChargesSuccess && isGetOrganizationShippingChargesData) {\r\n            let formData = { ...organizationShippingChargesData };\r\n            formData.initialState = {\r\n                ...isGetOrganizationShippingChargesData, \r\n            };\r\n            setOrganizationShippingChargesData(formData);\r\n            setShippingChargeId(isGetOrganizationShippingChargesData.organizationShippingChargeId);\r\n        }\r\n    }, [isGetOrganizationShippingChargesFetching, isGetOrganizationShippingChargesSuccess, isGetOrganizationShippingChargesData,]);\r\n\r\n    if (isGetOrganizationShippingChargesFetching) {\r\n        return <div><DataLoader /></div>; // Replace with a proper loading spinner or component\r\n    }\r\n\r\n    return(\r\n    \r\n    <div className=\"row mt-2 add-address-form\">\r\n        {/* <h4 className=\"organization-tab-title\">Shipping Charges</h4> */}\r\n                <FormCreator config={organizationShippingChargesData}\r\n                    ref={organizationShippingChargesRef}\r\n                   {...organizationShippingChargesData}\r\n   \r\n                />   \r\n            {isEditablePage ?    \r\n            <div className=\"col-md-12 mt-2\">\r\n                <div className=\"d-flex align-item-end justify-content-end\">\r\n                    <Buttons\r\n                        buttonTypeClassName=\"theme-button\"\r\n                        buttonText=\"Save\"\r\n                        onClick={handleAddEditShippingChargesDetail}\r\n                         isLoading={isAddEditOrganizationShippingChargesLoading}\r\n                         isDisable={isButtonDisable}\r\n                    />\r\n                </div>\r\n            </div>:null}\r\n        </div>\r\n    )\r\n}\r\nexport default OrganizationShippingChargesDetail;","import { FormFieldTypes } from \"../../../../../data/formFieldType\";\r\n\r\nexport const OrganizationOtherChargesFormData = {\r\n  initialState: {\r\n    handlingFees: \"\",\r\n    bankWireFees: \"\",\r\n    creditCardServiceFees: \"\",\r\n    coldBoxFees: \"\",\r\n    iTNFees: \"\",\r\n    paymentTermId: \"\",\r\n  },\r\n  formFields: [\r\n    {\r\n      id: \"handlingFees\",\r\n      lable: \"Handling Fees \",\r\n      Field_Name: \"Handling Fees\",\r\n      fieldType: FormFieldTypes.NUMERIC,\r\n      dataField: \"handlingFees\",\r\n      fieldSetting: {\r\n        placeholder: \"Enter Handling Fees\",\r\n        allowSpace: true,\r\n        maxLength: 4,\r\n      },\r\n      validation: [{ type: \"require\" }],\r\n      style: {\r\n        containerCss: \"col-xxl-6 col-xl-12 col-md-6 col-12 mb-input\",\r\n      },\r\n    },\r\n\r\n    {\r\n      id: \"bankWireFees\",\r\n      lable: \"Bank Wire Fees \",\r\n      Field_Name: \"Bank Wire Fees\",\r\n      fieldType: FormFieldTypes.NUMERIC,\r\n      dataField: \"bankWireFees\",\r\n      fieldSetting: {\r\n        placeholder: \"Enter Bank Wire Fees\",\r\n        allowSpace: true,\r\n        maxLength: 4,\r\n      },\r\n      validation: [{ type: \"require\" }],\r\n      style: {\r\n        containerCss: \"col-xxl-6 col-xl-12 col-md-6 col-12 mb-input\",\r\n      },\r\n    },\r\n    {\r\n      id: \"creditCardServiceFees\",\r\n      lable: \"Credit Card Service Fees \",\r\n      Field_Name: \"Credit Card Service Fees\",\r\n      fieldType: FormFieldTypes.NUMERIC,\r\n      dataField: \"creditCardServiceFees\",\r\n      fieldSetting: {\r\n        placeholder: \"Enter Credit Card Service Fees\",\r\n        allowSpace: true,\r\n        maxLength: 4,\r\n      },\r\n      validation: [{ type: \"require\" }],\r\n      style: {\r\n        containerCss: \"col-xxl-6 col-xl-12 col-md-6 col-12 mb-input\",\r\n      },\r\n    },\r\n    {\r\n      id: \"coldBoxFees\",\r\n      lable: \"Cold Box Fees \",\r\n      Field_Name: \"Cold Box Fees\",\r\n      fieldType: FormFieldTypes.NUMERIC,\r\n      dataField: \"coldBoxFees\",\r\n      fieldSetting: {\r\n        placeholder: \"Enter Cold Box Fees\",\r\n        allowSpace: true,\r\n        maxLength: 4,\r\n      },\r\n      validation: [{ type: \"require\" }],\r\n      style: {\r\n        containerCss: \"col-xxl-6 col-xl-12 col-md-6 col-12 mb-input\",\r\n      },\r\n    },\r\n    {\r\n      id: \"iTNFees\",\r\n      lable: \"ITN Fees \",\r\n      Field_Name: \"ITN Fees\",\r\n      fieldType: FormFieldTypes.NUMERIC,\r\n      dataField: \"iTNFees\",\r\n      fieldSetting: {\r\n        placeholder: \"Enter ITN Fees\",\r\n        allowSpace: true,\r\n        maxLength: 4,\r\n      },\r\n      validation: [{ type: \"require\" }],\r\n      style: {\r\n        containerCss: \"col-xxl-6 col-xl-12 col-md-6 col-12 mb-input\",\r\n      },\r\n    },\r\n\r\n    {\r\n      id: \"paymentTermId\",\r\n      lable: \"Default Payment Terms \",\r\n      Field_Name: \"Default Payment Terms\",\r\n      fieldType: FormFieldTypes.SELECT,\r\n      dataField: \"paymentTermId\",\r\n      fieldSetting: {\r\n        placeholder: \"Select Default Payment Terms\",\r\n        isEnableOnChange: true,\r\n      },\r\n      validation: [{ type: \"require\" }],\r\n      style: {\r\n        containerCss: \"col-xxl-6 col-xl-12 col-md-6 col-12 mb-input\",\r\n      },\r\n    },\r\n  ],\r\n  formSetting: {\r\n    isViewOnly: false,\r\n  },\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { useRef,useState,useEffect } from \"react\";\r\nimport FormCreator from \"../../../../components/Forms/FormCreator\";\r\nimport Buttons from \"../../../../components/ui/button/Buttons\";\r\nimport ToastService from \"../../../../services/toastService/ToastService\";\r\nimport { OrganizationOtherChargesFormData } from \"./config/OrganizationOtherCharges.data\";\r\nimport { useAddEditOrganizationOtherChargesMutation, useLazyGetOrganizationOtherChargesQuery } from \"../../../../app/services/organizationAPI\";\r\nimport { useLazyGetAllPaymentTermsQuery } from \"../../../../app/services/customerSettingsAPI\";\r\nimport { setDropDownOptionField } from '../../../../utils/FormFields/FieldsSetting/SetFieldSetting';\r\nimport DataLoader from \"../../../../components/ui/dataLoader/DataLoader\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst OrganizationOtherChargesDetail=(isEditablePage)=>{\r\n    const organizationOtherChargesRef = useRef();\r\n    const [organizationOtherChargesData, setOrganizationOtherChargesData] = useState(OrganizationOtherChargesFormData);\r\n    const [getAllPaymentTerms, { isFetching: isGetAllPaymentTermsFetching, isSuccess: isGetAllPaymentTermsSuccess, data: isGetAllPaymentTermsData, },] = useLazyGetAllPaymentTermsQuery();\r\n    const [addEditOrganizationOtherCharges, { isLoading: isAddEditOrganizationOtherChargesLoading, isSuccess: isAddEditOrganizationOtherChargesSuccess, data: isAddEditOrganizationOtherChargesData }] =useAddEditOrganizationOtherChargesMutation();\r\n    const [getOrganizationOtherCharges, { isFetching: isGetOrganizationOtherChargesFetching, isSuccess: isGetOrganizationOtherChargesSuccess, data: isGetOrganizationOtherChargesData }] = useLazyGetOrganizationOtherChargesQuery();\r\n    const [shouldRerenderFormCreator, setShouldRerenderFormCreator] = useState(false);\r\n    const [otherChargeId , setOtherChargeId ] = useState(0); \r\n    const [isButtonDisable, setIsButtonDisable] = useState(false);\r\n    const { formSetting } = OrganizationOtherChargesFormData;\r\n    const roles = useSelector((state) => state.auth.roles.roleName );\r\n\r\n   \r\n   useEffect(() => {\r\n    if (isEditablePage) {\r\n      if (roles?.includes(\"Admin\")) {  \r\n        setIsButtonDisable(false);\r\n        formSetting.isViewOnly = false;\r\n      } else {\r\n        setIsButtonDisable(true);\r\n        formSetting.isViewOnly = true;\r\n      }\r\n    }\r\n  }, [isEditablePage, roles]);\r\n    \r\n    useEffect(()=>{\r\n        getAllPaymentTerms();\r\n        getOrganizationOtherCharges();      \r\n    },[])\r\n\r\n    useEffect(() => {\r\n        if (isAddEditOrganizationOtherChargesSuccess && isAddEditOrganizationOtherChargesData) {\r\n          ToastService.success(isAddEditOrganizationOtherChargesData.errorMessage);\r\n          getOrganizationOtherCharges();\r\n        }\r\n      }, [isAddEditOrganizationOtherChargesSuccess, isAddEditOrganizationOtherChargesData]);\r\n    \r\n\r\n    useEffect(() => {\r\n        if (!isGetAllPaymentTermsFetching && isGetAllPaymentTermsSuccess && isGetAllPaymentTermsData) {\r\n            setDropDownOptionField(isGetAllPaymentTermsData, \"paymentTermId\", \"paymentTerm\", OrganizationOtherChargesFormData, \"paymentTermId\");\r\n            setShouldRerenderFormCreator((prevState) => !prevState);\r\n        }\r\n    }, [isGetAllPaymentTermsFetching, isGetAllPaymentTermsSuccess, isGetAllPaymentTermsData]);\r\n\r\n\r\n\r\n      const handleAddEditShippingChargesDetail=()=>{\r\n\r\n        let otherChargesData = organizationOtherChargesRef.current.getFormData();\r\n        if(otherChargesData){\r\n        const request={\r\n            ...otherChargesData,\r\n            organizationOtherChargeId: otherChargeId,\r\n            defaultPaymentTerms: otherChargesData?.paymentTermId.value,\r\n            handlingFees:otherChargesData?.handlingFees,\r\n            bankWireFees:otherChargesData?.bankWireFees,\r\n            creditCardServiceFees:otherChargesData?.creditCardServiceFees,\r\n            coldBoxFees:otherChargesData?.coldBoxFees,\r\n            iTNFees:otherChargesData?.iTNFees,    \r\n\r\n        }\r\n          addEditOrganizationOtherCharges(request);\r\n      }\r\n    }\r\n    useEffect(() => {\r\n      \r\n        if (!isGetOrganizationOtherChargesFetching && isGetOrganizationOtherChargesSuccess && isGetOrganizationOtherChargesData) {\r\n            let formData = { ...organizationOtherChargesData };\r\n            formData.initialState = {\r\n                organizationOtherChargeId:isGetOrganizationOtherChargesData.organizationOtherChargeId,\r\n                paymentTermId: isGetOrganizationOtherChargesData.defaultPaymentTerms,\r\n                handlingFees:isGetOrganizationOtherChargesData.handlingFees,\r\n                bankWireFees:isGetOrganizationOtherChargesData.bankWireFees,\r\n                creditCardServiceFees:isGetOrganizationOtherChargesData.creditCardServiceFees,\r\n                coldBoxFees:isGetOrganizationOtherChargesData.coldBoxFees,\r\n                iTNFees:isGetOrganizationOtherChargesData.itnFees,\r\n            };\r\n            setOrganizationOtherChargesData(formData);\r\n            setOtherChargeId(isGetOrganizationOtherChargesData.organizationOtherChargeId);\r\n        }\r\n    }, [isGetOrganizationOtherChargesFetching, isGetOrganizationOtherChargesSuccess, isGetOrganizationOtherChargesData,]);\r\n\r\n    if (isGetOrganizationOtherChargesFetching) {\r\n        return <div><DataLoader /></div>; // Replace with a proper loading spinner or component\r\n    }\r\n\r\n    return( \r\n    \r\n    <div className=\"row mt-2 add-address-form\">\r\n        {/* <h4 className=\"organization-tab-title\">Other Charges</h4> */}\r\n                <FormCreator config={organizationOtherChargesData}\r\n                    ref={organizationOtherChargesRef}\r\n                   {...organizationOtherChargesData}\r\n                   key={shouldRerenderFormCreator}\r\n                />     \r\n                 {isEditablePage ?  \r\n            <div className=\"col-md-12 mt-2\">\r\n                <div className=\"d-flex align-item-end justify-content-end\">\r\n                    <Buttons\r\n                        buttonTypeClassName=\"theme-button\"\r\n                        buttonText=\"Save\"\r\n                        onClick={handleAddEditShippingChargesDetail}\r\n                         isLoading={isAddEditOrganizationOtherChargesLoading}\r\n                         isDisable={isButtonDisable}\r\n                    />\r\n                </div>\r\n            </div>:null}\r\n        </div>\r\n     )\r\n}\r\nexport default OrganizationOtherChargesDetail;","import { FormFieldTypes } from \"../../../../../data/formFieldType\";\r\n\r\nexport const OrganizationAccountingFormData = {\r\n\r\n    initialState: { creditLimit:\"\" },\r\n    formFields: [\r\n        {\r\n            id: \"creditLimit\",\r\n            lable: \"Credit Limit \",\r\n            Field_Name: \"Credit Limit\",\r\n            fieldType: FormFieldTypes.NUMERIC,\r\n            dataField: \"creditLimit\",\r\n            fieldSetting: {\r\n              placeholder: \"Enter Credit Limit\",\r\n              allowSpace: true,\r\n              maxLength:5\r\n            },\r\n            validation: [{ type: \"require\" }],\r\n            style: {\r\n              containerCss: \"col-xxl-6 col-xl-12 col-md-12 col-12 col-12 mb-input\",\r\n            },\r\n          },\r\n    \r\n        \r\n    ],\r\n    formSetting: {\r\n        isViewOnly: false\r\n    }\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { useRef, useState, useEffect } from \"react\";\r\nimport FormCreator from \"../../../../components/Forms/FormCreator\";\r\nimport Buttons from \"../../../../components/ui/button/Buttons\";\r\nimport ToastService from \"../../../../services/toastService/ToastService\";\r\nimport { OrganizationAccountingFormData } from \"./config/OrganizationAccounting.data\";\r\nimport { useAddEditOrganizationAccountingDetailsMutation, useLazyGetOrganizationAccountingDetailsQuery } from \"../../../../app/services/organizationAPI\";\r\nimport DataLoader from \"../../../../components/ui/dataLoader/DataLoader\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst OrganizationAccountingDetail = (isEditablePage) => {\r\n    const organizationAccountingRef = useRef();\r\n    const [organizationAccountingData, setOrganizationAccountingData] = useState(OrganizationAccountingFormData);\r\n    const [addEditOrganizationAccountingDetails, { isLoading: isAddEditOrganizationAccountingDetailsLoading, isSuccess: isAddEditOrganizationAccountingDetailsSuccess, data: isAddEditOrganizationAccountingDetailsData }] = useAddEditOrganizationAccountingDetailsMutation();\r\n    const [getOrganizationAccountingDetails, { isFetching: isGetOrganizationAccountingDetailsFetching, isSuccess: isGetOrganizationAccountingDetailsSuccess, data: isGetOrganizationAccountingDetailsData }] = useLazyGetOrganizationAccountingDetailsQuery();\r\n    const [accountingDetailId, setAccountingDetailId] = useState(0);\r\n    const [isButtonDisable, setIsButtonDisable] = useState(false);\r\n    const { formSetting } = OrganizationAccountingFormData;\r\n    const roles = useSelector((state) => state.auth.roles.roleName );\r\n\r\n   \r\n   useEffect(() => {\r\n    if (isEditablePage) {\r\n      if (roles?.includes(\"Admin\")) {  \r\n        setIsButtonDisable(false);\r\n        formSetting.isViewOnly = false;\r\n      } else {\r\n        setIsButtonDisable(true);\r\n        formSetting.isViewOnly = true;\r\n      }\r\n    }\r\n  }, [isEditablePage, roles]);\r\n\r\n    useEffect(() => {\r\n        if (isAddEditOrganizationAccountingDetailsSuccess && isAddEditOrganizationAccountingDetailsData) {\r\n            ToastService.success(isAddEditOrganizationAccountingDetailsData.errorMessage);\r\n            getOrganizationAccountingDetails();\r\n        }\r\n    }, [isAddEditOrganizationAccountingDetailsSuccess, isAddEditOrganizationAccountingDetailsData]);\r\n\r\n    useEffect(() => {\r\n        getOrganizationAccountingDetails();\r\n    }, [getOrganizationAccountingDetails])\r\n\r\n    const handleAddEditAccountingDetail = () => {\r\n        let accountingData = organizationAccountingRef.current.getFormData();\r\n        if (accountingData) {\r\n            const request = {\r\n                ...accountingData,\r\n                organizationAccountingDetailId: accountingDetailId,\r\n                creditLimit: accountingData?.creditLimit,\r\n            }\r\n            addEditOrganizationAccountingDetails(request);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!isGetOrganizationAccountingDetailsFetching && isGetOrganizationAccountingDetailsSuccess && isGetOrganizationAccountingDetailsData) {\r\n            let formData = { ...organizationAccountingData };\r\n            formData.initialState = {\r\n                ...isGetOrganizationAccountingDetailsData,\r\n\r\n            };\r\n            setOrganizationAccountingData(formData);\r\n            setAccountingDetailId(isGetOrganizationAccountingDetailsData.organizationAccountingDetailId);\r\n\r\n        }\r\n    }, [isGetOrganizationAccountingDetailsFetching, isGetOrganizationAccountingDetailsSuccess, isGetOrganizationAccountingDetailsData,]);\r\n\r\n    if (isGetOrganizationAccountingDetailsFetching) {\r\n        return <div><DataLoader /></div>; // Replace with a proper loading spinner or component\r\n    }\r\n\r\n    return (\r\n\r\n        <div className=\"row mt-2 add-address-form\">\r\n            {/* <h4 className=\"organization-tab-title\">Accounting Details</h4> */}\r\n            <FormCreator config={organizationAccountingData}\r\n                ref={organizationAccountingRef}\r\n                {...organizationAccountingData}\r\n\r\n            />\r\n             {isEditablePage ?\r\n            <div className=\"col-md-12 mt-2\">\r\n                <div className=\"d-flex align-item-end justify-content-end\">\r\n                    <Buttons\r\n                        buttonTypeClassName=\"theme-button\"\r\n                        buttonText=\"Save\"\r\n                        onClick={handleAddEditAccountingDetail}\r\n                        isLoading={isAddEditOrganizationAccountingDetailsLoading}\r\n                        isDisable={isButtonDisable}\r\n                    />\r\n                </div>\r\n            </div>:null}\r\n        </div>\r\n    )\r\n}\r\nexport default OrganizationAccountingDetail;","import React from 'react'\r\nimport CardSection from '../../../../components/ui/card/CardSection'\r\nimport OrganizationShippingChargesDetail from '../organizationShippingCharges/OrganizationShippingChargesDetail'\r\nimport OrganizationOtherChargesDetail from '../organizationOtherChargesDetail/OrganizationOtherChargesDetail'\r\nimport OrganizationAccountingDetail from '../organizationAccountingDetail/OrganizationAccountingDetail'\r\n\r\nfunction OrganizationChargesDetails() {\r\n  return (\r\n    <div> \r\n            <CardSection cardTitle=\"Accounting\">\r\n                <OrganizationAccountingDetail isEditablePage={true}/>\r\n            </CardSection>\r\n\r\n            <CardSection cardTitle=\"Shipping\">\r\n                <OrganizationShippingChargesDetail isEditablePage={true}/>\r\n            </CardSection>\r\n            \r\n            <CardSection cardTitle=\"Other\">\r\n                <OrganizationOtherChargesDetail isEditablePage={true}/>\r\n            </CardSection>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default OrganizationChargesDetails"],"names":["OrganizationShippingChargesFormData","initialState","domesticOvernight","domesticSecondDay","domesticGround","internationalPriority","internationalEconomy","formFields","id","lable","Field_Name","fieldType","FormFieldTypes","NUMERIC","dataField","fieldSetting","placeholder","allowSpace","maxLength","validation","type","style","containerCss","formSetting","isViewOnly","isEditablePage","organizationShippingChargesRef","useRef","organizationShippingChargesData","setOrganizationShippingChargesData","useState","addEditOrganizationShippingCharges","isLoading","isAddEditOrganizationShippingChargesLoading","isSuccess","isAddEditOrganizationShippingChargesSuccess","data","isAddEditOrganizationShippingChargesData","useAddEditOrganizationShippingChargesMutation","getOrganizationShippingCharges","isFetching","isGetOrganizationShippingChargesFetching","isGetOrganizationShippingChargesSuccess","isGetOrganizationShippingChargesData","useLazyGetOrganizationShippingChargesQuery","shippingChargeId","setShippingChargeId","isButtonDisable","setIsButtonDisable","roles","useSelector","state","auth","roleName","useEffect","includes","ToastService","success","errorMessage","formData","organizationShippingChargeId","_jsx","children","DataLoader","_jsxs","className","FormCreator","config","ref","Buttons","buttonTypeClassName","buttonText","onClick","handleAddEditShippingChargesDetail","shippingChargesData","current","getFormData","request","isDisable","OrganizationOtherChargesFormData","handlingFees","bankWireFees","creditCardServiceFees","coldBoxFees","iTNFees","paymentTermId","SELECT","isEnableOnChange","organizationOtherChargesRef","organizationOtherChargesData","setOrganizationOtherChargesData","getAllPaymentTerms","isGetAllPaymentTermsFetching","isGetAllPaymentTermsSuccess","isGetAllPaymentTermsData","useLazyGetAllPaymentTermsQuery","addEditOrganizationOtherCharges","isAddEditOrganizationOtherChargesLoading","isAddEditOrganizationOtherChargesSuccess","isAddEditOrganizationOtherChargesData","useAddEditOrganizationOtherChargesMutation","getOrganizationOtherCharges","isGetOrganizationOtherChargesFetching","isGetOrganizationOtherChargesSuccess","isGetOrganizationOtherChargesData","useLazyGetOrganizationOtherChargesQuery","shouldRerenderFormCreator","setShouldRerenderFormCreator","otherChargeId","setOtherChargeId","setDropDownOptionField","prevState","organizationOtherChargeId","defaultPaymentTerms","itnFees","_createElement","key","otherChargesData","value","OrganizationAccountingFormData","creditLimit","organizationAccountingRef","organizationAccountingData","setOrganizationAccountingData","addEditOrganizationAccountingDetails","isAddEditOrganizationAccountingDetailsLoading","isAddEditOrganizationAccountingDetailsSuccess","isAddEditOrganizationAccountingDetailsData","useAddEditOrganizationAccountingDetailsMutation","getOrganizationAccountingDetails","isGetOrganizationAccountingDetailsFetching","isGetOrganizationAccountingDetailsSuccess","isGetOrganizationAccountingDetailsData","useLazyGetOrganizationAccountingDetailsQuery","accountingDetailId","setAccountingDetailId","organizationAccountingDetailId","handleAddEditAccountingDetail","accountingData","CardSection","cardTitle","OrganizationAccountingDetail","OrganizationShippingChargesDetail","OrganizationOtherChargesDetail"],"sourceRoot":""}