{"version":3,"file":"static/js/2792.68ec20c5.chunk.js","mappings":"mMAUA,MAsEA,EAtEyBA,IAAgH,IAA/G,iBAAEC,EAAgB,WAAEC,EAAU,kBAAEC,EAAiB,cAAEC,EAAa,gBAAEC,EAAe,qBAAEC,GAAsBN,GAQ/HO,EAAAA,EAAAA,YAAU,KAAO,IAADC,EACZ,MAAMC,EAAoBC,EAAAA,IAAkC,QAAvBF,EAAIE,EAAAA,EAAYC,eAAO,IAAAH,OAAA,EAAnBA,EAAqBI,MAAKC,GAAgC,eAAhB,OAANA,QAAM,IAANA,OAAM,EAANA,EAAQC,cAEjFL,EAAkBM,YAAYC,aAD9BX,CAIJ,GACD,CAACA,IAEJ,MAAOY,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,IAUjC,OAPAZ,EAAAA,EAAAA,YAAU,KACN,GAAIN,EAAkB,CAClB,MAAMmB,EAAanB,EAAiBoB,MAAK,CAACC,EAAGC,IAAMA,EAAEC,GAAKF,EAAEE,KAC5DN,EAAQE,EACZ,IACD,CAACnB,KAGAwB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,4DAA2DC,UACtEF,EAAAA,EAAAA,KAACG,EAAAA,QAAW,CACRC,UAAU,gBACVC,gBAAgB,eAChBC,cAAc,EACdC,QAASC,EAAAA,EAASC,SAClBC,aAAc9B,EACd+B,WAAW,MACXC,iBAAkBlC,EAAkBwB,UACpCF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,MAAKC,UAChBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,8BAA6BC,UACxCF,EAAAA,EAAAA,KAACa,EAAAA,EAAY,CACTC,IAAKrC,EACLsC,cAAe9B,EAAAA,EACf+B,WAAYxB,EACZyB,iBAAiB,EACjBC,eAAgBvC,EAChBwC,eA3CSC,CAAC/B,EAAWgC,KACvB,cAAdhC,GACAR,EAAqBwC,EACzB,WA6CM,C","sources":["common/features/component/EmailAddress/feature/EmailAddressList.js"],"sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\r\n//** Lib's */\r\nimport { AppIcons } from \"../../../../../data/appIcons\";\r\nimport { emailConfig } from \"../config/AddEditEmailForm.data\";\r\nimport CardSection from \"../../../../../components/ui/card/CardSection\";\r\nimport PropTypes from 'prop-types';\r\nimport FinalMolGrid from \"../../../../../components/FinalMolGrid/FinalMolGrid\";\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\n\r\nconst EmailAddressList = ({ emailAddressList, molGridRef, handleToggleModal, actionHandler, isButtonDisable, handleCheckBoxChange }) => {\r\n\r\n    const handleGridCheckBoxChange = (fieldName, rowData) => {\r\n        if (fieldName === 'isPrimary') {\r\n            handleCheckBoxChange(rowData);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const customActionExist = emailConfig && emailConfig.columns?.find(action => action?.fieldName === \"isPrimary\");\r\n        if (isButtonDisable) {\r\n            customActionExist.colSettings.isDisabled = true;\r\n        } else {\r\n            customActionExist.colSettings.isDisabled = false;\r\n        }\r\n    }, [isButtonDisable]);\r\n\r\n    const [list, setList] = useState([]);\r\n\r\n    // const sortedEmailList = [...emailAddressList].sort((a, b) => b.id - a.id);\r\n    useEffect(() => {\r\n        if (emailAddressList) {\r\n            const sortedList = emailAddressList.sort((a, b) => b.id - a.id);\r\n            setList(sortedList);\r\n        }\r\n    }, [emailAddressList]);\r\n\r\n    return (\r\n        <div className=\"col-xl-12 col-lg-12 col-md-12 col-12 mt-1 table-email-sec\">\r\n            <CardSection\r\n                cardTitle=\"Email Address\"\r\n                buttonClassName=\"theme-button\"\r\n                textWithIcon={true}\r\n                iconImg={AppIcons.PlusIcon}\r\n                rightButton={!isButtonDisable}\r\n                buttonText=\"Add\"\r\n                titleButtonClick={handleToggleModal}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12 table-striped p-0\">\r\n                        <FinalMolGrid\r\n                            ref={molGridRef}\r\n                            configuration={emailConfig}\r\n                            dataSource={list}\r\n                            allowPagination={false}\r\n                            onActionChange={actionHandler}\r\n                            onColumnChange={handleGridCheckBoxChange}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </CardSection>\r\n        </div>\r\n    )\r\n}\r\nEmailAddressList.propTypes = {\r\n    emailAddressList: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            emailId: PropTypes.number,\r\n            id: PropTypes.number,\r\n\r\n        })\r\n    ).isRequired,\r\n    molGridRef: PropTypes.object.isRequired,\r\n    handleToggleModal: PropTypes.func.isRequired,\r\n    actionHandler: PropTypes.shape({\r\n        EDIT: PropTypes.func,\r\n        DELETE: PropTypes.func,\r\n    }).isRequired,\r\n    isButtonDisable: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default EmailAddressList;"],"names":["_ref","emailAddressList","molGridRef","handleToggleModal","actionHandler","isButtonDisable","handleCheckBoxChange","useEffect","_emailConfig$columns","customActionExist","emailConfig","columns","find","action","fieldName","colSettings","isDisabled","list","setList","useState","sortedList","sort","a","b","id","_jsx","className","children","CardSection","cardTitle","buttonClassName","textWithIcon","iconImg","AppIcons","PlusIcon","rightButton","buttonText","titleButtonClick","FinalMolGrid","ref","configuration","dataSource","allowPagination","onActionChange","onColumnChange","handleGridCheckBoxChange","rowData"],"sourceRoot":""}