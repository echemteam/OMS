{"version":3,"file":"static/js/5272.5f821358.chunk.js","mappings":"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","sources":["common/features/component/ContactNumber/Util/ContactPhoneNumberUtil.js","common/features/component/ContactNumber/feature/AddEditContactNumber.js","components/ui/centerModel/CenterModel.js"],"sourcesContent":["import ToastService from \"../../../../../services/toastService/ToastService\";\r\nimport PropTypes from 'prop-types';\r\nexport const addPhoneNumberData = (data, contactId, listData, setListData, successMessage, maxLengthMessage, duplicateMessage, onResetData, onSuccess) => {\r\n    const phoneCode = data.phoneNumber.phoneCode && typeof data.phoneNumber === \"object\" ? data.phoneNumber.phoneCode : data.phoneCode;\r\n    const fullPhoneNumber = data.phoneNumber.PhoneNumber && typeof data.phoneNumber === \"object\" ? data.phoneNumber.PhoneNumber : data.phoneNumber;\r\n\r\n    // Add '+' to phoneCode for comparison\r\n    const normalizedPhoneCode = `+${phoneCode}`;\r\n\r\n    // Remove phoneCode from phoneNumber if it starts with the normalized phoneCode\r\n    const phoneNumberWithoutCode = fullPhoneNumber.startsWith(normalizedPhoneCode)\r\n        ? fullPhoneNumber.slice(normalizedPhoneCode.length)\r\n        : fullPhoneNumber;\r\n    let request = {\r\n        ...data,\r\n        contactId: contactId,\r\n        id: listData ? listData?.length + 1 : 1,\r\n        phoneCode: normalizedPhoneCode,\r\n        phoneNumber: phoneNumberWithoutCode,\r\n        phoneTypeId: data.phoneTypeId && typeof data.phoneTypeId === \"object\" ? data.phoneTypeId.value : data.phoneTypeId,\r\n        phoneType: data.phoneTypeId && typeof data.phoneTypeId === \"object\" ? data.phoneTypeId.label : data.phoneTypeId,\r\n        isPrimary: listData?.length === 0 ? true : data.isPrimaryPhoneNumber,\r\n        extension: data.extension > 0 ? data.extension : '-'\r\n    }\r\n    if (listData && listData.length === 5) {\r\n        ToastService.warning(maxLengthMessage);\r\n        onResetData();\r\n        onSuccess();\r\n        return;\r\n    }\r\n\r\n    const isDuplicate = listData?.some(item => item.phoneNumber === request.phoneNumber && item.phoneCode === request.phoneCode);\r\n\r\n\r\n    if (!isDuplicate) {\r\n        let addData;\r\n        if (listData) {\r\n            addData = [...listData];\r\n            if (data.isPrimaryPhoneNumber) {\r\n                addData = addData.map(item => ({ ...item, isPrimary: false }));\r\n            }\r\n            addData.push(request);\r\n        } else {\r\n            addData = [request];\r\n        }\r\n        if (addData.length <= 5) {\r\n            setListData(addData);\r\n            ToastService.success(successMessage);\r\n            onResetData();\r\n            onSuccess();\r\n        } else {\r\n            ToastService.warning(\"Cannot add more than 5 items.\");\r\n        }\r\n    } else {\r\n        ToastService.warning(duplicateMessage);\r\n    }\r\n\r\n}\r\n\r\nexport const updatePhoneNumberData = (data, listData, setListData, successMessage, duplicateMessage, inValidDate, onResetData, onSuccess) => {\r\n    if (listData && data.id > 0) {\r\n        // const phoneCode = data.phoneCode && typeof data.phoneCode === \"object\" ? data.phoneCode.label : data.phoneCode\r\n        const phoneCode = data.phoneNumber.phoneCode && typeof data.phoneNumber === \"object\" ? data.phoneNumber.phoneCode : data.phoneCode;\r\n        const fullPhoneNumber = data.phoneNumber.PhoneNumber && typeof data.phoneNumber === \"object\" ? data.phoneNumber.PhoneNumber : data.phoneNumber;\r\n\r\n        // Add '+' to phoneCode for comparison\r\n        const normalizedPhoneCode = `+${phoneCode}`;\r\n\r\n        // Remove phoneCode from phoneNumber if it starts with the normalized phoneCode\r\n        const phoneNumberWithoutCode = fullPhoneNumber.startsWith(normalizedPhoneCode) ? fullPhoneNumber.slice(normalizedPhoneCode.length) : fullPhoneNumber;\r\n        const phoneTypeId = data.phoneTypeId && typeof data.phoneTypeId === \"object\" ? data.phoneTypeId.value : data.phoneTypeId\r\n        const phoneType = data.phoneTypeId.label ? data.phoneTypeId.label : data.phoneType\r\n        const isPrimary = data.isPrimaryPhoneNumber\r\n\r\n        const isDuplicate = listData.some(item => item.phoneNumber === data.phoneNumber && item.phoneCode === phoneCode && item.id !== data.id);\r\n        if (!isDuplicate) {\r\n            let updatedData = listData.map(item => {\r\n                if (item.id === data.id) {\r\n                    return {\r\n                        ...item,\r\n                        phoneCode: phoneCode,\r\n                        phoneTypeId: phoneTypeId,\r\n                        phoneType: phoneType,\r\n                        phoneNumber: phoneNumberWithoutCode,\r\n                        // extension: data.extension ? data.extension : 0,\r\n                        extension: data.extension > 0 ? data.extension : '-',\r\n                        isPrimary: isPrimary\r\n                    };\r\n                } else if (isPrimary) {\r\n                    const phoneCode = item.phoneNumber.phoneCode && typeof item.phoneNumber === \"object\" ? item.phoneNumber.phoneCode : item.phoneCode;\r\n                    const fullPhoneNumber = item.phoneNumber.PhoneNumber && typeof item.phoneNumber === \"object\" ? item.phoneNumber.PhoneNumber : item.phoneNumber;\r\n                    const phoneNumberWithoutCode = fullPhoneNumber.startsWith(normalizedPhoneCode) ? fullPhoneNumber.slice(normalizedPhoneCode.length) : fullPhoneNumber;\r\n                    return {\r\n                        ...item,\r\n                        phoneCode: phoneCode,\r\n                        phoneNumber: phoneNumberWithoutCode,\r\n                        isPrimary: false\r\n                    };\r\n                } else {\r\n                    const phoneCode = item.phoneNumber.phoneCode && typeof item.phoneNumber === \"object\" ? item.phoneNumber.phoneCode : item.phoneCode;\r\n                    const fullPhoneNumber = item.phoneNumber.PhoneNumber && typeof item.phoneNumber === \"object\" ? item.phoneNumber.PhoneNumber : item.phoneNumber;\r\n                    const phoneNumberWithoutCode = fullPhoneNumber.startsWith(normalizedPhoneCode) ? fullPhoneNumber.slice(normalizedPhoneCode.length) : fullPhoneNumber;\r\n                    return {\r\n                        ...item,\r\n                        phoneCode: phoneCode,\r\n                        phoneNumber: phoneNumberWithoutCode,\r\n                    }\r\n                }\r\n            });\r\n            setListData(updatedData);\r\n            ToastService.success(successMessage);\r\n            onResetData?.();\r\n            onSuccess?.();\r\n        } else {\r\n            ToastService.warning(duplicateMessage);\r\n        }\r\n\r\n    } else {\r\n        ToastService.success(inValidDate);\r\n        onResetData?.();\r\n        onSuccess?.();\r\n    }\r\n}\r\n\r\n\r\naddPhoneNumberData.propTypes = {\r\n    data: PropTypes.shape({\r\n        phoneCode: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\r\n        phoneTypeId: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\r\n        phoneType: PropTypes.string,\r\n        isPrimaryPhoneNumber: PropTypes.bool,\r\n        extension: PropTypes.number,\r\n        phoneNumber: PropTypes.string.isRequired\r\n    }).isRequired,\r\n    contactId: PropTypes.number.isRequired,\r\n    listData: PropTypes.arrayOf(PropTypes.shape({\r\n        phoneNumber: PropTypes.string.isRequired,\r\n        phoneCode: PropTypes.string.isRequired,\r\n        id: PropTypes.number.isRequired,\r\n        phoneTypeId: PropTypes.string,\r\n        phoneType: PropTypes.string,\r\n        isPrimary: PropTypes.bool,\r\n        extension: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\r\n    })),\r\n    setListData: PropTypes.func.isRequired,\r\n    successMessage: PropTypes.string.isRequired,\r\n    maxLengthMessage: PropTypes.string.isRequired,\r\n    duplicateMessage: PropTypes.string.isRequired,\r\n    onResetData: PropTypes.func.isRequired,\r\n    onSuccess: PropTypes.func.isRequired\r\n};\r\nupdatePhoneNumberData.propTypes = {\r\n    data: PropTypes.shape({\r\n        id: PropTypes.number.isRequired,\r\n        phoneCode: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\r\n        phoneTypeId: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\r\n        phoneType: PropTypes.string,\r\n        isPrimaryPhoneNumber: PropTypes.bool,\r\n        extension: PropTypes.number,\r\n        phoneNumber: PropTypes.string.isRequired\r\n    }).isRequired,\r\n    listData: PropTypes.arrayOf(PropTypes.shape({\r\n        phoneNumber: PropTypes.string.isRequired,\r\n        phoneCode: PropTypes.string.isRequired,\r\n        id: PropTypes.number.isRequired,\r\n        phoneTypeId: PropTypes.string,\r\n        phoneType: PropTypes.string,\r\n        isPrimary: PropTypes.bool,\r\n        extension: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\r\n    })),\r\n    setListData: PropTypes.func.isRequired,\r\n    successMessage: PropTypes.string.isRequired,\r\n    duplicateMessage: PropTypes.string.isRequired,\r\n    inValidDate: PropTypes.string.isRequired,\r\n    onResetData: PropTypes.func.isRequired,\r\n    onSuccess: PropTypes.func.isRequired\r\n};","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useImperativeHandle, useRef, useState } from \"react\";\r\nimport PropTypes from 'prop-types';\r\n//** Lib's */\r\nimport { Message } from \"../../EmailAddress/utils/ContactMessages\";\r\nimport Buttons from \"../../../../../components/ui/button/Buttons\";\r\nimport FormCreator from \"../../../../../components/Forms/FormCreator\";\r\nimport { addEditContactsFormData, initialPhoneTypeState } from \"../config/AddEditContactsForm.data\";\r\nimport CenterModel from \"../../../../../components/ui/centerModel/CenterModel\";\r\nimport {\r\n  addPhoneNumberData,\r\n  updatePhoneNumberData,\r\n} from \"../Util/ContactPhoneNumberUtil\";\r\n\r\nconst AddEditContactNumber = ({\r\n  contactId,\r\n  phoneNumberList,\r\n  setPhoneNumberList,\r\n  editFormData,\r\n  handleToggleModal,\r\n  showModal,\r\n  isEdit,\r\n  onSuccess,\r\n  newPhoneCode,\r\n  addeditRef,\r\n  isOrderManage\r\n}) => {\r\n  //** State */\r\n  const ref = useRef();\r\n  const [formData, setFormData] = useState(addEditContactsFormData);\r\n\r\n  //** Handle Changes */\r\n  const handleAddEdit = () => {\r\n    let data = ref.current.getFormData();\r\n    if (data) {\r\n      if (!data.id) {\r\n        let req = {\r\n          ...data,\r\n          phoneTypeId: data.phoneTypeId && typeof data.phoneTypeId === \"object\" ? data.phoneTypeId : initialPhoneTypeState,\r\n          isPrimary: data.isPrimaryPhoneNumber,\r\n        };\r\n        addPhoneNumberData(\r\n          req,\r\n          contactId,\r\n          phoneNumberList,\r\n          setPhoneNumberList,\r\n          Message.ContactNumberAdded,\r\n          Message.ContactNumberMaxLength,\r\n          Message.ContactNumberDuplicate,\r\n          onResetData,\r\n          onSuccess\r\n        );\r\n      } else if (data.id) {\r\n        let req = {\r\n          ...data,\r\n          isPrimary: data.isPrimaryPhoneNumber,\r\n        };\r\n        updatePhoneNumberData(\r\n          req,\r\n          phoneNumberList,\r\n          setPhoneNumberList,\r\n          Message.ContactNumberUpdated,\r\n          Message.ContactNumberDuplicate,\r\n          Message.InvalidData,\r\n          onResetData,\r\n          onSuccess\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleCheckBoxChange = (data) => {\r\n    let req = {\r\n      ...data,\r\n      isPrimaryPhoneNumber: data.isPrimary,\r\n    };\r\n    updatePhoneNumberData(req, phoneNumberList, setPhoneNumberList, Message.ContactNumberUpdated, Message.ContactNumberDuplicate, Message.InvalidData);\r\n  }\r\n\r\n  //** Use Imperative Handle */\r\n  useImperativeHandle(addeditRef, () => ({\r\n    callChildFunction: handleCheckBoxChange\r\n  }));\r\n\r\n  //** UseEffect */\r\n  useEffect(() => {\r\n    if (isEdit && editFormData) {\r\n      let form = { ...addEditContactsFormData };\r\n      let obj = {\r\n        PhoneNumber: editFormData?.phoneCode + editFormData?.phoneNumber\r\n      }\r\n      form.initialState = {\r\n        extension: editFormData.extension,\r\n        id: editFormData.id,\r\n        isPrimaryPhoneNumber: editFormData.isPrimary,\r\n        // phoneCode: editFormData.phoneCode,\r\n        phoneId: editFormData.phoneId,\r\n        phoneNumber: obj,\r\n        phoneType: editFormData.phoneType,\r\n        phoneTypeId: editFormData.phoneTypeId,\r\n      };\r\n      setFormData(form);\r\n    } else if (isEdit === false && newPhoneCode) {\r\n      let form = { ...addEditContactsFormData };\r\n      form.initialState = {\r\n        ...form.initialState,\r\n        //phoneCode: newPhoneCode,\r\n      };\r\n      setFormData(form);\r\n    }\r\n  }, [isEdit, editFormData]);\r\n\r\n  //** Reset Data */\r\n  const onResetData = () => {\r\n    let form = { ...addEditContactsFormData };\r\n    form.initialState = { ...addEditContactsFormData.initialState };\r\n    setFormData(form);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isOrderManage) {\r\n      onResetData()\r\n    }\r\n  }, [isOrderManage])\r\n\r\n  return (\r\n    <CenterModel\r\n      showModal={showModal}\r\n      handleToggleModal={handleToggleModal}\r\n      modalTitle=\"Add/Edit Contact\"\r\n      modelSizeClass=\"w-40\"\r\n    >\r\n      <div className=\"row  phone-numer-card\">\r\n        <div className=\"col-md-12 add-edit-phoneForm\">\r\n          <div className=\"row vertical-form\">\r\n            <FormCreator config={formData} ref={ref} {...formData} />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-12 mt-2\">\r\n          <div className=\"d-flex align-item-center justify-content-end\">\r\n            <Buttons\r\n              buttonTypeClassName=\"theme-button\"\r\n              buttonText={`${isEdit ? \"Update\" : \"Add\"}`}\r\n              onClick={handleAddEdit}\r\n            />\r\n            <Buttons\r\n              buttonTypeClassName=\"dark-btn ml-5\"\r\n              buttonText=\"Cancel\"\r\n              onClick={handleToggleModal}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </CenterModel>\r\n  );\r\n};\r\nAddEditContactNumber.propTypes = {\r\n  contactId: PropTypes.number.isRequired,\r\n  phoneNumberList: PropTypes.arrayOf(PropTypes.shape({\r\n    phoneNumber: PropTypes.string.isRequired,\r\n    //phoneCode: PropTypes.string.isRequired,\r\n    id: PropTypes.number.isRequired,\r\n    phoneTypeId: PropTypes.number,\r\n    phoneType: PropTypes.string,\r\n    isPrimary: PropTypes.bool,\r\n    extension: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\r\n  })).isRequired,\r\n  setPhoneNumberList: PropTypes.func.isRequired,\r\n  editFormData: PropTypes.shape({\r\n    extension: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n    id: PropTypes.number,\r\n    isPrimary: PropTypes.bool,\r\n    // phoneCode: PropTypes.string,\r\n    phoneId: PropTypes.number,\r\n    phoneNumber: PropTypes.string,\r\n    phoneType: PropTypes.string,\r\n    phoneTypeId: PropTypes.number\r\n  }),\r\n  handleToggleModal: PropTypes.func.isRequired,\r\n  showModal: PropTypes.bool.isRequired,\r\n  isEdit: PropTypes.bool.isRequired,\r\n  onSuccess: PropTypes.func.isRequired\r\n};\r\nexport default AddEditContactNumber;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./CenterModel.scss\";\r\nimport { Modal } from \"react-bootstrap\";\r\n\r\nconst CenterModel = ({ isApprovalValidate, showModal, handleToggleModal, children, ...props }) => {\r\n  return (\r\n    <Modal\r\n      className={`center-model-popup ${props.modelSizeClass}`}\r\n      show={showModal}\r\n      onHide={handleToggleModal}\r\n      keyboard={!isApprovalValidate}\r\n      backdrop={isApprovalValidate ? \"static\" : true}\r\n    >\r\n      <Modal.Header closeButton={!isApprovalValidate}>\r\n        <div className=\"model-title\">{props.modalTitle}</div>\r\n      </Modal.Header>\r\n      <Modal.Body>{children}</Modal.Body>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nCenterModel.propTypes = {\r\n  isApprovalValidate: PropTypes.bool,\r\n  showModal: PropTypes.bool.isRequired,\r\n  handleToggleModal: PropTypes.func.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n  modelSizeClass: PropTypes.string,\r\n  modalTitle: PropTypes.string\r\n};\r\nexport default CenterModel;\r\n"],"names":["addPhoneNumberData","data","contactId","listData","setListData","successMessage","maxLengthMessage","duplicateMessage","onResetData","onSuccess","phoneCode","phoneNumber","fullPhoneNumber","PhoneNumber","normalizedPhoneCode","phoneNumberWithoutCode","startsWith","slice","length","request","id","phoneTypeId","value","phoneType","label","isPrimary","isPrimaryPhoneNumber","extension","ToastService","warning","some","item","addData","map","push","success","updatePhoneNumberData","inValidDate","updatedData","propTypes","PropTypes","isRequired","_ref","phoneNumberList","setPhoneNumberList","editFormData","handleToggleModal","showModal","isEdit","newPhoneCode","addeditRef","isOrderManage","ref","useRef","formData","setFormData","useState","addEditContactsFormData","handleCheckBoxChange","req","Message","ContactNumberUpdated","ContactNumberDuplicate","InvalidData","useImperativeHandle","callChildFunction","useEffect","form","obj","initialState","phoneId","_jsx","CenterModel","modalTitle","modelSizeClass","children","_jsxs","className","FormCreator","config","Buttons","buttonTypeClassName","buttonText","onClick","handleAddEdit","current","getFormData","initialPhoneTypeState","ContactNumberAdded","ContactNumberMaxLength","isApprovalValidate","props","Modal","show","onHide","keyboard","backdrop","Header","closeButton","Body"],"sourceRoot":""}