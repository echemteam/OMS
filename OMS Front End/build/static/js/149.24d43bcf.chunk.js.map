{"version":3,"file":"static/js/149.24d43bcf.chunk.js","mappings":"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","sources":["common/features/component/Document/feature/AddDocument.js"],"sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { DocumentFormData } from \"../Config/DocuementsData\";\r\nimport Buttons from \"../../../../../components/ui/button/Buttons\";\r\nimport FormCreator from \"../../../../../components/Forms/FormCreator\";\r\n//** Service's */\r\nimport ToastService from \"../../../../../services/toastService/ToastService\";\r\nimport { FieldSettingType, ModulePathName } from \"../../../../../utils/Enums/commonEnums\";\r\nimport PropTypes from 'prop-types';\r\nimport { onResetForm } from \"../../../../../utils/FormFields/ResetForm/handleResetForm\";\r\nimport { setFieldSetting } from \"../../../../../utils/FormFields/FieldsSetting/SetFieldSetting\";\r\n\r\nconst AddDocument = ({ showModal, keyId, isSupplier, addDocuments, handleToggleModal, onSuccess, isEditablePage, customerStatusId }) => {\r\n\r\n    const ref = useRef();\r\n    const [formData, setFormData] = useState(DocumentFormData);\r\n\r\n    /**\r\n        * This hook dynamically sets the API call based on the module (customer or supplier).\r\n        * The API endpoint and parameters are configured within the SupplierDocumentDetail OR CustomerDocumentDetail component.\r\n    */\r\n    const [add, { isLoading: isAddLoading, isSuccess: isAddSuccess, data: isAddData }] = addDocuments();\r\n\r\n    useEffect(() => {\r\n        if (showModal) {\r\n            setFieldSetting(formData, 'name', FieldSettingType.DISABLED, true);\r\n            onResetForm(formData, setFormData, DocumentFormData.initialState);\r\n        }\r\n    }, [showModal]);\r\n\r\n    useEffect(() => {\r\n        if (isAddSuccess && isAddData) {\r\n            if (isAddData.errorMessage.includes('Document name')) {\r\n                ToastService.warning(isAddData.errorMessage);\r\n                return;\r\n            } else if (isAddData.errorMessage.includes('exists')) {\r\n                ToastService.warning(isAddData.errorMessage);\r\n                return;\r\n            }\r\n            onSuccess();\r\n            onResetForm(formData, setFormData, DocumentFormData.initialState);\r\n            ToastService.success(isAddData.errorMessage);\r\n        }\r\n    }, [isAddSuccess, isAddData]);\r\n\r\n    const handleSave = async () => {\r\n        const data = ref.current.getFormData();\r\n        if (data) {\r\n            const transformedData = buildTransformedDocumentData(data, isSupplier, keyId,);\r\n            const documentList = [\r\n                {\r\n                    name: data?.name,\r\n                    attachment: data?.attachment.fileName,\r\n                    base64File: data?.attachment.base64Data,\r\n                    documentTypeId: transformedData?.documentTypeId,\r\n                    documentType: transformedData.documentType\r\n                }\r\n            ];\r\n            const requestData = {\r\n                storagePath: isSupplier ? ModulePathName.SUPPLIER : ModulePathName.CUSTOMER,\r\n                [isSupplier ? 'supplierId' : 'customerId']: keyId,\r\n                documentInfoList: documentList,\r\n            };\r\n\r\n            add(requestData);\r\n        }\r\n        // }\r\n    };\r\n\r\n\r\n    const buildTransformedDocumentData = (data, isSupplier, keyId) => {\r\n        const transformDocumentTypeData = (data) => {\r\n            if (data && typeof data === 'object') {\r\n                return {\r\n                    id: data.value || data.id || 0,\r\n                    type: data.text || \"\",\r\n                };\r\n            }\r\n            return {\r\n                id: data || 0,\r\n                type: \"\",\r\n            };\r\n        };\r\n\r\n\r\n        const { id: documentTypeId, type: documentType } = transformDocumentTypeData(data?.documentTypeId);\r\n\r\n        return {\r\n            ...data,\r\n            [isSupplier ? 'supplierId' : 'customerId']: keyId,\r\n            documentTypeId,\r\n            documentType,\r\n            createdAt: new Date(),\r\n\r\n        };\r\n    };\r\n\r\n    const onFormDataChange = (updatedData) => {\r\n        const fileName = (updatedData.attachment && updatedData.attachment.fileName) || \"\";\r\n        setFormData(prevFormData => ({\r\n            ...prevFormData,\r\n            initialState: {\r\n                ...updatedData,\r\n                name: fileName\r\n            }\r\n        }));\r\n    }\r\n\r\n    const handleDropdownAction = (data, dataField) => {\r\n        if (dataField === 'documentTypeId') {\r\n            if (!data) {\r\n                setFieldSetting(formData, 'documentTypeId', FieldSettingType.ISTEXT, data);\r\n                ref.current.updateFormFieldValue({ documentTypeId: null });\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    //** Action Handler */\r\n    const formActionHandler = {\r\n        DA_CHANGED: handleDropdownAction,\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"row add-documentForm\">\r\n            <FormCreator config={formData} ref={ref} {...formData} onFormDataChange={onFormDataChange}\r\n                onDropdownAction={formActionHandler} />\r\n            <div className=\"col-md-12 mt-2\">\r\n                <div className=\"d-flex align-item-end justify-content-end\">\r\n                    <div className=\"d-flex align-item-end\">\r\n                        <Buttons\r\n                            buttonTypeClassName=\"theme-button\"\r\n                            // buttonText={editDocumentData ? \"Update\" : \"Add\"}\r\n                            buttonText=\"Add\"\r\n                            onClick={handleSave}\r\n                            isLoading={isAddLoading} />\r\n                        {/* <Buttons\r\n                            buttonTypeClassName=\"theme-button ml-5\"\r\n                            buttonText={editDocumentData ? \"Update and Close\" : \"Add and Close\"}\r\n                            onClick={handleSave}\r\n                            isLoading={isAddLoading} /> */}\r\n                        <Buttons\r\n                            buttonTypeClassName=\"dark-btn ml-5\"\r\n                            buttonText=\"Cancel\"\r\n                            onClick={handleToggleModal} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nAddDocument.propTypes = {\r\n    keyId: PropTypes.number.isRequired,\r\n    isSupplier: PropTypes.bool.isRequired,\r\n    addDocuments: PropTypes.func.isRequired,\r\n    handleToggleModal: PropTypes.func.isRequired,\r\n    onSuccess: PropTypes.func.isRequired\r\n};\r\nexport default AddDocument;"],"names":["_ref","showModal","keyId","isSupplier","addDocuments","handleToggleModal","onSuccess","isEditablePage","customerStatusId","ref","useRef","formData","setFormData","useState","DocumentFormData","add","isLoading","isAddLoading","isSuccess","isAddSuccess","data","isAddData","useEffect","setFieldSetting","FieldSettingType","DISABLED","onResetForm","initialState","errorMessage","includes","ToastService","warning","success","buildTransformedDocumentData","id","documentTypeId","type","documentType","value","text","transformDocumentTypeData","createdAt","Date","formActionHandler","DA_CHANGED","handleDropdownAction","dataField","ISTEXT","current","updateFormFieldValue","_jsxs","className","children","_jsx","FormCreator","config","onFormDataChange","updatedData","fileName","attachment","prevFormData","name","onDropdownAction","Buttons","buttonTypeClassName","buttonText","onClick","async","getFormData","transformedData","documentList","base64File","base64Data","requestData","storagePath","ModulePathName","SUPPLIER","CUSTOMER","documentInfoList"],"sourceRoot":""}