{"version":3,"file":"static/js/5126.17e7c2fb.chunk.js","mappings":"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","sources":["pages/order/orderDetail/feature/ordersummary/feature/CustomerDetailsModel.js","pages/order/orderDetail/feature/ordersummary/OrderSummary.js","utils/StatusColors/StatusColors.js"],"sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Iconify from \"../../../../../../components/ui/iconify/Iconify\";\r\nimport { useLazyGetCustomersInfoByIdQuery } from \"../../../../../../app/services/ApprovalAPI\";\r\nimport { getLabelClass } from \"../../../../../../utils/StatusColors/StatusColors\";\r\n\r\nconst CustomerDetailsModel = ({ customerId }) => {\r\n  const [customerBasicDetails, setCustomerBasicDetails] = useState(null);\r\n\r\n  const [\r\n    getCustomerDetailsByCustomerId,\r\n    {\r\n      isFetching: isCustomerFetching,\r\n      isSuccess: isCustomerFetched,\r\n      data: customerByIdData,\r\n    },\r\n  ] = useLazyGetCustomersInfoByIdQuery();\r\n\r\n  const getInitials = (firstName, lastName) => {\r\n    return (\r\n      (firstName?.[0] || \"\").toUpperCase() + (lastName?.[0] || \"\").toUpperCase()\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (customerId) {\r\n      getCustomerDetailsByCustomerId(customerId);\r\n    }\r\n  }, [customerId]);\r\n\r\n  useEffect(() => {\r\n    if (!isCustomerFetching && isCustomerFetched && customerByIdData) {\r\n      setCustomerBasicDetails(customerByIdData);\r\n    }\r\n  }, [isCustomerFetching, isCustomerFetched, customerByIdData]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"customer-popup-sec\">\r\n        <div className=\"popup-body-sec\">\r\n          <div className=\"name-icon-status\">\r\n            <div className=\"icon-sec\">\r\n              {getInitials(\r\n                customerBasicDetails?.name,\r\n                customerBasicDetails?.name\r\n              )}\r\n            </div>\r\n            <div className=\"name-status\">\r\n              <div className=\"name-sec\">{customerBasicDetails?.name}</div>\r\n              <div className={`status-sec ${getLabelClass(customerBasicDetails?.status)}`}>\r\n                {customerBasicDetails?.status}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"desc-sec-bottom\">\r\n            {/* Email Start */}\r\n            <div className=\"icon-detail\">\r\n              <span className=\"icon-part\">\r\n                <Iconify icon=\"ic:round-email\" />\r\n              </span>\r\n              <span className=\"info-part\">\r\n                <div class=\"values\">{customerBasicDetails?.emailAddress}</div>\r\n                {/* <span class=\"primary-email\"></span> */}\r\n              </span>\r\n            </div>\r\n            {/* Email End */}\r\n            {/* Phone Start */}\r\n            {/* <div className=\"icon-detail\">\r\n              <span className=\"icon-part contact-icon\">\r\n                <Iconify icon=\"ic:round-phone\" />\r\n              </span>\r\n              <span className=\"info-part contact-info \">\r\n                <div class=\"values\">+91 9173010672</div>\r\n                <span class=\"primary-email\"></span>\r\n              </span>\r\n            </div> */}\r\n            {/* Phone End */}\r\n            {/* Web Start */}\r\n            <div className=\"icon-detail\">\r\n              <span className=\"icon-part web-icon\">\r\n                <Iconify icon=\"mdi:web\" />\r\n              </span>\r\n              <span className=\"info-part\">\r\n                <div class=\"values\">{customerBasicDetails?.website}</div>\r\n              </span>\r\n            </div>\r\n            {/* Web End */}\r\n          </div>\r\n          <div className=\"customer-detail\">\r\n            <div className=\"key-value\">\r\n              <div className=\"key-part\">R-User</div>\r\n              <div className=\"value-part\">\r\n                {customerBasicDetails?.responsibleUserName}\r\n              </div>\r\n            </div>\r\n            <div className=\"key-value\">\r\n              <div className=\"key-part\">Country</div>\r\n              <div className=\"value-part\">\r\n                {customerBasicDetails?.countryName}\r\n              </div>\r\n            </div>\r\n            <div className=\"key-value\">\r\n              <div className=\"key-part\">Tax Id</div>\r\n              <div className=\"value-part\">\r\n                {customerBasicDetails?.taxId}\r\n              </div>\r\n            </div>\r\n            <div className=\"key-value\">\r\n              <div className=\"key-part\">Group Type</div>\r\n              <div className=\"value-part\">\r\n                {customerBasicDetails?.type}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CustomerDetailsModel;\r\n","import React, { lazy, useEffect, useRef, useState } from \"react\";\r\nimport CardSection from \"../../../../../components/ui/card/CardSection\";\r\nimport Iconify from \"../../../../../components/ui/iconify/Iconify\";\r\nimport SidebarModel from \"../../../../../components/ui/sidebarModel/SidebarModel\";\r\nimport { AppIcons } from \"../../../../../data/appIcons\";\r\nimport CustomerDetailsModel from \"./feature/CustomerDetailsModel\";\r\nimport formatDate from \"../../../../../components/FinalMolGrid/libs/formatDate\";\r\nimport { useLazyDownloadDocumentQuery } from \"../../../../../app/services/orderAPI\";\r\nimport ToastService from \"../../../../../services/toastService/ToastService\";\r\nimport DataLoader from \"../../../../../components/ui/dataLoader/DataLoader\";\r\nimport FileViewer from \"react-file-viewer\";\r\n\r\nconst UpdateOrderDetails = lazy(() => import(\"./feature/UpdateOrderDetails\"))\r\n\r\nconst OrderSummary = ({ orderId, orderDetails, onRefreshOrderDetails, isOrderDetailsFetch }) => {\r\n\r\n  const orderDetailRef = useRef();\r\n  const [getFileType, setGetFileType] = useState([]);\r\n  const [isModelOpenPDF, setIsModelOpenPDF] = useState(false);\r\n  const [selectedDocument, setSelectedDocument] = useState(null);\r\n  const [ordersummaryDetails, setOrderSummaryDetails] = useState(null);\r\n\r\n  const [\r\n    Downalod,\r\n    {\r\n      isFetching: isDownalodFetching,\r\n      isSuccess: isDownalodSucess,\r\n      data: isDownalodData,\r\n    },\r\n  ] = useLazyDownloadDocumentQuery();\r\n\r\n  const details = orderDetails?.orderDocumentList;\r\n  const documentNames = details?.find((doc) => doc.documentName === \"\")  \r\n\r\n\r\n  const handleToggleModalPDF = () => {\r\n        if (orderDetails?.poNumber) {\r\n      // const documentNames = orderDetails.orderDocumentList?.filter(doc => doc.documentName).map(doc => doc.documentName)[0];\r\n      const detail = details.find(\r\n        (doc) => doc.documentTypeId === 0 || doc.documentTypeId === \"\"\r\n      );\r\n      if (detail) {\r\n        handleDocumentAction(detail?.documentName);\r\n      } else {\r\n        ToastService.error(\"File not found\");\r\n      }\r\n    } else {\r\n      setIsModelOpenPDF(false);\r\n    }\r\n  };\r\n\r\n  const onSidebarClosePDF = () => {\r\n    setIsModelOpenPDF(false);\r\n    setSelectedDocument(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (orderDetails) {\r\n      setOrderSummaryDetails(orderDetails);\r\n    }\r\n  }, [orderDetails]);\r\n\r\n  useEffect(() => {\r\n    if (!isDownalodFetching && isDownalodSucess && isDownalodData) {\r\n      const fileData = isDownalodData.fileData;\r\n      const blob = new Blob([fileData], { type: fileData.type });\r\n      const fileURL = URL.createObjectURL(blob);\r\n      setSelectedDocument(fileURL);\r\n      setIsModelOpenPDF(true);\r\n      setGetFileType(determineFileType(isDownalodData.fileName));\r\n    }\r\n  }, [isDownalodFetching, isDownalodSucess, isDownalodData]);\r\n\r\n  const handleDocumentAction = (fileName) => {\r\n    setSelectedDocument(null);\r\n    let request = {\r\n      folderName: \"Order\",\r\n      keyId: orderDetails?.orderId,\r\n      fileName: fileName,\r\n    };\r\n\r\n    Downalod(request);\r\n  };\r\n\r\n  const determineFileType = (fileName) => {\r\n    const extension = fileName.split(\".\").pop().toLowerCase();\r\n    switch (extension) {\r\n      case \"pdf\":\r\n        return \"pdf\";\r\n      case \"docx\":\r\n        return \"docx\";\r\n      case \"ppt\":\r\n      case \"pptx\":\r\n        return \"pptx\";\r\n      case \"xlsx\":\r\n        return \"xlsx\";\r\n      case \"csv\":\r\n        return \"csv\";\r\n      case \"xls\":\r\n        return \"xls\";\r\n      case \"doc\":\r\n        return \"doc\";\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  const handleEdit = () => {\r\n    if (orderDetailRef) {\r\n      orderDetailRef.current.handleToggleModal();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"icon-btn-header\">\r\n      <CardSection\r\n        cardTitle=\"Order Summary\"\r\n        rightButton={true}\r\n        buttonClassName=\"theme-button\"\r\n        // isIcon={ordersummaryDetails?.documentName ? true : false }\r\n        isIcon={true}\r\n        iconClass=\"wpf:edit\"\r\n        titleButtonClick={handleEdit}\r\n        isCenterTile={true}\r\n        CenterTitleTxt={ordersummaryDetails?.poNumber}\r\n        // CenterBtnIcon= \"icomoon-free:file-pdf\" \r\n       CenterBtnIcon={!isDownalodFetching ? (documentNames ? \"\" : \"icomoon-free:file-pdf\") :\"svg-spinners:ring-resize\" }\r\n        centerBtnTitle=\"View Purchase Order\"\r\n        centerBtnOnClick={handleToggleModalPDF}\r\n      >\r\n        {(!isOrderDetailsFetch && orderDetails) ? (\r\n          <div className=\"order-summery-list\">\r\n            <div className=\"row\">\r\n              <div className=\"col-xxl-7 col-xl-6 col-lg-6 col-md-6 col-12 custom-col-6\">\r\n                <div className=\"desc-section\">\r\n                  <div className=\"key-icon-part\">\r\n                    <Iconify icon=\"ph:user\" className=\"open-bar\" />\r\n                    <span>Cust.</span>\r\n                  </div>\r\n                  <div className=\"desc-detail\">\r\n                    {/* &nbsp;:&nbsp;<span>Arcus Bioscience Inc.</span> */}\r\n                    &nbsp;:&nbsp;\r\n                    <span className=\"name-ellipsis\">\r\n                      {ordersummaryDetails?.customerName || \"---\"}\r\n                    </span>\r\n                    <div className=\"info-icon info-user\">\r\n                      <Iconify icon=\"ep:info-filled\" className=\"info\" />\r\n                      {/* Customer Detail Model Start */}\r\n                      <CustomerDetailsModel\r\n                        customerId={orderDetails?.customerId}\r\n                      />\r\n                      {/* Customer Detail Model End */}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"desc-section\">\r\n                  <div className=\"key-icon-part\">\r\n                    <Iconify icon=\"ph:users\" className=\"open-bar\" />\r\n                    <span>Sub-Cust.</span>\r\n                  </div>\r\n                  <div className=\"desc-detail\">\r\n                    {/* &nbsp;:&nbsp;<span>Exelixis Inc.</span> */}\r\n                    &nbsp;:&nbsp;\r\n                    <span className=\"name-ellipsis\">\r\n                      {ordersummaryDetails?.subCustomerName || \"N/A\"}\r\n                    </span>\r\n                    {ordersummaryDetails?.subCustomerId ? (\r\n                      <div className=\"info-icon info-user\">\r\n                        <Iconify icon=\"ep:info-filled\" className=\"info\" />\r\n                        {/* Customer Detail Model Start */}\r\n                        <CustomerDetailsModel />\r\n                        {/* Customer Detail Model End */}\r\n                      </div>\r\n                    ) : null}\r\n                  </div>\r\n                </div>\r\n                <div className=\"desc-section\">\r\n                  <div className=\"key-icon-part\">\r\n                    <Iconify\r\n                      icon=\"material-symbols:quick-reference-outline-rounded\"\r\n                      className=\"open-bar\"\r\n                    />\r\n                    <span>Ref. No</span>\r\n                  </div>\r\n                  <div className=\"desc-detail\">\r\n                    {/* &nbsp;:&nbsp;<span>123-654</span> */}\r\n                    &nbsp;:&nbsp;\r\n                    <span>{ordersummaryDetails?.referenceNumber || \"N/A\"}</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"col-xxl-5 col-xl-6 col-lg-6 col-md-6 col-12 custom-col-6\">\r\n              <div className=\"desc-section right-status-sec\">\r\n                <div className=\"key-icon-part\">\r\n                  <Iconify icon=\"f7:status\" className=\"open-bar\" />\r\n                  <span>Status</span>\r\n                </div>\r\n                <div className=\"desc-detail\">\r\n                  &nbsp;:&nbsp;\r\n                  {/* <span className=\"status pending\">Pending</span> */}\r\n                  <span className=\"status pending\">\r\n                    {ordersummaryDetails?.status}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n                <div className=\"desc-section right-status-sec\">\r\n                  <div className=\"key-icon-part\">\r\n                    <Iconify icon=\"f7:status\" className=\"open-bar\" />\r\n                    <span>Sub-Status</span>\r\n                  </div>\r\n                  <div className=\"desc-detail\">\r\n                    &nbsp;:&nbsp;\r\n                    {/* <span className=\"status in-transit\">In Transit</span> */}\r\n                    <span className=\"status in-transit\">\r\n                      {ordersummaryDetails?.subStatus}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n                <div className=\"desc-section right-status-sec\">\r\n                  <div className=\"key-icon-part\">\r\n                    <Iconify icon=\"uil:calender\" className=\"open-bar\" />\r\n                    <span>Recv. Date</span>\r\n                  </div>\r\n                  <div className=\"desc-detail\">\r\n                    {/* &nbsp;:&nbsp;<span>26 Oct 2024</span> */}\r\n                    &nbsp;:&nbsp;\r\n                    <span>\r\n                      {formatDate(\r\n                        ordersummaryDetails?.orderReceivedDate,\r\n                        \"MM/DD/YYYY\"\r\n                      )}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <DataLoader />\r\n        )}\r\n      </CardSection>\r\n\r\n      \r\n      <SidebarModel\r\n        modalTitle=\"PO PDF\"\r\n        contentClass=\"content-50\"\r\n        onClose={onSidebarClosePDF}\r\n        modalTitleIcon={AppIcons.AddIcon}\r\n        isOpen={isModelOpenPDF}\r\n        showToggle={true}\r\n      >\r\n        <div className=\"model-height-fix doc-view\">\r\n          {selectedDocument && getFileType ? (\r\n            getFileType === \"pdf\" ? (\r\n              <div className=\"pdf-iframe\">\r\n                <iframe\r\n                  src={selectedDocument}\r\n                  title=\"PDF Preview\"\r\n                  style={{ width: \"100%\", height: \"200%\" }}\r\n                />\r\n              </div>\r\n            ) : (\r\n              <FileViewer\r\n                fileType={getFileType}\r\n                filePath={selectedDocument}\r\n                onError={(error) => console.error(\"Error:\", error)}\r\n              />\r\n            )\r\n          ) : null}\r\n        </div>\r\n      </SidebarModel>\r\n      <UpdateOrderDetails orderId={orderId} orderDetailRef={orderDetailRef} onRefreshOrderDetails={onRefreshOrderDetails} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrderSummary;\r\n","export const getLabelClass = (value) => {\r\n    switch (value) {\r\n      case \"Active\":\r\n        return \"status-btn badge-gradient-success\";\r\n      case \"Open\":\r\n        return \"status-btn badge-gradient-info\";\r\n      case \"In Active\":\r\n        return \"status-btn badge-gradient-danger\";\r\n      case \"Pending\":\r\n        return \"status-btn badge-gradient-Pending\";\r\n      case \"In progress\":\r\n        return \"status-btn badge-gradient-theme\";\r\n      case \"Submitted\":\r\n        return \"status-btn badge-gradient-Submitted\";\r\n      case \"Approved\":\r\n        return \"status-btn badge-gradient-Approved\";\r\n      case \"Freeze\":\r\n        return \"status-btn badge-gradient-Frozen\";\r\n      case \"Block\":\r\n        return \"status-btn badge-gradient-Blocked\";\r\n      case \"Reject\":\r\n        return \"status-btn badge-gradient-reject\";\r\n      case \"Disable\":\r\n        return \"status-btn badge-gradient-disabled\";\r\n      default:\r\n        return \"status-btn badge-gradient-info\";\r\n    }\r\n  };"],"names":["_ref","customerId","customerBasicDetails","setCustomerBasicDetails","useState","getCustomerDetailsByCustomerId","isFetching","isCustomerFetching","isSuccess","isCustomerFetched","data","customerByIdData","useLazyGetCustomersInfoByIdQuery","useEffect","_jsx","_Fragment","children","className","_jsxs","firstName","name","lastName","toUpperCase","getLabelClass","status","Iconify","icon","class","emailAddress","website","responsibleUserName","countryName","taxId","type","getInitials","UpdateOrderDetails","lazy","orderId","orderDetails","onRefreshOrderDetails","isOrderDetailsFetch","orderDetailRef","useRef","getFileType","setGetFileType","isModelOpenPDF","setIsModelOpenPDF","selectedDocument","setSelectedDocument","ordersummaryDetails","setOrderSummaryDetails","Downalod","isDownalodFetching","isDownalodSucess","isDownalodData","useLazyDownloadDocumentQuery","details","orderDocumentList","documentNames","find","doc","documentName","fileData","blob","Blob","fileURL","URL","createObjectURL","determineFileType","fileName","handleDocumentAction","request","folderName","keyId","split","pop","toLowerCase","CardSection","cardTitle","rightButton","buttonClassName","isIcon","iconClass","titleButtonClick","handleEdit","current","handleToggleModal","isCenterTile","CenterTitleTxt","poNumber","CenterBtnIcon","centerBtnTitle","centerBtnOnClick","handleToggleModalPDF","detail","documentTypeId","ToastService","error","customerName","CustomerDetailsModel","subCustomerName","subCustomerId","referenceNumber","subStatus","formatDate","orderReceivedDate","DataLoader","SidebarModel","modalTitle","contentClass","onClose","onSidebarClosePDF","modalTitleIcon","AppIcons","AddIcon","isOpen","showToggle","src","title","style","width","height","FileViewer","fileType","filePath","onError","console","value"],"sourceRoot":""}