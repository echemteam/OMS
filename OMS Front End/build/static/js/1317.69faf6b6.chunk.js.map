{"version":3,"file":"static/js/1317.69faf6b6.chunk.js","mappings":"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","sources":["pages/organization/feature/organizationHistory/OrganizationHistory.js"],"sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport NoRecordFound from \"../../../../components/ui/noRecordFound/NoRecordFound\";\r\nimport \"./OrganizationHistory.scss\";\r\nimport { useGetOrganizationHistorysMutation } from \"../../../../app/services/organizationAPI\";\r\nimport formatDate from \"../../../../lib/formatDate\";\r\nimport DataLoader from \"../../../../components/ui/dataLoader/DataLoader\";\r\nimport DateRangePicker from \"@wojtekmaj/react-daterange-picker\";\r\nimport \"@wojtekmaj/react-daterange-picker/dist/DateRangePicker.css\";\r\nimport \"react-calendar/dist/Calendar.css\";\r\nimport DropDown from \"../../../../components/ui/dropdown/DropDrown\";\r\nimport Buttons from \"../../../../components/ui/button/Buttons\";\r\nimport ToastService from \"../../../../services/toastService/ToastService\";\r\nimport { AppIcons } from \"../../../../data/appIcons\";\r\n\r\nconst OrganizationHistory = () => {\r\n  const [historyData, setHistoryData] = useState([]);\r\n  const [eventNameOptions, setEventNameOptions] = useState([]);\r\n  const [selectedEventName, setSelectedEventName] = useState(\"\");\r\n  const [\r\n    getOrganizationHistorys,\r\n    {\r\n      isLoading: isGetOrganizationHistorysLoading,\r\n      isSuccess: isGetOrganizationHistorysSuccess,\r\n      data: isGetOrganizationHistorysData,\r\n    },\r\n  ] = useGetOrganizationHistorysMutation();\r\n\r\n  const [selectedDateRange, setSelectedDateRange] = useState({\r\n    fromDate: null,\r\n    toDate: null,\r\n  });\r\n  useEffect(() => {\r\n    getListApi(1);\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n  //   if (selectedDateRange.fromDate !== null && selectedDateRange.toDate !== null) {\r\n  //     getListApi(1);\r\n  //   } else if (selectedDateRange.fromDate === null && selectedDateRange.toDate === null) {\r\n  //     getListApi(1);\r\n  //   }\r\n  // }, [selectedDateRange]);\r\n  \r\n\r\n  const getListApi = (page) => {\r\n    const request = {\r\n      pagination: {\r\n        pageNumber: page,\r\n        pageSize: 25,\r\n      },\r\n      filters: {\r\n        searchText: \"\",\r\n        \r\n      },\r\n      eventName: selectedEventName.length > 0 \r\n      ? selectedEventName.join(\",\")   \r\n      : null,\r\n      fromDate: selectedDateRange.fromDate\r\n        ? formatDate(selectedDateRange.fromDate, \"YYYY-MM-DD\")\r\n        : null,\r\n      toDate: selectedDateRange.toDate\r\n        ? formatDate(selectedDateRange.toDate, \"YYYY-MM-DD\")\r\n        : null,\r\n      sortString: \"\",\r\n    };\r\n        getOrganizationHistorys(request);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isGetOrganizationHistorysSuccess && isGetOrganizationHistorysData) {\r\n      setHistoryData(isGetOrganizationHistorysData.dataSource);\r\n      const uniqueEventNames = [\r\n        ...new Set(isGetOrganizationHistorysData.dataSource.map((event) => event.eventName))\r\n      ].map((eventName) => ({\r\n        value: eventName,\r\n        label: eventName,\r\n      }));\r\n      \r\n      setEventNameOptions(uniqueEventNames);\r\n \r\n    }\r\n  }, [isGetOrganizationHistorysSuccess, isGetOrganizationHistorysData]);\r\n  \r\n  const renderContent = () => {\r\n    if (isGetOrganizationHistorysLoading) {\r\n      return (\r\n        <div>\r\n          <DataLoader />\r\n        </div>\r\n      ); // Replace with a proper loading spinner or component\r\n    }\r\n\r\n    const handleDateRangeChange = (ranges) => {\r\n      if (ranges && ranges.length === 2) {\r\n        const fromDate = ranges[0];\r\n        const toDate = ranges[1];\r\n        setSelectedDateRange({\r\n          fromDate: fromDate,\r\n          toDate: toDate,\r\n        });\r\n      } else {\r\n        setSelectedDateRange({\r\n          fromDate: null,\r\n          toDate: null,\r\n        });\r\n      }\r\n    };\r\n    const clearDateRange = (page) => {\r\n      setSelectedDateRange({\r\n        fromDate: null,\r\n        toDate: null,\r\n      });\r\n      const request = {\r\n        pagination: {\r\n          pageNumber: page,\r\n          pageSize: 25,\r\n        },\r\n        filters: {\r\n          searchText: \"\",\r\n        },\r\n        fromDate: null,\r\n        toDate: null,\r\n        sortString: \"\",\r\n      };\r\n      getOrganizationHistorys(request);\r\n    };\r\n     \r\n   \r\n    const handleEventNameChange = (selectedOptions) => {\r\n      const selectedValues = selectedOptions ? selectedOptions.map(option => option.value) : [];\r\n      setSelectedEventName(selectedValues);\r\n      \r\n    };\r\n\r\n    const handleSearch = () => {\r\n      if (\r\n        (selectedDateRange.fromDate && selectedDateRange.toDate) ||\r\n        selectedEventName.length > 0\r\n      ) {\r\n        getListApi(1);\r\n      } else {\r\n        ToastService.warning(\"Please select value \");\r\n      }\r\n    };\r\n\r\n    const handleClear = () => {\r\n      setSelectedEventName(\"\");\r\n      setSelectedDateRange({\r\n        fromDate: null,\r\n        toDate: null,\r\n      });\r\n    \r\n       \r\n      const request = {\r\n        pagination: {\r\n          pageNumber: 1,\r\n          pageSize: 25,\r\n        },\r\n        filters: {\r\n          searchText: \"\",    \r\n        },\r\n        eventName: null,   \r\n        fromDate: null,    \r\n        toDate: null,      \r\n      \r\n      };\r\n    \r\n      getOrganizationHistorys(request);\r\n    };\r\n    \r\n    \r\n      return (\r\n        <>\r\n            {/* <h4 className=\"organization-tab-title\">History</h4> */}\r\n            <h4 className=\"organization-tab-title\">History</h4>\r\n            <div className=\"serach-bar-history\">\r\n            <div className=\"card w-100\">\r\n              <div className=\"d-flex align-items-start\">\r\n              <div className=\"pr-0 name-field\">\r\n              <DropDown\r\n                placeholder=\"Search By Event Name\"\r\n                options={eventNameOptions}\r\n                value={selectedEventName}\r\n                onChange={handleEventNameChange}\r\n                isMultiSelect={true}\r\n                closeMenuOnSelect={false}\r\n              />\r\n            </div> \r\n              <div className=\"custom-datepicker date-field input-padding-comman mb-4 ml-5\">\r\n                  <DateRangePicker\r\n                    onChange={handleDateRangeChange}\r\n                    value={[selectedDateRange.fromDate, selectedDateRange.toDate]}\r\n                    clearIcon={\r\n                      <i className=\"fa fa-times\" onClick={clearDateRange}></i>\r\n                    }\r\n                    dayPlaceholder=\"DD\"\r\n                    monthPlaceholder=\"MM\"\r\n                    yearPlaceholder=\"YYYY\"\r\n                  />\r\n                </div>\r\n                <div className=\"refresh-btn-history pl-0 ml-2\">\r\n                <Buttons\r\n                  buttonTypeClassName=\"theme-button\"\r\n                  buttonText=\"Search\"\r\n                  onClick={handleSearch}\r\n                  imagePath={AppIcons.SearchIcone}\r\n                  textWithIcon={true}\r\n                ></Buttons>\r\n                <Buttons\r\n                  buttonTypeClassName=\"dark-btn ml-2\"\r\n                  buttonText=\"Clear\"\r\n                  onClick={handleClear}\r\n                  imagePath={AppIcons.ClearIcone}\r\n                  textWithIcon={true}\r\n                ></Buttons>\r\n            </div>\r\n              </div>\r\n            </div>\r\n            </div>\r\n          {historyData.length === 0 ? (\r\n      <NoRecordFound />\r\n    ) : (\r\n          <div className=\"vertical-timeline vertical-timeline--animate vertical-timeline--one-column\">\r\n            {historyData.map((event, index) => {\r\n              const formattedDate = event.changeAt\r\n                ? formatDate(event.changeAt, \"MM/DD/YYYY hh:mm A\")\r\n                : \"\";\r\n              return (\r\n                <div\r\n                  className=\"vertical-timeline-item vertical-timeline-element\"\r\n                  key={event.organizationHistoryId || index}\r\n                >\r\n                  <div>\r\n                    <span className=\"vertical-timeline-element-icon bounce-in\">\r\n                      <i className=\"badge badge-dot badge-dot-xl badge-primary\">\r\n                        {\" \"}\r\n                      </i>\r\n                    </span>\r\n                    <div className=\"vertical-timeline-element-content bounce-in\">\r\n                      <h4 className=\"timeline-title\">\r\n                        <span className=\"mr-1\">{event.eventName}</span>\r\n                        {/* <span className=\"mr-1 font-bold\">\r\n                          {event.eventStatus}\r\n                        </span> */}\r\n                      </h4>\r\n                      <p>{event.description} by {event.name}</p>\r\n                      <span className=\"vertical-timeline-element-date\">\r\n                        {formattedDate}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          )}\r\n        </>\r\n      );\r\n    }\r\n\r\n   \r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-md-12\">\r\n        <div className=\"main-card\">{renderContent()}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrganizationHistory;\r\n"],"names":["OrganizationHistory","historyData","setHistoryData","useState","eventNameOptions","setEventNameOptions","selectedEventName","setSelectedEventName","getOrganizationHistorys","isLoading","isGetOrganizationHistorysLoading","isSuccess","isGetOrganizationHistorysSuccess","data","isGetOrganizationHistorysData","useGetOrganizationHistorysMutation","selectedDateRange","setSelectedDateRange","fromDate","toDate","useEffect","getListApi","page","request","pagination","pageNumber","pageSize","filters","searchText","eventName","length","join","formatDate","sortString","dataSource","uniqueEventNames","Set","map","event","value","label","_jsx","className","children","renderContent","DataLoader","_jsxs","_Fragment","DropDown","placeholder","options","onChange","selectedOptions","selectedValues","option","isMultiSelect","closeMenuOnSelect","DateRangePicker","ranges","clearIcon","onClick","dayPlaceholder","monthPlaceholder","yearPlaceholder","Buttons","buttonTypeClassName","buttonText","handleSearch","ToastService","warning","imagePath","AppIcons","SearchIcone","textWithIcon","handleClear","ClearIcone","NoRecordFound","index","formattedDate","changeAt","description","name","organizationHistoryId"],"sourceRoot":""}