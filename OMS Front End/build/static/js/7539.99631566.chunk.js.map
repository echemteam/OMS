{"version":3,"file":"static/js/7539.99631566.chunk.js","mappings":"mMAUA,MAAMA,EAAcC,EAAAA,MAAW,IAAM,kCAI/BC,EAAsB,CACxBC,IAAKC,EAAAA,EAAYC,mBACjBC,KAAMF,EAAAA,EAAYG,qBAoCtB,EAjC8BC,IAAyC,IAAxC,eAAEC,EAAc,eAAEC,GAAgBF,EAE7D,MAAM,WAAEG,EAAU,kBAAEC,EAAiB,mBAAEC,EAAkB,2BAAEC,IAA+BC,EAAAA,EAAAA,YAAWC,EAAAA,GAMrG,OAKIC,EAAAA,EAAAA,KAACjB,EAAW,CACRkB,YAAY,EACZT,eAAgBA,EAChBU,MAAOR,GAAc,EACrBS,YAAcR,EAA0C,KAAtBV,EAClCmB,wBAAyBC,EAAAA,GACzBC,gBAAiBC,EAAAA,GACjBC,WAAYC,EAAAA,GACZC,cAAeC,EAAAA,GACfC,cAAeC,EAAAA,GACfC,SAAUrB,EACVG,mBAAoBA,EACpBmB,mBArBmBA,KACvBlB,EAA2BH,EAAW,GAqBpC,C","sources":["pages/supplierDetails/feature/supplierAddressDetail/SupplierAddressDetails.js"],"sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\n//** Lib's */\r\nimport { securityKey } from '../../../../data/SecurityKey';\r\nimport AddSupplierContext from '../../../../utils/ContextAPIs/Supplier/AddSupplierContext';\r\n//** Service */\r\nimport { useAddAddressMutation, useDeleteAddressMutation, useUpdateAddAddressMutation } from '../../../../app/services/addressAPI';\r\nimport { useLazyGetAddresssBySupplierIdQuery, useLazyGetSupplierAddresssByAddressIdQuery } from '../../../../app/services/supplierAddressAPI';\r\n\r\nconst AddressGrid = React.lazy(() => import(\"../../../../common/features/component/Address/AddressGrid\"));\r\n\r\n//** Component's */\r\n\r\nconst supplierSecurityKey = {\r\n    ADD: securityKey.ADDSUPPLIERADDRESS,\r\n    EDIT: securityKey.EDITSUPPLIERADDRESS,\r\n}\r\n\r\nconst SuplierAddressDetails = ({ isEditablePage, supplierStatus }) => {\r\n\r\n    const { supplierId, isResponsibleUser, setIsAddressChange, getSupplierCompletionCount } = useContext(AddSupplierContext);\r\n\r\n    const getCompletionCount = () => {\r\n        getSupplierCompletionCount(supplierId);\r\n    }\r\n\r\n    return (\r\n        /**\r\n        * This component displays an AddressGrid for the supplier module.\r\n        * This hook dynamically sets the API call based on the module (customer or supplier).\r\n        */\r\n        <AddressGrid\r\n            isSupplier={true}\r\n            isEditablePage={isEditablePage}\r\n            keyId={supplierId || 0}\r\n            SecurityKey={!isResponsibleUser ? supplierSecurityKey : null}\r\n            getAddresssByCustomerId={useLazyGetAddresssBySupplierIdQuery}\r\n            getAddresssById={useLazyGetSupplierAddresssByAddressIdQuery}\r\n            addAddress={useAddAddressMutation}\r\n            updateAddress={useUpdateAddAddressMutation}\r\n            deleteAddress={useDeleteAddressMutation}\r\n            statusId={supplierStatus}\r\n            setIsAddressChange={setIsAddressChange}\r\n            getCompletionCount={getCompletionCount}\r\n        />\r\n    )\r\n}\r\n\r\nSuplierAddressDetails.propTypes = {\r\n    isEditablePage: PropTypes.bool.isRequired,\r\n};\r\nexport default SuplierAddressDetails"],"names":["AddressGrid","React","supplierSecurityKey","ADD","securityKey","ADDSUPPLIERADDRESS","EDIT","EDITSUPPLIERADDRESS","_ref","isEditablePage","supplierStatus","supplierId","isResponsibleUser","setIsAddressChange","getSupplierCompletionCount","useContext","AddSupplierContext","_jsx","isSupplier","keyId","SecurityKey","getAddresssByCustomerId","useLazyGetAddresssBySupplierIdQuery","getAddresssById","useLazyGetSupplierAddresssByAddressIdQuery","addAddress","useAddAddressMutation","updateAddress","useUpdateAddAddressMutation","deleteAddress","useDeleteAddressMutation","statusId","getCompletionCount"],"sourceRoot":""}