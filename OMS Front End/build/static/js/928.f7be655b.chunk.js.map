{"version":3,"file":"static/js/928.f7be655b.chunk.js","mappings":"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","sources":["pages/organization/feature/organizationContactDetail/config/OrganizationContact.data.js","pages/organization/feature/organizationContactDetail/OrganizationContactDetail.js"],"sourcesContent":["import { FormFieldTypes } from \"../../../../../data/formFieldType\";\r\n\r\nexport const OrganizationContactFormData = {\r\n    // name: \"Email From\",\r\n    initialState: { companyWebsite:\"\" , salesEmail:\"\" , accountsEmail: \"\" , purchaseEmail: \"\" ,customerServiceEmail: \"\",salesPhone: \"\",accountsPhone: \"\",tollFreePhone: \"\"},\r\n    formFields: [\r\n        {\r\n            id: \"companyWebsite\",\r\n            lable: \"Company Website \",\r\n            Field_Name: \"Company Website\",\r\n            fieldType: FormFieldTypes.INPUT,\r\n            dataField: \"companyWebsite\",\r\n            fieldSetting: {\r\n              placeholder: \"Enter Company Website\",\r\n              allowSpace: true,\r\n              maxLength:255,\r\n            },\r\n            validation: [{ type: \"require\" }, { type: \"website\" }],\r\n            style: {\r\n              containerCss: \"col-xxl-6 col-xl-12 col-md-12 col-12 col-12 mb-input\",\r\n            },\r\n          },\r\n        {\r\n            id: \"salesEmail\",\r\n            lable: \"Sales Email \",\r\n            Field_Name: \"Sales Email\",\r\n            fieldType: FormFieldTypes.INPUT,\r\n            dataField: \"salesEmail\",\r\n            fieldSetting: {\r\n                placeholder: \"Enter Sales Email\",\r\n                allowSpace: true,\r\n                maxLength:65,\r\n            },\r\n            validation: [{ type: \"require\" },{ type: \"email\" }],\r\n            style: {\r\n                containerCss: \"col-md-6 mb-3 mb-input relative\",\r\n            },\r\n        },\r\n        {\r\n            id: \"accountsEmail\",\r\n            lable: \"Accounts Email \",\r\n            Field_Name: \"Accounts Email\",\r\n            fieldType: FormFieldTypes.INPUT,\r\n            dataField: \"accountsEmail\",\r\n            fieldSetting: {\r\n                placeholder: \"Enter Accounts Email\",\r\n                allowSpace: true,\r\n                maxLength:65,\r\n            },\r\n            validation: [{ type: \"require\" },{ type: \"email\" }],\r\n            style: {\r\n                containerCss: \"col-md-6 mb-3 mb-input relative\",\r\n            },\r\n        },\r\n          {\r\n            id: \"purchaseEmail\",\r\n            lable: \"Purchase Email \",\r\n            Field_Name: \"Purchase Email\",\r\n            fieldType: FormFieldTypes.INPUT,\r\n            dataField: \"purchaseEmail\",\r\n            fieldSetting: {\r\n                placeholder: \"Enter Purchase Email\",\r\n                allowSpace: true,\r\n                maxLength:65,\r\n            },\r\n            validation: [{ type: \"require\" },{ type: \"email\" }],\r\n            style: {\r\n                containerCss: \"col-md-6 mb-3 mb-input relative\",\r\n            },\r\n        },\r\n        {\r\n            id: \"customerServiceEmail\",\r\n            lable: \"Customer Service Email \",\r\n            Field_Name: \"Customer Service Email\",\r\n            fieldType: FormFieldTypes.INPUT,\r\n            dataField: \"customerServiceEmail\",\r\n            fieldSetting: {\r\n                placeholder: \"Enter Customer Service Email\",\r\n                allowSpace: true,\r\n                maxLength:65,\r\n            },\r\n            validation: [{ type: \"require\" },{ type: \"email\" }],\r\n            style: {\r\n                containerCss: \"col-md-6 mb-3 mb-input relative\",\r\n            },\r\n        },\r\n       \r\n        {\r\n            id: \"salesPhone\",\r\n            lable: \"Sales Phone \",\r\n            Field_Name: \"Sales Phone\",\r\n            fieldType: FormFieldTypes.NUMERIC,\r\n            dataField: \"salesPhone\",\r\n            fieldSetting: {\r\n                placeholder: \"Enter Sales Phone\",\r\n                allowSpace: true,\r\n                maxLength: 15,\r\n            },\r\n            validation: [{ type: \"require\" }],\r\n            style: {\r\n                containerCss: \"col-md-6 mb-3 mb-input relative\",\r\n            },\r\n        },\r\n        {\r\n            id: \"accountsPhone\",\r\n            lable: \"Accounts Phone \",\r\n            Field_Name: \"Accounts Phone\",\r\n            fieldType: FormFieldTypes.NUMERIC,\r\n            dataField: \"accountsPhone\",\r\n            fieldSetting: {\r\n                placeholder: \"Enter Accounts Phone\",\r\n                allowSpace: true,\r\n                maxLength: 15,\r\n                \r\n            },\r\n            validation: [{ type: \"require\" }],\r\n            style: {\r\n                containerCss: \"col-md-6 mb-3 mb-input relative\",\r\n            },\r\n        },\r\n        {\r\n            id: \"tollFreePhone\",\r\n            lable: \"TollFree Phone \",\r\n            Field_Name: \"TollFree Phone\",\r\n            fieldType: FormFieldTypes.NUMERIC,\r\n            dataField: \"tollFreePhone\",\r\n            fieldSetting: {\r\n                placeholder: \"Enter TollFree Phone\",\r\n                allowSpace: true,\r\n                maxLength: 15,\r\n            },\r\n            validation: [{ type: \"require\" }],\r\n            style: {\r\n                containerCss: \"col-md-6 mb-3 mb-input relative\",\r\n            },\r\n        },\r\n        \r\n    ],\r\n    formSetting: {\r\n        isViewOnly: false\r\n    }\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { useRef, useState, useEffect } from \"react\";\r\nimport FormCreator from \"../../../../components/Forms/FormCreator\";\r\nimport { OrganizationContactFormData } from \"./config/OrganizationContact.data\";\r\nimport Buttons from \"../../../../components/ui/button/Buttons\";\r\nimport { useAddEditOrganizationContactDetailsMutation, useLazyGetOrganizationContactDetailsQuery } from \"../../../../app/services/organizationAPI\";\r\nimport ToastService from \"../../../../services/toastService/ToastService\";\r\nimport DataLoader from \"../../../../components/ui/dataLoader/DataLoader\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\n\r\nconst OrganizationContactDetail = (isEditablePage\r\n    ) => {\r\n    const organizationContactRef = useRef();\r\n    const [organizationContactData, setOrganizationContactData] = useState(OrganizationContactFormData);\r\n    const [addEditOrganizationContactDetails, { isLoading: isAddEditOrganizationContactDetailsLoading, isSuccess: isAddEditOrganizationContactDetailsSuccess, data: isAddEditOrganizationContactDetailsData }] = useAddEditOrganizationContactDetailsMutation();\r\n    const [getOrganizationContactDetails, { isFetching: isGetOrganizationContactDetailsFetching, isSuccess: isGetOrganizationContactDetailsSuccess, data: isGetOrganizationContactDetailsData }] = useLazyGetOrganizationContactDetailsQuery();\r\n    const [contactDetailId, setContactDetailId] = useState(0);\r\n    const [isButtonDisable, setIsButtonDisable] = useState(false);\r\n    const { formSetting } = OrganizationContactFormData;\r\n    const roles = useSelector((state) => state.auth.roles.roleName );\r\n\r\n   \r\n   useEffect(() => {\r\n    if (isEditablePage) {\r\n      if (roles?.includes(\"Admin\")) {  \r\n        setIsButtonDisable(false);\r\n        formSetting.isViewOnly = false;\r\n      } else {\r\n        setIsButtonDisable(true);\r\n        formSetting.isViewOnly = true;\r\n      }\r\n    }\r\n  }, [isEditablePage, roles]);\r\n\r\n\r\n    useEffect(() => {\r\n        if (isAddEditOrganizationContactDetailsSuccess && isAddEditOrganizationContactDetailsData) {\r\n            ToastService.success(isAddEditOrganizationContactDetailsData.errorMessage);\r\n            getOrganizationContactDetails();\r\n        }\r\n    }, [isAddEditOrganizationContactDetailsSuccess, isAddEditOrganizationContactDetailsData]);\r\n\r\n\r\n    useEffect(() => {\r\n        getOrganizationContactDetails();\r\n    }, [])\r\n\r\n    const handleAddEditContactDetail = () => {\r\n\r\n        let contactData = organizationContactRef.current.getFormData();\r\n        if (contactData) {\r\n            const request = {\r\n                ...contactData,\r\n                organizationContactDetailId: contactDetailId,\r\n                companyWebsite: contactData?.companyWebsite,\r\n                salesEmail: contactData?.salesEmail,\r\n                accountsEmail: contactData?.accountsEmail,\r\n                purchaseEmail: contactData?.purchaseEmail,\r\n                customerServiceEmail: contactData?.customerServiceEmail,\r\n                salesPhone: contactData?.salesPhone,\r\n                accountsPhone: contactData?.accountsPhone,\r\n                tollFreePhone: contactData?.tollFreePhone,\r\n\r\n            }\r\n            addEditOrganizationContactDetails(request)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!isGetOrganizationContactDetailsFetching && isGetOrganizationContactDetailsSuccess && isGetOrganizationContactDetailsData) {\r\n            let formData = { ...organizationContactData };\r\n            formData.initialState = {\r\n                ...isGetOrganizationContactDetailsData,\r\n            };\r\n            setOrganizationContactData(formData);\r\n            setContactDetailId(isGetOrganizationContactDetailsData.organizationContactDetailId);\r\n        }\r\n    }, [isGetOrganizationContactDetailsFetching, isGetOrganizationContactDetailsSuccess, isGetOrganizationContactDetailsData,]);\r\n\r\n    if (isGetOrganizationContactDetailsFetching) {\r\n        return <div><DataLoader /></div>; // Replace with a proper loading spinner or component\r\n    }\r\n\r\n    return (<>\r\n\r\n        <div className=\"row mt-2 add-address-form\">\r\n        {/* <h4 className=\"organization-tab-title\">Contact Details</h4> */}\r\n            <FormCreator config={organizationContactData}\r\n                ref={organizationContactRef}\r\n                {...organizationContactData}\r\n\r\n            />\r\n            {isEditablePage ?\r\n            <div className=\"col-md-12 mt-2\">\r\n                <div className=\"d-flex align-item-end justify-content-end\">\r\n                    <Buttons\r\n                        buttonTypeClassName=\"theme-button\"\r\n                        buttonText=\"Save\"\r\n                        onClick={handleAddEditContactDetail}\r\n                        isLoading={isAddEditOrganizationContactDetailsLoading}\r\n                        isDisable={isButtonDisable}\r\n                    />\r\n                </div>\r\n            </div> :null}\r\n        </div>\r\n    </>)\r\n}\r\nexport default OrganizationContactDetail;"],"names":["OrganizationContactFormData","initialState","companyWebsite","salesEmail","accountsEmail","purchaseEmail","customerServiceEmail","salesPhone","accountsPhone","tollFreePhone","formFields","id","lable","Field_Name","fieldType","FormFieldTypes","INPUT","dataField","fieldSetting","placeholder","allowSpace","maxLength","validation","type","style","containerCss","NUMERIC","formSetting","isViewOnly","isEditablePage","organizationContactRef","useRef","organizationContactData","setOrganizationContactData","useState","addEditOrganizationContactDetails","isLoading","isAddEditOrganizationContactDetailsLoading","isSuccess","isAddEditOrganizationContactDetailsSuccess","data","isAddEditOrganizationContactDetailsData","useAddEditOrganizationContactDetailsMutation","getOrganizationContactDetails","isFetching","isGetOrganizationContactDetailsFetching","isGetOrganizationContactDetailsSuccess","isGetOrganizationContactDetailsData","useLazyGetOrganizationContactDetailsQuery","contactDetailId","setContactDetailId","isButtonDisable","setIsButtonDisable","roles","useSelector","state","auth","roleName","useEffect","includes","ToastService","success","errorMessage","formData","organizationContactDetailId","_jsx","children","DataLoader","_Fragment","_jsxs","className","FormCreator","config","ref","Buttons","buttonTypeClassName","buttonText","onClick","handleAddEditContactDetail","contactData","current","getFormData","request","isDisable"],"sourceRoot":""}