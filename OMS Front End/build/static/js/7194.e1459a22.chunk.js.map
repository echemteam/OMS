{"version":3,"file":"static/js/7194.e1459a22.chunk.js","mappings":"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","sources":["pages/organization/feature/organizationLogisticDetail/config/OrganizationLogistic.data.js","pages/organization/feature/organizationLogisticDetail/OrganizationLogisticDetail.js"],"sourcesContent":["import { FormFieldTypes } from \"../../../../../data/formFieldType\";\r\n\r\nexport const OrganizationLogisticFormData = {\r\n    \r\n    initialState: { fedExAccount:\"\" , dHLAccount:\"\" , uPSAccount: \"\" , uSPSAccount: \"\" },\r\n    formFields: [\r\n        {\r\n            id: \"fedExAccount\",\r\n            lable: \"FedEx Account \",\r\n            Field_Name: \"FedEx Account\",\r\n            fieldType: FormFieldTypes.INPUT,\r\n            dataField: \"fedExAccount\",\r\n            fieldSetting: {\r\n              placeholder: \"Enter FedEx Account\",\r\n              allowSpace: true,\r\n              maxLength:9,\r\n            },\r\n            validation: [{ type: \"require\" }],\r\n            style: {\r\n              containerCss: \"col-xxl-6 col-xl-12 col-md-12 col-12 col-12 mb-input\",\r\n            },\r\n          },\r\n        {\r\n            id: \"dHLAccount\",\r\n            lable: \"DHL Account \",\r\n            Field_Name: \"DHL Account\",\r\n            fieldType: FormFieldTypes.INPUT,\r\n            dataField: \"dHLAccount\",\r\n            fieldSetting: {\r\n                placeholder: \"Enter DHL Account\",\r\n                allowSpace: true,\r\n                maxLength:9,\r\n            },\r\n            validation: [{ type: \"require\" }],\r\n            style: {\r\n                containerCss: \"col-md-6 mb-3 mb-input relative\",\r\n            },\r\n        },\r\n        {\r\n            id: \"uPSAccount\",\r\n            lable: \"UPS Account \",\r\n            Field_Name: \"UPS Account\",\r\n            fieldType: FormFieldTypes.INPUT,\r\n            dataField: \"uPSAccount\",\r\n            fieldSetting: {\r\n                placeholder: \"Enter UPS Account\",\r\n                allowSpace: true,\r\n                maxLength:6,\r\n            },\r\n            validation: [{ type: \"require\" }],\r\n            style: {\r\n                containerCss: \"col-md-6 mb-3 mb-input relative\",\r\n            },\r\n        },\r\n          {\r\n            id: \"uSPSAccount\",\r\n            lable: \"USPS Account \",\r\n            Field_Name: \"USPS Account\",\r\n            fieldType: FormFieldTypes.INPUT,\r\n            dataField: \"uSPSAccount\",\r\n            fieldSetting: {\r\n                placeholder: \"Enter USPS Account\",\r\n                allowSpace: true,\r\n                maxLength:9,\r\n            },\r\n            validation: [{ type: \"require\" }],\r\n            style: {\r\n                containerCss: \"col-md-6 mb-3 mb-input relative\",\r\n            },\r\n        },\r\n        \r\n    ],\r\n    formSetting: {\r\n        isViewOnly: false\r\n    }\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { useRef, useState, useEffect } from \"react\";\r\nimport FormCreator from \"../../../../components/Forms/FormCreator\";\r\nimport Buttons from \"../../../../components/ui/button/Buttons\";\r\nimport ToastService from \"../../../../services/toastService/ToastService\";\r\nimport { OrganizationLogisticFormData } from \"./config/OrganizationLogistic.data\";\r\nimport { useAddEditOrganizationLogisticDetailsMutation, useLazyGetOrganizationLogisticDetailsQuery } from \"../../../../app/services/organizationAPI\";\r\nimport DataLoader from \"../../../../components/ui/dataLoader/DataLoader\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\n\r\n\r\nconst OrganizationLogisticDetail = (isEditablePage) => {\r\n    const organizationLogisticRef = useRef();\r\n    const [organizationLogisticData, setOrganizationLogisticData] = useState(OrganizationLogisticFormData);\r\n    const [addEditOrganizationLogisticDetails, { isLoading: isAddEditOrganizationLogisticDetailsLoading, isSuccess: isAddEditOrganizationLogisticDetailsSuccess, data: isAddEditOrganizationLogisticDetailsData }] = useAddEditOrganizationLogisticDetailsMutation();\r\n    const [getOrganizationLogisticDetails, { isFetching: isGetOrganizationLogisticDetailsFetching, isSuccess: isGetOrganizationLogisticDetailsSuccess, data: isGetOrganizationLogisticDetailsData }] = useLazyGetOrganizationLogisticDetailsQuery();\r\n    const [logisticDetailId, setLogisticDetailId] = useState(0);\r\n    const [isButtonDisable, setIsButtonDisable] = useState(false);\r\n    const { formSetting } = OrganizationLogisticFormData;\r\n    const roles = useSelector((state) => state.auth.roles.roleName );\r\n\r\n   \r\n   useEffect(() => {\r\n    if (isEditablePage) {\r\n      if (roles?.includes(\"Admin\")) {  \r\n        setIsButtonDisable(false);\r\n        formSetting.isViewOnly = false;\r\n      } else {\r\n        setIsButtonDisable(true);\r\n        formSetting.isViewOnly = true;\r\n      }\r\n    }\r\n  }, [isEditablePage, roles]);\r\n\r\n    useEffect(() => {\r\n        if (isAddEditOrganizationLogisticDetailsSuccess && isAddEditOrganizationLogisticDetailsData) {\r\n            ToastService.success(isAddEditOrganizationLogisticDetailsData.errorMessage);\r\n            getOrganizationLogisticDetails();\r\n        }\r\n    }, [isAddEditOrganizationLogisticDetailsSuccess, isAddEditOrganizationLogisticDetailsData]);\r\n\r\n\r\n    useEffect(() => {\r\n        getOrganizationLogisticDetails();\r\n    }, [])\r\n\r\n    const handleAddEditLogisticDetail = () => {\r\n\r\n        let logisticData = organizationLogisticRef.current.getFormData();\r\n        if (logisticData) {\r\n            const request = {\r\n                ...logisticData,\r\n                organizationLogisticDetailId: logisticDetailId,\r\n                fedExAccount: logisticData?.fedExAccount,\r\n                dHLAccount: logisticData?.dHLAccount,\r\n                uPSAccount: logisticData?.uPSAccount,\r\n                uSPSAccount: logisticData?.uSPSAccount,\r\n            }\r\n            addEditOrganizationLogisticDetails(request);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n\r\n        if (!isGetOrganizationLogisticDetailsFetching && isGetOrganizationLogisticDetailsSuccess && isGetOrganizationLogisticDetailsData) {\r\n            let formData = { ...organizationLogisticData };\r\n            formData.initialState = {\r\n                organizationLogisticDetailId: isGetOrganizationLogisticDetailsData.organizationLogisticDetailId,\r\n                fedExAccount: isGetOrganizationLogisticDetailsData.fedExAccount,\r\n                dHLAccount: isGetOrganizationLogisticDetailsData.dhlAccount,\r\n                uPSAccount: isGetOrganizationLogisticDetailsData.upsAccount,\r\n                uSPSAccount: isGetOrganizationLogisticDetailsData.uspsAccount,\r\n            };\r\n            setOrganizationLogisticData(formData);\r\n            setLogisticDetailId(isGetOrganizationLogisticDetailsData.organizationLogisticDetailId);\r\n        }\r\n    }, [isGetOrganizationLogisticDetailsFetching, isGetOrganizationLogisticDetailsSuccess, isGetOrganizationLogisticDetailsData,]);\r\n\r\n    if (isGetOrganizationLogisticDetailsFetching) {\r\n        return <div><DataLoader /></div>; // Replace with a proper loading spinner or component\r\n    }\r\n\r\n    return (\r\n\r\n        <div className=\"row mt-2 add-address-form\">\r\n            {/* <h4 className=\"organization-tab-title\">Logistic Details</h4> */}\r\n            <FormCreator config={organizationLogisticData}\r\n                ref={organizationLogisticRef}\r\n                {...organizationLogisticData}\r\n\r\n            />\r\n             {isEditablePage ?\r\n            <div className=\"col-md-12 mt-2\">\r\n                <div className=\"d-flex align-item-end justify-content-end\">\r\n                    <Buttons\r\n                        buttonTypeClassName=\"theme-button\"\r\n                        buttonText=\"Save\"\r\n                        onClick={handleAddEditLogisticDetail}\r\n                        isLoading={isAddEditOrganizationLogisticDetailsLoading}\r\n                        isDisable={isButtonDisable}\r\n                    />\r\n                </div>\r\n            </div>:null}\r\n        </div>\r\n    )\r\n}\r\nexport default OrganizationLogisticDetail;"],"names":["OrganizationLogisticFormData","initialState","fedExAccount","dHLAccount","uPSAccount","uSPSAccount","formFields","id","lable","Field_Name","fieldType","FormFieldTypes","INPUT","dataField","fieldSetting","placeholder","allowSpace","maxLength","validation","type","style","containerCss","formSetting","isViewOnly","isEditablePage","organizationLogisticRef","useRef","organizationLogisticData","setOrganizationLogisticData","useState","addEditOrganizationLogisticDetails","isLoading","isAddEditOrganizationLogisticDetailsLoading","isSuccess","isAddEditOrganizationLogisticDetailsSuccess","data","isAddEditOrganizationLogisticDetailsData","useAddEditOrganizationLogisticDetailsMutation","getOrganizationLogisticDetails","isFetching","isGetOrganizationLogisticDetailsFetching","isGetOrganizationLogisticDetailsSuccess","isGetOrganizationLogisticDetailsData","useLazyGetOrganizationLogisticDetailsQuery","logisticDetailId","setLogisticDetailId","isButtonDisable","setIsButtonDisable","roles","useSelector","state","auth","roleName","useEffect","includes","ToastService","success","errorMessage","formData","organizationLogisticDetailId","dhlAccount","upsAccount","uspsAccount","_jsx","children","DataLoader","_jsxs","className","FormCreator","config","ref","Buttons","buttonTypeClassName","buttonText","onClick","handleAddEditLogisticDetail","logisticData","current","getFormData","request","isDisable"],"sourceRoot":""}