{"version":3,"file":"static/js/7374.a480d1c0.chunk.js","mappings":"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","sources":["common/features/component/CustomerSupplierReason/Reason.data.js","components/ui/centerModel/CenterModel.js","pages/customerDetail/feature/customerHistoryDetail/CustomerHistoryDetail.js","pages/customerDetail/feature/customerViewDetail/customerViewTab/CustomerViewTab.js","pages/supplierDetails/feature/supplierBasicDetail/config/InvoiceForm.data.js","pages/customerDetail/feature/customerViewDetail/customerBasicInfoCard/feature/AddEditInvoiceSubmissionInstructionDetail.js","pages/customerDetail/feature/customerViewDetail/customerBasicInfoCard/CustomerBasicInfoCard.js","pages/customerDetail/customerGrid/feature/customerViewDetail/CustomerDetails.js","pages/customerDetail/customerGrid/CustomerViewDetail.js","utils/ContextAPIs/Customer/BasicDetailContext.js","utils/CopyText/CopyText.js"],"sourcesContent":["import { FormFieldTypes } from \"../../../../data/formFieldType\";\r\n\r\nexport const reasonData = {\r\n  name: \"\",\r\n  initialState: {responsibleUserId:0, inActiveReason: \"\" },\r\n  formFields: [\r\n    {\r\n      id: \"ResponsibleUserId\",\r\n      lable: \"Responsible User \",\r\n      Field_Name: \"Responsible User\",\r\n      fieldType: FormFieldTypes.SELECT,\r\n      dataField: \"responsibleUserId\",\r\n      fieldSetting: {\r\n        placeholder: \"Select Responsible User\",\r\n        isDisabled: false,\r\n        isEnableOnChange: true,\r\n        isMultiSelect: true,\r\n      },\r\n      validation: [{ type: \"require\" }],\r\n      style: {\r\n        containerCss: \"col-xxl-6 col-xl-6 col-md-6 col-12 mb-2\",\r\n      },\r\n    },\r\n    {\r\n      id: \"inActiveReason\",\r\n      lable: \"Reason :\",\r\n      Field_Name: \"Reason \",\r\n      fieldType: FormFieldTypes.TEXTAREA,\r\n      dataField: \"inActiveReason\",\r\n      fieldSetting: {\r\n        placeholder: \"please enter Reason\",\r\n        allowSpace: true,\r\n      },\r\n      validation: [{ type: \"require\" }],\r\n      style: {\r\n        containerCss: \"col-xxl-12 col-xl-12 col-md-12 mb-2\",\r\n      },\r\n    },\r\n  ],\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./CenterModel.scss\";\r\nimport { Modal } from \"react-bootstrap\";\r\n\r\nconst CenterModel = ({ isApprovalValidate, showModal, handleToggleModal, children, ...props }) => {\r\n  return (\r\n    <Modal\r\n      className={`center-model-popup ${props.modelSizeClass}`}\r\n      show={showModal}\r\n      onHide={handleToggleModal}\r\n      keyboard={!isApprovalValidate}\r\n      backdrop={isApprovalValidate ? \"static\" : true}\r\n    >\r\n      <Modal.Header closeButton={!isApprovalValidate}>\r\n        <div className=\"model-title\">{props.modalTitle}</div>\r\n      </Modal.Header>\r\n      <Modal.Body>{children}</Modal.Body>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nCenterModel.propTypes = {\r\n  isApprovalValidate: PropTypes.bool,\r\n  showModal: PropTypes.bool.isRequired,\r\n  handleToggleModal: PropTypes.func.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n  modelSizeClass: PropTypes.string,\r\n  modalTitle: PropTypes.string\r\n};\r\nexport default CenterModel;\r\n","import { useContext } from \"react\";\r\nimport HistotyList from \"../../../../common/features/component/History/HistotyList\";\r\nimport BasicDetailContext from \"../../../../utils/ContextAPIs/Customer/BasicDetailContext\";\r\nimport { useGetCustomerAuditHistoryByCustomerIdMutation, useLazyGetEventNameAndUserNameByCustomerIdQuery } from \"../../../../app/services/customerHistoryAPI\";\r\n\r\nexport const CustomerHistory = () => {\r\n\r\n    const { customerId } = useContext(BasicDetailContext);\r\n\r\n    return (\r\n        /**\r\n         * This component displays an HistotyList for the supplier module.\r\n         * This hook dynamically sets the API call based on the module (customer or supplier).\r\n        */\r\n        <div className=\"history-part\">\r\n            <HistotyList isSupplier={false} keyId={customerId || 0}\r\n                getAuditHistory={useGetCustomerAuditHistoryByCustomerIdMutation}\r\n                getSearchFilterBindHistory={useLazyGetEventNameAndUserNameByCustomerIdQuery} />\r\n        </div>\r\n    )\r\n}","import React, { useContext } from \"react\";\r\n//** Lib's */\r\nimport { securityKey } from \"../../../../../data/SecurityKey\";\r\nimport RenderTabs from \"../../../../../components/ui/tabs/RenderTabs\";\r\nimport { CustomerHistory } from \"../../customerHistoryDetail/CustomerHistoryDetail\";\r\nimport BasicDetailContext from \"../../../../../utils/ContextAPIs/Customer/BasicDetailContext\";\r\nimport { hasFunctionalPermission } from \"../../../../../utils/AuthorizeNavigation/authorizeNavigation\";\r\nimport PropTypes from 'prop-types';\r\n//** Component's */\r\nconst CustomerContactDetail = React.lazy(() => import(\"../../customerContactDetail/CustomerContactDetail\"));\r\nconst CustomerDocumentDetail = React.lazy(() => import(\"../../customerDocumentDetail/CustomerDocumentDetail\"));\r\nconst CustomerNoteDetail = React.lazy(() => import(\"../../customerNoteDetail/CustomerNoteDetail\"));\r\nconst CustomerAddressDetail = React.lazy(() => import(\"../../customerAddressDetail/CustomerAddressDetail\"));\r\nconst CustomerSettingDetails = React.lazy(() => import(\"../../customerSettingDetail/CustomerSettingDetails\"));\r\nconst CustomerSubCustomerDetail = React.lazy(() => import(\"../../customerSubCustomerDetail/CustomerSubCustomerDetail\"));\r\n\r\nconst CustomerViewTab = ({ customerId, isBuyingForThirdParty, contryIdCode, customerStatusId }) => {\r\n\r\n  const { isResponsibleUser, setActiveTab,setActiveSubTab } = useContext(BasicDetailContext);\r\n\r\n  const hasNotePermission = hasFunctionalPermission(securityKey.CUSTOMERNOTES);\r\n  const hasAddressPermission = hasFunctionalPermission(\r\n    securityKey.CUSTOMERADDRESS\r\n  );\r\n  const hasContactPermission = hasFunctionalPermission(\r\n    securityKey.CUSTOMERCONTACT\r\n  );\r\n  const hasSettingPermission = hasFunctionalPermission(\r\n    securityKey.CUSTOMERSETTING\r\n  );\r\n  const hasHistoryPermission = hasFunctionalPermission(\r\n    securityKey.CUSTOMERHISTORY\r\n  );\r\n  const hasDocumentPermission = hasFunctionalPermission(\r\n    securityKey.CUSTOMERDOCUMENT\r\n  );\r\n  const hasSubCustomerPermission = hasFunctionalPermission(\r\n    securityKey.LINKSUBCUSTOMER\r\n  );\r\n\r\n  const tabs = [\r\n    {\r\n      sMenuItemCaption: \"Address\",\r\n      icon: \"fa fa-address-book-o\",\r\n      component: (\r\n        <div className=\"mt-2 contact-accrodiaon-scroll\">\r\n          <CustomerAddressDetail isEditablePage={true} customerStatusId={customerStatusId} />\r\n        </div>\r\n      ),\r\n      isVisible: isResponsibleUser ? true : hasAddressPermission?.hasAccess,\r\n    },\r\n    {\r\n      sMenuItemCaption: \"Contact\",\r\n      icon: \"fa fa-phone\",\r\n      component: (\r\n        <div className=\"mt-2 contact-accrodiaon-scroll contact-card-section-new\">\r\n          <CustomerContactDetail isEditablePage={true} isSearchFilterShow={true} contryIdCode={contryIdCode} customerStatusId={customerStatusId} />\r\n        </div>\r\n      ),\r\n      isVisible: isResponsibleUser ? true : hasContactPermission?.hasAccess,\r\n    },\r\n    {\r\n      sMenuItemCaption: \"Settings\",\r\n      icon: \"fa fa-cog\",\r\n      component: (\r\n        <div className=\"mt-2\">\r\n          <CustomerSettingDetails isEditablePage={true} customerStatusId={customerStatusId} />\r\n        </div>\r\n      ),\r\n      isVisible: isResponsibleUser ? true : hasSettingPermission?.hasAccess,\r\n    },\r\n    {\r\n      sMenuItemCaption: \"Documents\",\r\n      icon: \"fa fa-file-text-o\",\r\n      component: (\r\n        <div className=\"mt-2\">\r\n          <CustomerDocumentDetail isEditablePage={true} customerStatusId={customerStatusId} />\r\n        </div>\r\n      ),\r\n      isVisible: isResponsibleUser ? true : hasDocumentPermission?.hasAccess,\r\n    },\r\n    {\r\n      sMenuItemCaption: \"Link Customer\",\r\n      icon: \"fa fa-link\",\r\n      component: (\r\n        <div className=\"mt-2\">\r\n          <CustomerSubCustomerDetail />\r\n        </div>\r\n      ),\r\n      isVisible: isResponsibleUser ? isBuyingForThirdParty : isBuyingForThirdParty && hasSubCustomerPermission?.hasAccess\r\n    },\r\n    {\r\n      sMenuItemCaption: \"Notes\",\r\n      icon: \"fa fa-sticky-note-o\",\r\n      component: (\r\n        <div className=\"mt-2\">\r\n          <CustomerNoteDetail isEditablePage={true} />\r\n        </div>\r\n      ),\r\n      isVisible: isResponsibleUser ? true : hasNotePermission?.hasAccess,\r\n    },\r\n    {\r\n      sMenuItemCaption: \"History\",\r\n      icon: \"fa fa-history\",\r\n      component: (\r\n        <div className=\"\">\r\n          <CustomerHistory isEditablePage={true} />\r\n        </div>\r\n      ),\r\n      isVisible: isResponsibleUser ? true : hasHistoryPermission?.hasAccess,\r\n    }\r\n  ];\r\n\r\n  const visibleTabs = tabs.filter((tab) => tab.isVisible);\r\n\r\n\r\n  const handleSubTabDefaultValue = (tab) => {\r\n    if ([2, 3].includes(tab)) {\r\n      setActiveSubTab(0);\r\n    }\r\n  };\r\n\r\n  return (\r\n\r\n    <RenderTabs onTabClick={handleSubTabDefaultValue} onActiveTab={setActiveTab} tabs={customerId ? visibleTabs : null} />\r\n  )\r\n}\r\n\r\nCustomerViewTab.propTypes = {\r\n  customerId: PropTypes.number.isRequired,\r\n  isBuyingForThirdParty: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default CustomerViewTab;","import { FormFieldTypes } from \"../../../../../data/formFieldType\";\r\n\r\nexport const InvoiceFormData = {\r\n  initialState: {\r\n    invoiceSubmissionInstruction: \"\",\r\n  },\r\n  formFields: [\r\n\r\n    {\r\n      id: \"invoiceSubmissionInstruction\",\r\n      lable: \"Invoice Submission Instruction \",\r\n      Field_Name: \"Invoice Submission Instruction\",\r\n      fieldType: FormFieldTypes.CKEDITOR,\r\n      dataField: \"invoiceSubmissionInstruction\",\r\n      fieldSetting: {\r\n        placeholder: \"\",\r\n        allowSpace: true,\r\n      },\r\n      // validation: [{ type: \"require\" }],\r\n      style: {\r\n        containerCss: \"col-xxl-12 col-xl-12 col-md-12 col-12 mb-input\",\r\n      },\r\n    },\r\n\r\n  ],\r\n  formSetting: {\r\n    isViewOnly: false\r\n  }\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport FormCreator from \"../../../../../../components/Forms/FormCreator\";\r\nimport Buttons from \"../../../../../../components/ui/button/Buttons\";\r\nimport { InvoiceFormData } from \"../../../../../supplierDetails/feature/supplierBasicDetail/config/InvoiceForm.data\";\r\nimport { useAddEditCustomerInvoiceMutation, useLazyGetDetailsbyCustomerIDQuery } from \"../../../../../../app/services/customerSettingsAPI\";\r\nimport ToastService from \"../../../../../../services/toastService/ToastService\";\r\n\r\nconst AddEditInvoiceSubmissionInstructionDetail = ({ customerId, handleToggleModal, isInvoiceModelShow, setIsInvoiceModelShow, hideButtons }) => {\r\n    const invoiceRef = useRef();\r\n    const [formData, setFormData] = useState(InvoiceFormData);\r\n    const [shouldRerenderFormCreator] = useState(false);\r\n    const [addEditCustomerInvoice, { isLoading: isAddEditCustomerInvoiceLoading, isSuccess: isAddEditCustomerInvoiceSuccess, data: isAddEditCustomerInvoiceData }] = useAddEditCustomerInvoiceMutation();\r\n    const [GetDetailsbyCustomerID, { isFetching: isGetDetailByCustomerIdFetching, isSuccess: isGetDetailByCustomerIdSuccess, data: isGetDetailByCustomerIdData, },] = useLazyGetDetailsbyCustomerIDQuery();\r\n\r\n    useEffect(() => {\r\n        if (isInvoiceModelShow) {\r\n            GetDetailsbyCustomerID(customerId);\r\n        }\r\n    }, [isInvoiceModelShow])\r\n\r\n    useEffect(() => {\r\n        if (!isGetDetailByCustomerIdFetching && isGetDetailByCustomerIdSuccess && isGetDetailByCustomerIdData) {\r\n            let newFormData = { ...formData };\r\n            newFormData.initialState = {\r\n                invoiceSubmissionInstruction: isGetDetailByCustomerIdData.invoiceSubmissionInstruction,\r\n            };\r\n            setFormData(newFormData);\r\n        }\r\n    }, [isGetDetailByCustomerIdFetching, isGetDetailByCustomerIdSuccess, isGetDetailByCustomerIdData])\r\n\r\n    useEffect(() => {\r\n        if (isAddEditCustomerInvoiceSuccess && isAddEditCustomerInvoiceData) {\r\n            ToastService.success(isAddEditCustomerInvoiceData.errorMessage);\r\n            setIsInvoiceModelShow(false);\r\n        }\r\n    }, [isAddEditCustomerInvoiceSuccess, isAddEditCustomerInvoiceData]);\r\n\r\n    const handleInvoiceSubmissionData = () => {\r\n        let invoiceData = invoiceRef.current.getFormData();\r\n        let request = {\r\n            customerId: customerId,\r\n            invoiceSubmissionInstruction: invoiceData.invoiceSubmissionInstruction,\r\n            customerAccountingSettingId: isGetDetailByCustomerIdData?.customerAccountingSettingId || 0,\r\n        };\r\n\r\n        if (invoiceData && !invoiceData.customerAccountingSettingId) {\r\n            addEditCustomerInvoice(request);\r\n        } else {\r\n            addEditCustomerInvoice(request);\r\n        }\r\n    }\r\n\r\n    return (<div className=\"row custom-height-tiny add-edit-notesForm\">\r\n        <FormCreator config={formData} ref={invoiceRef} {...formData} key={shouldRerenderFormCreator} />\r\n        {!hideButtons &&\r\n            <div className=\"col-md-12\">\r\n                <div className=\"d-flex align-item-end justify-content-end\">\r\n                    <div className=\"d-flex align-item-end\">\r\n                        <Buttons\r\n                            buttonTypeClassName=\"theme-button\"\r\n                            buttonText=\"Save\"\r\n                            onClick={handleInvoiceSubmissionData}\r\n                            isLoading={isAddEditCustomerInvoiceLoading}\r\n                        />\r\n                        <Buttons\r\n                            buttonTypeClassName=\"dark-btn ml-5\"\r\n                            buttonText=\"Cancel\"\r\n                            onClick={handleToggleModal}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        }\r\n    </div>)\r\n}\r\nexport default AddEditInvoiceSubmissionInstructionDetail;","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useContext, useEffect, useRef, useState } from \"react\";\r\nimport DropDown from \"../../../../../components/ui/dropdown/DropDrown\";\r\nimport CenterModel from \"../../../../../components/ui/centerModel/CenterModel\";\r\nimport FormCreator from \"../../../../../components/Forms/FormCreator\";\r\nimport Buttons from \"../../../../../components/ui/button/Buttons\";\r\n\r\nimport SwalAlert from \"../../../../../services/swalService/SwalService\";\r\nimport { useLazyGetAllUserQuery } from \"../../../../../app/services/commonAPI\";\r\nimport {\r\n  useAddEditResponsibleUserForCustomerMutation,\r\n  useUpdateCustomerInActiveStatusMutation,\r\n  useUpdateCustomerStatusMutation,\r\n  useUpdateCustomerSubCustomerMutation,\r\n} from \"../../../../../app/services/basicdetailAPI\";\r\nimport ToastService from \"../../../../../services/toastService/ToastService\";\r\nimport BasicDetailContext from \"../../../../../utils/ContextAPIs/Customer/BasicDetailContext\";\r\nimport { securityKey } from \"../../../../../data/SecurityKey\";\r\nimport { hasFunctionalPermission } from \"../../../../../utils/AuthorizeNavigation/authorizeNavigation\";\r\nimport { StatusValue, statusMapping } from \"../../../../../utils/Enums/StatusEnums\";\r\nimport { excludingRoles } from \"../../customerBasicDetail/config/CustomerBasicDetail.data\";\r\nimport CopyText from \"../../../../../utils/CopyText/CopyText\";\r\nimport { ErrorMessage, SuccessMessage } from \"../../../../../data/appMessages\";\r\nimport DataLoader from \"../../../../../components/ui/dataLoader/DataLoader\";\r\n// import { OwnerType } from \"../../../../../utils/Enums/commonEnums\";\r\nimport { reasonData } from \"../../../../../common/features/component/CustomerSupplierReason/Reason.data\";\r\nimport PropTypes from \"prop-types\";\r\nimport { removeFormFields } from \"../../../../../utils/FormFields/RemoveFields/handleRemoveFields\";\r\nimport Iconify from \"../../../../../components/ui/iconify/Iconify\";\r\n// import { Tooltip } from \"react-bootstrap\";\r\n// import Select from 'react-select';\r\nimport DropdownSelect from \"../../../../../components/ui/dropdown/DropdownSelect\";\r\nimport AddEditInvoiceSubmissionInstructionDetail from \"./feature/AddEditInvoiceSubmissionInstructionDetail\";\r\nimport { setDropDownOptionField } from \"../../../../../utils/FormFields/FieldsSetting/SetFieldSetting\";\r\nimport { useAddCustomerNotesMutation } from \"../../../../../app/services/notesAPI\";\r\nimport { CustomerSupplierStatus } from \"../../../../../utils/Enums/commonEnums\";\r\nimport Tooltip from \"../../../../../components/ui/tooltip/Tooltip\";\r\nimport Image from \"../../../../../components/image/Image\";\r\nimport { AppIcons } from \"../../../../../data/appIcons\";\r\n\r\n//** Component's */\r\nconst CustomerApproval = React.lazy(() =>\r\n  import(\"../../cutomerApproval/CustomerApproval\")\r\n);\r\n\r\nconst CustomerBasicInfoCard = ({\r\n  editClick,\r\n  customerData,\r\n  isLoading,\r\n  customerId,\r\n  getCustomerById,\r\n  isGetCustomersBasicInformationById,\r\n  isGetCustomersBasicInformationByIdFetching,\r\n  GetCustomersBasicInformationByIdData,\r\n}) => {\r\n  const childRef = useRef();\r\n  const reasonRef = useRef();\r\n  const { confirm } = SwalAlert();\r\n  const [selectedStatus, setSelectedStatus] = useState(null);\r\n  const [formData, setFormData] = useState(reasonData);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [isInvoiceModelShow, setIsInvoiceModelShow] = useState(false);\r\n  const [customerID, setCustomerId] = useState();\r\n  const [statusId, setStatusId] = useState();\r\n  const [responsibleUserIds, setResponsibleUserIds] = useState([]);\r\n  const [rUserValue, setRUserValue] = useState([]);\r\n  const [responsibleUserOptions, setResponsibleUserOptions] = useState([]);\r\n  const [filteredStatusOptions, setFilteredStatusOptions] = useState(StatusValue);\r\n  const [prevRUserValue, setPrevRUserValue] = useState(\"\");\r\n\r\n  const [\r\n    updateCustomerSubCustomer,\r\n    {\r\n      isSuccess: isSuccessUpdateCustomerSubCustomer,\r\n      data: isUpdateCustomerSubCustomerData,\r\n    },\r\n  ] = useUpdateCustomerSubCustomerMutation();\r\n\r\n  const [\r\n    addEditResponsibleUserForCustomer,\r\n    {\r\n      isSuccess: isSuccessAddEditResponsibleUserForCustomer,\r\n      data: isAddEditResponsibleUserForCustomerData,\r\n    },\r\n  ] = useAddEditResponsibleUserForCustomerMutation();\r\n  const [\r\n    updateCustomerStatus,\r\n    {\r\n      isSuccess: isSuccessUpdateCustomerStatus,\r\n      data: updateCustomerStatusData,\r\n    },\r\n  ] = useUpdateCustomerStatusMutation();\r\n  const [\r\n    updateCustomerInActiveStatus,\r\n    {\r\n      isLoading: updateCustomerInActiveStatusCustomerLoading,\r\n      isSuccess: isSuccessUpdateCustomerInActiveStatus,\r\n      data: updateCustomerInActiveStatusData,\r\n    },\r\n  ] = useUpdateCustomerInActiveStatusMutation();\r\n\r\n  const [addCustomerNotes] = useAddCustomerNotesMutation();\r\n\r\n  const {\r\n    isResponsibleUser,\r\n    totalCount,\r\n    approvalSuccessCount,\r\n    getCustomerCompletionCount,\r\n    setSubCustomer,\r\n    subCustomer,\r\n  } = useContext(BasicDetailContext);\r\n  const [isButtonDisable, setIsButtonDisable] = useState(false);\r\n  const hasEditPermission = hasFunctionalPermission(\r\n    securityKey.EDITBASICCUSTOMERDETAILS\r\n  );\r\n\r\n  const [\r\n    getAllUser,\r\n    { isFetching, isSuccess: isGetAllUserSucess, data: allGetAlluserData },\r\n  ] = useLazyGetAllUserQuery();\r\n  useEffect(() => {\r\n    if (!isResponsibleUser) {\r\n      if (hasEditPermission && hasEditPermission.isViewOnly === true) {\r\n        setIsButtonDisable(true);\r\n      } else if (hasEditPermission.isEditable === true) {\r\n        // setShowEditIcon(true);\r\n      } else {\r\n        setIsButtonDisable(true);\r\n      }\r\n    }\r\n  }, [hasEditPermission, isResponsibleUser]);\r\n  useEffect(() => {\r\n    if (\r\n      isSuccessUpdateCustomerInActiveStatus &&\r\n      updateCustomerInActiveStatusData\r\n    ) {\r\n      ToastService.success(updateCustomerInActiveStatusData.errorMessage);\r\n      handleToggleModal();\r\n    }\r\n  }, [isSuccessUpdateCustomerInActiveStatus, updateCustomerInActiveStatusData]);\r\n\r\n  useEffect(() => {\r\n    if (isSuccessUpdateCustomerStatus && updateCustomerStatusData) {\r\n      ToastService.success(updateCustomerStatusData.errorMessage);\r\n      handleToggleModal();\r\n    }\r\n  }, [isSuccessUpdateCustomerStatus, updateCustomerStatusData]);\r\n  useEffect(() => {\r\n    if (\r\n      GetCustomersBasicInformationByIdData &&\r\n      isGetCustomersBasicInformationById &&\r\n      !isGetCustomersBasicInformationByIdFetching\r\n    ) {\r\n      const responsibleUserIds =\r\n        GetCustomersBasicInformationByIdData?.responsibleUserId\r\n          ?.split(\",\")\r\n          .map((id) => id.trim());\r\n      const responsibleUserNames =\r\n        GetCustomersBasicInformationByIdData?.responsibleUserName\r\n          ?.split(\",\")\r\n          .map((name) => name.trim());\r\n      const responsibleUsers = responsibleUserIds?.map((id, index) => ({\r\n        value: id,\r\n        label: responsibleUserNames[index] || id,\r\n      }));\r\n      setResponsibleUserIds(responsibleUserIds);\r\n      setRUserValue(responsibleUsers);\r\n      setPrevRUserValue(responsibleUsers);\r\n      setSelectedStatus(GetCustomersBasicInformationByIdData.status);\r\n      getAllUser();\r\n      getCustomerCompletionCount(\r\n        customerId,\r\n        GetCustomersBasicInformationByIdData?.isSubCustomer\r\n      );\r\n      setSubCustomer(GetCustomersBasicInformationByIdData?.isSubCustomer);\r\n    }\r\n  }, [\r\n    GetCustomersBasicInformationByIdData,\r\n    isGetCustomersBasicInformationById,\r\n    isGetCustomersBasicInformationByIdFetching,\r\n  ]);\r\n\r\n  const rejectedCustomerFromApproval = () => {\r\n    getCustomerById();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!isFetching && isGetAllUserSucess && allGetAlluserData) {\r\n      const filterData = allGetAlluserData.filter((item) => {\r\n        return (\r\n          item.roleName === null ||\r\n          !excludingRoles\r\n            .map((role) => role.toLowerCase())\r\n            .includes(item.roleName.toLowerCase())\r\n        );\r\n      });\r\n      const uniqueData = Array.from(\r\n        new Map(filterData.map((item) => [item.fullName, item])).values()\r\n      );\r\n      const filteredData = responsibleUserIds\r\n        ? uniqueData.filter(\r\n          (item) => !responsibleUserIds.includes(item.userId.toString())\r\n        )\r\n        : uniqueData;\r\n      const modifyUserData = filteredData.map((item) => ({\r\n        value: item.userId,\r\n        label: item.fullName,\r\n      }));\r\n      setResponsibleUserOptions(modifyUserData);\r\n\r\n      const filterDataDropdown = allGetAlluserData.filter((item) => {\r\n        return (\r\n          item.roleName === null ||\r\n          !excludingRoles\r\n            .map((role) => role.toLowerCase())\r\n            .includes(item.roleName.toLowerCase())\r\n        );\r\n      });\r\n      // Remove duplicates based on fullName\r\n      const uniqueDataDropdown = Array.from(\r\n        new Map(\r\n          filterDataDropdown.map((item) => [item.fullName, item])\r\n        ).values()\r\n      );\r\n      setDropDownOptionField(\r\n        uniqueDataDropdown,\r\n        \"userId\",\r\n        \"fullName\",\r\n        reasonData,\r\n        \"responsibleUserId\"\r\n      );\r\n    }\r\n  }, [isGetAllUserSucess, allGetAlluserData, isFetching]);\r\n\r\n  const handleStatusChange = (selectedOption) => {\r\n    if (selectedOption.label === customerData.status) {\r\n      ToastService.warning(\r\n        \"You can't change the status of the customer to currect customer status.\"\r\n      );\r\n    } else {\r\n      if (selectedOption.value === CustomerSupplierStatus.PENDING) {\r\n        confirm(\r\n          \"Warning?\",\r\n          `Are you sure you want to change the customer status to ${selectedOption.label}?`,\r\n          \"Yes\",\r\n          \"Cancel\"\r\n        ).then((confirmed) => {\r\n          if (confirmed) {\r\n            let req = {\r\n              customerId: customerId,\r\n              statusId: selectedOption.value,\r\n            };\r\n            updateCustomerStatus(req);\r\n            setSelectedStatus(selectedOption.value);\r\n          }\r\n        });\r\n      } else if (\r\n        selectedOption.value === CustomerSupplierStatus.FREEZE ||\r\n        selectedOption.value === CustomerSupplierStatus.BLOCK ||\r\n        selectedOption.value === CustomerSupplierStatus.DISABLE ||\r\n        selectedOption.value === CustomerSupplierStatus.REJECT\r\n      ) {\r\n        if (selectedOption.value !== CustomerSupplierStatus.REJECT) {\r\n          if (customerData.responsibleUserId) {\r\n            removeFields();\r\n          }\r\n        }\r\n        setShowModal(true);\r\n        setSelectedStatus(selectedOption.value);\r\n      } else if (\r\n        selectedOption.value === CustomerSupplierStatus.APPROVED ||\r\n        selectedOption.value === CustomerSupplierStatus.SUBMITTED\r\n      ) {\r\n        if (childRef.current) {\r\n          childRef.current.callChildFunction(\r\n            customerId,\r\n            customerData.isSubCustomer ? customerData.isSubCustomer : false,\r\n            selectedOption.value === CustomerSupplierStatus.SUBMITTED\r\n              ? false\r\n              : true\r\n          );\r\n        }\r\n        setCustomerId(customerId);\r\n        setStatusId(selectedOption.value);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (customerData) {\r\n      let newStatusOptions = StatusValue;\r\n      if (customerData.status === statusMapping.APPROVED) {\r\n        newStatusOptions = StatusValue.filter(option => option.value !== 2);\r\n      }\r\n      else if (customerData.status === statusMapping.PENDING) {\r\n        newStatusOptions = StatusValue.filter(option => option.value !== 3)\r\n      }\r\n      setFilteredStatusOptions(newStatusOptions);\r\n    }\r\n  }, [customerData]);\r\n\r\n\r\n  const removeFields = () => {\r\n    const modifyFormFields = removeFormFields(formData, [\"responsibleUserId\"]);\r\n    setFormData(modifyFormFields);\r\n  };\r\n\r\n  const onHandleBlur = () => {\r\n    // Compare current rUserValue with previous value\r\n    const currentValues = rUserValue?.map((option) => option.value).join(\",\");\r\n\r\n    if (currentValues !== prevRUserValue) {\r\n      let req = {\r\n        customerId: customerId,\r\n        userId: currentValues,\r\n      };\r\n\r\n      addEditResponsibleUserForCustomer(req);\r\n      setPrevRUserValue(currentValues);  // Store the current value for future comparison\r\n    }\r\n  };\r\n\r\n\r\n  const updateRUserData = (data) => {\r\n    const responsibleUserId = data.map((option) => option.value.toString());\r\n    setRUserValue(data);\r\n    setResponsibleUserIds(responsibleUserId);\r\n    getAllUser();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (\r\n      isSuccessAddEditResponsibleUserForCustomer &&\r\n      isAddEditResponsibleUserForCustomerData\r\n    ) {\r\n      ToastService.success(\r\n        isAddEditResponsibleUserForCustomerData.errorMessage\r\n      );\r\n      getCustomerCompletionCount(customerId, subCustomer);\r\n    }\r\n  }, [\r\n    isSuccessAddEditResponsibleUserForCustomer,\r\n    isAddEditResponsibleUserForCustomerData,\r\n  ]);\r\n\r\n  const updateCustomerApproval = () => {\r\n    setSelectedStatus(statusId);\r\n    let req = {\r\n      customerId: customerID,\r\n      statusId: statusId,\r\n    };\r\n    updateCustomerStatus(req);\r\n  };\r\n\r\n  const onReset = () => {\r\n    let restData = { ...reasonData };\r\n    restData.initialState = { ...formData };\r\n    setFormData(restData);\r\n  };\r\n\r\n  const handleUpdate = () => {\r\n    let custData = reasonRef.current.getFormData();\r\n    if (custData) {\r\n      let req = {\r\n        ...custData,\r\n        customerId: customerId,\r\n        statusId: selectedStatus ? selectedStatus : 0,\r\n        note: custData.inActiveReason,\r\n      };\r\n      updateCustomerInActiveStatus(req);\r\n      addCustomerNotes(req);\r\n      updateRUserDataDropdown(custData.responsibleUserId);\r\n    }\r\n  };\r\n\r\n  const updateRUserDataDropdown = (value) => {\r\n    let req = {\r\n      customerId: customerId,\r\n      userId: String(value),\r\n    };\r\n    addEditResponsibleUserForCustomer(req);\r\n  };\r\n\r\n  const handleModelShow = () => {\r\n    setIsInvoiceModelShow(true);\r\n  };\r\n\r\n  const handleToggleModal = () => {\r\n    setShowModal(false);\r\n    setIsInvoiceModelShow(false);\r\n    onReset();\r\n    getCustomerById();\r\n    setSelectedStatus(customerData.status);\r\n  };\r\n\r\n  const getStatusClass = () => {\r\n    switch (selectedStatus) {\r\n      case \"Pending\":\r\n        return \"badge-gradient-Pending\";\r\n      case \"Submitted\":\r\n        return \"badge-gradient-Submitted\";\r\n      case \"Approved\":\r\n        return \"badge-gradient-Approved\";\r\n      case \"Freeze\":\r\n        return \"badge-gradient-Frozen\";\r\n      case \"Block\":\r\n        return \"badge-gradient-Blocked\";\r\n      case \"Reject\":\r\n        return \"badge-gradient-reject\";\r\n      case \"Disable\":\r\n        return \"badge-gradient-disabled\";\r\n      default:\r\n        return \"badge-gradient-info\";\r\n    }\r\n  };\r\n\r\n  const handleCheckboxChange = (e) => {\r\n    const value = e.target.checked;\r\n    confirm(\r\n      \"Warning?\",\r\n      SuccessMessage.Confirm_Update.replace(\"{0}\", \"Sub Customer\"),\r\n      \"Yes\",\r\n      \"Cancel\"\r\n    ).then((confirmed) => {\r\n      if (confirmed) {\r\n        let request = {\r\n          customerId: customerId,\r\n          isSubCustomer: value,\r\n        };\r\n        updateCustomerSubCustomer(request);\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (showModal && selectedStatus === CustomerSupplierStatus.REJECT) {\r\n      if (responsibleUserIds) {\r\n        const responsibleUser = responsibleUserIds?.map((id) =>\r\n          Number(id.trim())\r\n        );\r\n        const formNew = { ...formData };\r\n        formNew.initialState = {\r\n          ...formNew.initialState,\r\n          responsibleUserId: responsibleUser,\r\n        };\r\n        setFormData(formNew);\r\n      }\r\n    }\r\n  }, [showModal, selectedStatus]);\r\n\r\n  useEffect(() => {\r\n    if (isSuccessUpdateCustomerSubCustomer && isUpdateCustomerSubCustomerData) {\r\n      ToastService.success(isUpdateCustomerSubCustomerData.errorMessage);\r\n      getCustomerById();\r\n      getCustomerCompletionCount(customerId, subCustomer);\r\n    }\r\n  }, [isSuccessUpdateCustomerSubCustomer, isUpdateCustomerSubCustomerData]);\r\n\r\n  const getStatusLabel = (value) => {\r\n    const status = StatusValue.find((item) => item.value === value);\r\n    return status ? status.label : \"Unknown\"; // Returns 'Unknown' if value not found\r\n  };\r\n\r\n  const getApprovalCheckList = () => {\r\n    if (childRef.current) {\r\n      childRef.current.callChildFunction(\r\n        customerId,\r\n        customerData.isSubCustomer ? customerData.isSubCustomer : false,\r\n        false,\r\n        false\r\n      );\r\n    }\r\n  };\r\n\r\n  return !isLoading ? (\r\n    <div className=\"basic-customer-detail\">\r\n      <div className=\"col-xl-12 col-lg-12 col-md-12 col-12\">\r\n        <div className=\"d-flex profile-info  justify-content-between col-12\">\r\n          <div className=\"col-3 flex-column profile-icon-desc justify-content-center\">\r\n            <div className=\"d-flex w-100\">\r\n              {/* <FormCreator config={imagesData} /> */}\r\n              <div className=\"profile-icon \">\r\n                <Image imagePath={customerData?.base64File ? customerData?.base64File : AppIcons.DummyLogo} altText=\"button Icon\" />\r\n              </div>\r\n              <div className=\"detail-sec\">\r\n                <div className=\"customer-name\">\r\n                  <h5 className=\"ml-0\" title={customerData?.name}>\r\n                    {customerData?.name}\r\n                  </h5>\r\n                  <div className=\"info-icon\">\r\n                    <Iconify icon=\"ep:info-filled\" className=\"info\" />\r\n                    <Tooltip text={customerData?.name} />\r\n                  </div>\r\n                </div>\r\n                <div>\r\n                  <div className=\"field-desc col-span-3\">\r\n                    <i className=\"fa fa-envelope\"></i>\r\n                    <a\r\n                      className=\"email-link\"\r\n                      href={`mailto:${customerData?.emailAddress}`}\r\n                    >\r\n                      <div className=\"info-desc\">\r\n                        {customerData?.emailAddress}\r\n                      </div>\r\n                    </a>\r\n\r\n                    <span\r\n                      className=\"copy-icon tooltip-div\"\r\n                      onClick={() =>\r\n                        CopyText(customerData?.emailAddress, \"email\")\r\n                      }\r\n                    >\r\n                      <Iconify icon=\"bitcoin-icons:copy-outline\" />\r\n                      <div className=\"tooltip-show\">\r\n                        <p>Click to Copy</p>\r\n                      </div>\r\n                      <div className=\"tooltip-arrow-icon\"></div>\r\n                    </span>\r\n                  </div>\r\n                  \r\n\r\n                  <div className=\"field-desc \">\r\n                    <i className=\"fa fa-globe\"></i>\r\n                    <div className=\"info-desc\">{customerData?.website}</div>\r\n\r\n                    <span\r\n                      className=\"copy-icon tooltip-div\"\r\n                      onClick={() => CopyText(customerData?.website, \"website\")}\r\n                    >\r\n                      <Iconify icon=\"bitcoin-icons:copy-outline\" />\r\n                      <div className=\"tooltip-show\">\r\n                        <p>Click to Copy</p>\r\n                      </div>\r\n                      <div className=\"tooltip-arrow-icon\"></div>\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-3 pr-5\">\r\n            <div className=\"field-desc basic-info-select dis-dropdown\">\r\n              <div className=\"inf-label\">Status</div>\r\n              <b>&nbsp;:&nbsp;</b>\r\n              {isButtonDisable ?\r\n                <div className={`info-desc  ${getStatusClass()}`}>{selectedStatus}</div>\r\n                :\r\n                <div className={`status-dropdown ${getStatusClass()}`}>\r\n                  <DropDown\r\n                    options={filteredStatusOptions}\r\n                    value={selectedStatus}\r\n                    onChange={handleStatusChange}\r\n                    placeholder=\"Select Status\"\r\n                    isDisabled={isButtonDisable}\r\n                  />\r\n                </div>}\r\n            </div>\r\n\r\n            <div className=\"field-desc\">\r\n              <div className=\"inf-label\">Tax Id</div>\r\n              <b>&nbsp;:&nbsp;</b>\r\n              <div className=\"info-desc\">\r\n                {customerData?.taxId\r\n                  ? customerData?.taxId\r\n                  : ErrorMessage.NotAvailabe}\r\n              </div>\r\n            </div>\r\n            <div className=\"field-desc basic-info-select dis-dropdown\">\r\n              <div className=\"inf-label\">R-User</div>\r\n              <b>&nbsp;:&nbsp;</b>\r\n              <div className=\"status-dropdown\">\r\n                {/* <DropDown\r\n              options={responsibleUserOptions}\r\n              value={rUserValue}\r\n              onChange={updateRUserData}\r\n              placeholder=\"Responsible User\"\r\n              isDisabled={isResponsibleUser ? true : isButtonDisable}\r\n              isMultiSelect={true}\r\n              onBlur={onHandleBlur}\r\n            /> */}\r\n                <DropdownSelect\r\n                  isMultiSelect={true}\r\n                  placeholder=\"Responsible User\"\r\n                  isDropdownDisabled={\r\n                    isResponsibleUser ? true : isButtonDisable\r\n                  }\r\n                  optionsValue={responsibleUserOptions}\r\n                  value={rUserValue}\r\n                  handleDropdownChange={updateRUserData}\r\n                  handleDropdownBlur={onHandleBlur}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"field-desc\">\r\n              <div className=\"inf-label\">List Code</div>\r\n              <b>&nbsp;:&nbsp;</b>\r\n              <div className=\"info-desc\">\r\n                {customerData?.listCode\r\n                  ? customerData?.listCode\r\n                  : ErrorMessage.NotAvailabe}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* second no */}\r\n          <div className=\"col-3  separator\">\r\n            <div className=\"field-desc\">\r\n              <div className=\"inf-label\">Country</div>\r\n              <b>&nbsp;:&nbsp;</b>\r\n              <div className=\"info-desc\">{customerData?.countryName}</div>\r\n            </div>\r\n            <div className=\"field-desc\">\r\n              <div className=\"inf-label\">Territory</div>\r\n              <b>&nbsp;:&nbsp;</b>\r\n              <div className=\"info-desc\">{customerData?.territory}</div>\r\n            </div>\r\n            <div className=\"field-desc\">\r\n              <div className=\"inf-label\">Group Type</div>\r\n              <b>&nbsp;:&nbsp;</b>\r\n              <div className=\"info-desc\">{customerData?.type}</div>\r\n            </div>\r\n            <div className=\"field-desc\">\r\n              <div className=\"inf-label\">Incoterm</div>\r\n              <b>&nbsp;:&nbsp;</b>\r\n              <div className=\"info-desc\">{customerData?.incotermName}</div>\r\n            </div>\r\n          </div>\r\n          {/* third no */}\r\n\r\n          <div className=\"col-3\">\r\n            <div className=\"field-desc\">\r\n              <div className=\"inf-label inf-label-width \">\r\n                Is Buying for Third Party\r\n              </div>\r\n              <b>&nbsp;:&nbsp;</b>\r\n              <div className=\"info-desc\">\r\n                {customerData?.isBuyingForThirdParty}\r\n                {customerData && customerData.isBuyingForThirdParty ? (\r\n                  <i className=\"fa fa-check green-color\"></i>\r\n                ) : (\r\n                  <i className=\"fa fa-times red-color\"></i>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"field-desc\">\r\n              <div className=\"inf-label inf-label-width\">Is Sub Customer</div>\r\n              <b>&nbsp;:&nbsp;</b>\r\n              <div className=\"checkbox-part ml-2 mt-2\">\r\n                <div className=\"checkbox\">\r\n                  <input\r\n                    name={\"isSubCustomer\"}\r\n                    className=\"form-checkbox\"\r\n                    type=\"checkbox\"\r\n                    id={\"isSubCustomer\"}\r\n                    checked={\r\n                      customerData?.isSubCustomer\r\n                        ? customerData?.isSubCustomer\r\n                        : false\r\n                    }\r\n                    onChange={handleCheckboxChange}\r\n                    disabled={isResponsibleUser ? true : isButtonDisable}\r\n                  />\r\n                  <label\r\n                    htmlFor={\"isSubCustomer\"}\r\n                    className=\"checkbox-label\"\r\n                  ></label>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {isResponsibleUser || !isButtonDisable ? (\r\n              <div className=\"field-desc\">\r\n                <div className=\"inf-label inf-label-width submission-tab\">\r\n                  Invoice Submission\r\n                </div>\r\n                <b>&nbsp;:&nbsp;</b>\r\n                <div className=\"checkbox-part ml-2 mt-2 eye-icon tooltip-div\">\r\n                  <Iconify icon=\"ph:eye-duotone\" onClick={handleModelShow} />\r\n                  <div className=\"tooltip-show\">\r\n                    <p>Add/Edit Invoice Submission</p>\r\n                  </div>\r\n                  <div className=\"tooltip-arrow-icon\"></div>\r\n                </div>\r\n              </div>\r\n            ) : null}\r\n\r\n            <div className=\"field-desc\">\r\n              <div className=\"inf-label inf-label-width\">\r\n                Profile Completion\r\n              </div>\r\n              {totalCount && (\r\n                <>\r\n                  <b>&nbsp;:&nbsp;</b>\r\n                  <div\r\n                    className=\"submission-tab d-flex gap-2 align-items-center\"\r\n                    style={{ cursor: \"pointer\", fontSize: \"13px\" }}\r\n                    onClick={getApprovalCheckList}\r\n                  >\r\n                    {approvalSuccessCount + \"/\" + totalCount}\r\n                    <span className=\"tooltip-div\">\r\n                      <Iconify icon=\"ep:info-filled\" className=\"info\" />\r\n                      <div className=\"tooltip-show\">\r\n                        <p>Click to view</p>\r\n                      </div>\r\n                      <div className=\"tooltip-arrow-icon\"></div>\r\n                    </span>\r\n                  </div>\r\n                </>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"edit-icons\" onClick={editClick}>\r\n          {/* <Image imagePath={AppIcons.editThemeIcon} altText=\"Website Icon\" /> */}\r\n          <Iconify icon=\"tabler:pencil\" />\r\n        </div>\r\n      </div>\r\n      {showModal && (\r\n        <CenterModel\r\n          showModal={showModal}\r\n          handleToggleModal={handleToggleModal}\r\n          modalTitle={`${getStatusLabel(selectedStatus)} Reason`}\r\n          modelSizeClass=\"w-50s\"\r\n        >\r\n          <div className=\"row\">\r\n            <FormCreator config={formData} ref={reasonRef} {...formData} />\r\n            <div className=\"col-md-12 mt-2\">\r\n              <div className=\"d-flex align-item-end justify-content-end\">\r\n                <div className=\"d-flex align-item-end\">\r\n                  <Buttons\r\n                    buttonTypeClassName=\"theme-button\"\r\n                    buttonText=\"Update\"\r\n                    isLoading={updateCustomerInActiveStatusCustomerLoading}\r\n                    onClick={handleUpdate}\r\n                  />\r\n                  <Buttons\r\n                    buttonTypeClassName=\"dark-btn ml-5\"\r\n                    buttonText=\"Cancel\"\r\n                    onClick={handleToggleModal}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CenterModel>\r\n      )}\r\n      {isInvoiceModelShow && (\r\n        <CenterModel\r\n          showModal={isInvoiceModelShow}\r\n          handleToggleModal={setIsInvoiceModelShow}\r\n          modalTitle=\"Add/Edit Invoice Submission Instruction\"\r\n          modelSizeClass=\"w-60\"\r\n        >\r\n          <AddEditInvoiceSubmissionInstructionDetail\r\n            customerId={customerId}\r\n            isInvoiceModelShow={isInvoiceModelShow}\r\n            setIsInvoiceModelShow={setIsInvoiceModelShow}\r\n            handleToggleModal={handleToggleModal}\r\n          />\r\n        </CenterModel>\r\n      )}\r\n      <CustomerApproval\r\n        isDetailPage={true}\r\n        childRef={childRef}\r\n        updateCustomerApproval={updateCustomerApproval}\r\n        responsibleUserIds={responsibleUserIds}\r\n        setSelectedStatus={setSelectedStatus}\r\n        onRejectedCustomerFromApproval={rejectedCustomerFromApproval}\r\n      />\r\n    </div>\r\n  ) : (\r\n    <DataLoader />\r\n  );\r\n};\r\n\r\nCustomerBasicInfoCard.propTypes = {\r\n  editClick: PropTypes.func.isRequired,\r\n  customerData: PropTypes.shape({\r\n    name: PropTypes.string,\r\n    emailAddress: PropTypes.string,\r\n    website: PropTypes.string,\r\n    taxId: PropTypes.string,\r\n    statusId: PropTypes.number,\r\n    status: PropTypes.string,\r\n    responsibleUserName: PropTypes.string,\r\n    countryName: PropTypes.string,\r\n    territory: PropTypes.string,\r\n    type: PropTypes.string,\r\n    isBuyingForThirdParty: PropTypes.bool,\r\n    isSubCustomer: PropTypes.bool,\r\n  }),\r\n  isLoading: PropTypes.bool,\r\n  customerId: PropTypes.number.isRequired,\r\n  getCustomerById: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default CustomerBasicInfoCard;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\r\nimport \"../../../../customerDetail/CustomerSupplier.scss\";\r\nimport { useSelector } from \"react-redux\";\r\nimport BasicDetailContext from \"../../../../../utils/ContextAPIs/Customer/BasicDetailContext\";\r\nimport CustomerBasicDetail from \"../../../feature/customerBasicDetail/CustomerBasicDetail\";\r\nimport SidebarModel from \"../../../../../components/ui/sidebarModel/SidebarModel\";\r\nimport { AppIcons } from \"../../../../../data/appIcons\";\r\nimport Buttons from \"../../../../../components/ui/button/Buttons\";\r\nimport { decryptUrlData } from \"../../../../../services/CryptoService\";\r\nimport { useLazyGetCustomersBasicInformationByIdQuery } from \"../../../../../app/services/basicdetailAPI\";\r\nimport CardSection from \"../../../../../components/ui/card/CardSection\";\r\nimport CustomerViewTab from \"../../../feature/customerViewDetail/customerViewTab/CustomerViewTab\";\r\nimport CustomerBasicInfoCard from \"../../../feature/customerViewDetail/customerBasicInfoCard/CustomerBasicInfoCard\";\r\nimport \"./CustomerDetails.scss\"\r\nimport { validateResponsibleUserId } from \"../../../../../utils/ResponsibleUser/validateRUser\";\r\n\r\nconst CustomerDetails = () => {\r\n\r\n  const navigate = useNavigate();\r\n  const { id } = useParams();\r\n  const authState = useSelector((state) => state.auth);\r\n  const keyId = id ? decryptUrlData(id) : 0;\r\n  const [isModelOpen, setIsModelOpen] = useState(false);\r\n  const [customerData, setCustomerData] = useState(null);\r\n  const [isBuyingForThirdParty, setIsBuyingForThirdParty] = useState(false);\r\n\r\n  const { setCustomerId, customerId, setIsResponsibleUser, setCustomerCountryId, setSubCustomer } = useContext(BasicDetailContext);\r\n\r\n  const [\r\n    getCustomersBasicInformationById,\r\n    {\r\n      isFetching: isGetCustomersBasicInformationByIdFetching,\r\n      isSuccess: isGetCustomersBasicInformationById,\r\n      data: GetCustomersBasicInformationByIdData,\r\n    },\r\n  ] = useLazyGetCustomersBasicInformationByIdQuery();\r\n\r\n  useEffect(() => {\r\n    if (\r\n      isGetCustomersBasicInformationById &&\r\n      GetCustomersBasicInformationByIdData &&\r\n      !isGetCustomersBasicInformationByIdFetching\r\n    ) {\r\n      setIsResponsibleUser(validateResponsibleUserId(GetCustomersBasicInformationByIdData.responsibleUserId, authState?.user?.userID));\r\n      setCustomerData(GetCustomersBasicInformationByIdData);\r\n      setCustomerCountryId(GetCustomersBasicInformationByIdData.countryId);\r\n      setIsBuyingForThirdParty(GetCustomersBasicInformationByIdData.isBuyingForThirdParty);\r\n      setSubCustomer(GetCustomersBasicInformationByIdData.isSubCustomer);\r\n    }\r\n  }, [\r\n    isGetCustomersBasicInformationById,\r\n    GetCustomersBasicInformationByIdData,\r\n    isGetCustomersBasicInformationByIdFetching,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    if (keyId) {\r\n      setCustomerId(keyId);\r\n      getCustomersBasicInformationById(keyId);\r\n    }\r\n  }, [keyId]);\r\n\r\n  const onSuccess = () => {\r\n    keyId && getCustomersBasicInformationById(keyId);\r\n  };\r\n\r\n  const handleToggleModal = () => {\r\n    setIsModelOpen(true);\r\n  };\r\n  const onSidebarClose = () => {\r\n    setIsModelOpen(false);\r\n  };\r\n  const location = useLocation();\r\n\r\n\r\n  const handleBackClick = () => {\r\n    const paginationObj = location.state?.paginationObj;\r\n    const tabIndex = location.state?.tabIndex;\r\n    navigate(\"/Customers\", { state: { paginationObj, tabIndex } });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"card-bottom-m-0\">\r\n        <div className=\"row\">\r\n          <div className=\"col-xxl-12 col-xl-12 col-md-12 col-12 basic-left-part customer-desc-left-sec mb-2 mt-2 customer-all-details\">\r\n            <CardSection>\r\n              <CustomerBasicInfoCard\r\n                editClick={handleToggleModal}\r\n                customerData={customerData}\r\n                isLoading={!isModelOpen ? isGetCustomersBasicInformationByIdFetching : null}\r\n                customerId={customerId}\r\n                getCustomerById={onSuccess}\r\n                isGetCustomersBasicInformationById={isGetCustomersBasicInformationById}\r\n                isGetCustomersBasicInformationByIdFetching={isGetCustomersBasicInformationByIdFetching}\r\n                GetCustomersBasicInformationByIdData={GetCustomersBasicInformationByIdData}\r\n              />\r\n            </CardSection>\r\n          </div>\r\n          <div className=\"col-xxl-12 col-xl-12 col-md-12 col-12 other-info-tab\">\r\n            <Buttons\r\n              buttonTypeClassName=\"back-button btn dark-btn\"\r\n              onClick={handleBackClick}\r\n              textWithIcon={true}\r\n              buttonText=\"Back\"\r\n              imagePath={AppIcons.BackArrowIcon}\r\n            ></Buttons>\r\n            <div className=\"customer-detail-tab-sec\">\r\n              <CustomerViewTab customerId={customerId} isBuyingForThirdParty={isBuyingForThirdParty} contryIdCode={customerData?.countryId} customerStatusId={customerData?.statusId} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <SidebarModel\r\n        modalTitle=\"Edit Customer Basic Information\"\r\n        contentClass=\"content-50 basic-info-model\"\r\n        onClose={onSidebarClose}\r\n        modalTitleIcon={AppIcons.AddIcon}\r\n        isOpen={isModelOpen}\r\n      >\r\n        <CustomerBasicDetail\r\n          onSidebarClose={onSidebarClose}\r\n          isOpen={isModelOpen}\r\n          customerData={customerData}\r\n          keyId={keyId}\r\n          isEditablePage={true}\r\n          getCustomerById={onSuccess}\r\n          customerStatusId={customerData?.statusId}\r\n        />\r\n      </SidebarModel>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CustomerDetails;\r\n","import { BasicDetailContextProvider } from \"../../../utils/ContextAPIs/Customer/BasicDetailContext\";\r\nimport CustomerDetails from \"../customerGrid/feature/customerViewDetail/CustomerDetails\"\r\n\r\nconst CustomerViewDetails = () => {\r\n\r\n    return (\r\n        <BasicDetailContextProvider>\r\n            <CustomerDetails />\r\n        </BasicDetailContextProvider>\r\n    )\r\n}\r\n\r\nexport default CustomerViewDetails;","import { useEffect, useRef } from 'react';\r\nimport { useState } from 'react';\r\nimport { createContext } from 'react';\r\nimport { useGetValidateCheckListMutation } from '../../../app/services/ApprovalAPI';\r\n\r\nconst BasicDetailContext = createContext();\r\n\r\nexport default BasicDetailContext;\r\n\r\n\r\nexport const BasicDetailContextProvider = ({ children }) => {\r\n\r\n    const molGridRef = useRef();\r\n\r\n    //****  If we have supplier page we have set main id as supplierId. and If we have customer page we have set main id as customerId   */\r\n    const [mainId, setMainId] = useState(0);\r\n    const [customerId, setCustomerId] = useState(0);\r\n    const [subCustomer, setSubCustomer] = useState(false);\r\n    const [customerCountryId, setCustomerCountryId] = useState('');\r\n    //** */\r\n\r\n    //** Shipping Method's */\r\n    const [carriersList, setCarriersList] = useState([]);\r\n    const [showSubBackButton, setShowSubBackButton] = useState(false);\r\n    const [deliveryMethodsList, setDeliveryMethodsList] = useState([]);\r\n    const [isExistsFinancialSetting, setIsExistsFinancialSetting] = useState(false);\r\n    //** */\r\n\r\n    //** Using for Contact  */\r\n    // const [contactId, setContactId] = useState(0);\r\n    const [phoneNumberData, setPhoneNumberData] = useState();\r\n    const [emailAddressData, setEmailAddressData] = useState();\r\n    //** */\r\n\r\n    const [isResponsibleUser, setIsResponsibleUser] = useState(true);\r\n    const [rejectStatusId, setRejectStatusId] = useState('');\r\n\r\n    //** Use for Tab's */\r\n    const nextRef = useRef(null);\r\n    const settingRef = useRef(null);\r\n    const financialRef = useRef(null);\r\n    const [activeTab, setActiveTab] = useState(0);\r\n    const [activeSubTab, setActiveSubTab] = useState(0);\r\n\r\n    //** Completion Changes  */\r\n    const [totalCount, setTotalCount] = useState();\r\n    const [approvalSuccessCount, setApprovalSuccessCount] = useState();\r\n    const [getValidateCheckList, { isSuccess: isGetCheckListSuccess, data: isGetCheckListData }] = useGetValidateCheckListMutation();\r\n\r\n    const getCustomerCompletionCount = (customerId, isSubCustomer) => {\r\n        let request = {\r\n            customerId: customerId,\r\n            supplierId: 0,\r\n            isSubCustomer: isSubCustomer ? isSubCustomer : false\r\n        }\r\n        getValidateCheckList(request);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (isGetCheckListSuccess && isGetCheckListData) {\r\n            if (isGetCheckListData && isGetCheckListData.length > 0) {\r\n                const successCheckList = isGetCheckListData.filter(data => data.isValid);\r\n                setApprovalSuccessCount(successCheckList.length);\r\n                setTotalCount(isGetCheckListData.length);\r\n            }\r\n        }\r\n    }, [isGetCheckListSuccess, isGetCheckListData])\r\n\r\n    const handleActiveSubTabClick = (tabIndex) => {\r\n        setActiveSubTab(tabIndex);\r\n        setShowSubBackButton(false);\r\n        if (tabIndex === 1) {\r\n            setShowSubBackButton(true);\r\n        }\r\n    }\r\n\r\n    const moveNextPage = () => {\r\n        setActiveTab((prev) => prev + 1);\r\n    };\r\n    const movePreviewPage = () => {\r\n        setActiveTab((prev) => prev - 1);\r\n    };\r\n    //** */\r\n\r\n    //** Use for Move next step */\r\n    const addCustomer = (data) => {\r\n        if (activeTab === 6) {\r\n            setActiveSubTab(0)\r\n        }\r\n        if (customerId > 0 && data === 1) {\r\n            if (nextRef.current) {\r\n                nextRef.current.handleAddBasicDetails();\r\n            }\r\n        } else if (customerId > 0) {\r\n            setActiveTab((prev) => prev + 1)\r\n        }\r\n        else {\r\n            if (nextRef.current) {\r\n                nextRef.current.handleAddBasicDetails();\r\n            }\r\n        }\r\n        if (data === 5) {\r\n            setShowSubBackButton(false);\r\n            saveFinacialSetting();\r\n        }\r\n    }\r\n\r\n    const saveFinacialSetting = () => {\r\n        if (settingRef.current) {\r\n            settingRef.current.onhandleEdit();\r\n        }\r\n    }\r\n    //** */\r\n\r\n    return (\r\n        <BasicDetailContext.Provider value={{\r\n            nextRef, customerId, setCustomerId, activeTab, setActiveTab, moveNextPage, movePreviewPage, addCustomer, setPhoneNumberData, setCustomerCountryId,\r\n            customerCountryId, setIsExistsFinancialSetting, isExistsFinancialSetting, financialRef,\r\n            phoneNumberData, setMainId, mainId, setShowSubBackButton, showSubBackButton, setActiveSubTab, activeSubTab, handleActiveSubTabClick, saveFinacialSetting,\r\n            emailAddressData, setEmailAddressData, molGridRef, setDeliveryMethodsList, deliveryMethodsList, setCarriersList, carriersList, settingRef,\r\n            setIsResponsibleUser, isResponsibleUser, setRejectStatusId, rejectStatusId, totalCount, approvalSuccessCount, getCustomerCompletionCount,\r\n            subCustomer, setSubCustomer\r\n        }}>\r\n            {children}\r\n        </BasicDetailContext.Provider>\r\n    );\r\n};","import ToastService from \"../../services/toastService/ToastService\";\r\n\r\nconst CopyText =(text,field )=>{\r\n navigator.clipboard.writeText(text).then(\r\n          () => {\r\n            ToastService.success(`${field} copied to the clipboard.`);\r\n          },\r\n          (err) => {\r\n            ToastService.err(\"Could not copy text: \", err);\r\n          }\r\n        );\r\n   \r\n};\r\nexport default CopyText;"],"names":["reasonData","name","initialState","responsibleUserId","inActiveReason","formFields","id","lable","Field_Name","fieldType","FormFieldTypes","SELECT","dataField","fieldSetting","placeholder","isDisabled","isEnableOnChange","isMultiSelect","validation","type","style","containerCss","TEXTAREA","allowSpace","_ref","isApprovalValidate","showModal","handleToggleModal","children","props","_jsxs","Modal","className","modelSizeClass","show","onHide","keyboard","backdrop","_jsx","Header","closeButton","modalTitle","Body","CustomerHistory","customerId","useContext","BasicDetailContext","HistotyList","isSupplier","keyId","getAuditHistory","useGetCustomerAuditHistoryByCustomerIdMutation","getSearchFilterBindHistory","useLazyGetEventNameAndUserNameByCustomerIdQuery","CustomerContactDetail","React","CustomerDocumentDetail","CustomerNoteDetail","CustomerAddressDetail","CustomerSettingDetails","CustomerSubCustomerDetail","isBuyingForThirdParty","contryIdCode","customerStatusId","isResponsibleUser","setActiveTab","setActiveSubTab","hasNotePermission","hasFunctionalPermission","securityKey","CUSTOMERNOTES","hasAddressPermission","CUSTOMERADDRESS","hasContactPermission","CUSTOMERCONTACT","hasSettingPermission","CUSTOMERSETTING","hasHistoryPermission","CUSTOMERHISTORY","hasDocumentPermission","CUSTOMERDOCUMENT","hasSubCustomerPermission","LINKSUBCUSTOMER","visibleTabs","sMenuItemCaption","icon","component","isEditablePage","isVisible","hasAccess","isSearchFilterShow","filter","tab","RenderTabs","onTabClick","includes","onActiveTab","tabs","InvoiceFormData","invoiceSubmissionInstruction","CKEDITOR","formSetting","isViewOnly","isInvoiceModelShow","setIsInvoiceModelShow","hideButtons","invoiceRef","useRef","formData","setFormData","useState","shouldRerenderFormCreator","addEditCustomerInvoice","isLoading","isAddEditCustomerInvoiceLoading","isSuccess","isAddEditCustomerInvoiceSuccess","data","isAddEditCustomerInvoiceData","useAddEditCustomerInvoiceMutation","GetDetailsbyCustomerID","isFetching","isGetDetailByCustomerIdFetching","isGetDetailByCustomerIdSuccess","isGetDetailByCustomerIdData","useLazyGetDetailsbyCustomerIDQuery","useEffect","newFormData","ToastService","success","errorMessage","_createElement","FormCreator","config","ref","key","Buttons","buttonTypeClassName","buttonText","onClick","handleInvoiceSubmissionData","invoiceData","current","getFormData","request","customerAccountingSettingId","CustomerApproval","editClick","customerData","getCustomerById","isGetCustomersBasicInformationById","isGetCustomersBasicInformationByIdFetching","GetCustomersBasicInformationByIdData","childRef","reasonRef","confirm","SwalAlert","selectedStatus","setSelectedStatus","setShowModal","customerID","setCustomerId","statusId","setStatusId","responsibleUserIds","setResponsibleUserIds","rUserValue","setRUserValue","responsibleUserOptions","setResponsibleUserOptions","filteredStatusOptions","setFilteredStatusOptions","StatusValue","prevRUserValue","setPrevRUserValue","updateCustomerSubCustomer","isSuccessUpdateCustomerSubCustomer","isUpdateCustomerSubCustomerData","useUpdateCustomerSubCustomerMutation","addEditResponsibleUserForCustomer","isSuccessAddEditResponsibleUserForCustomer","isAddEditResponsibleUserForCustomerData","useAddEditResponsibleUserForCustomerMutation","updateCustomerStatus","isSuccessUpdateCustomerStatus","updateCustomerStatusData","useUpdateCustomerStatusMutation","updateCustomerInActiveStatus","updateCustomerInActiveStatusCustomerLoading","isSuccessUpdateCustomerInActiveStatus","updateCustomerInActiveStatusData","useUpdateCustomerInActiveStatusMutation","addCustomerNotes","useAddCustomerNotesMutation","totalCount","approvalSuccessCount","getCustomerCompletionCount","setSubCustomer","subCustomer","isButtonDisable","setIsButtonDisable","hasEditPermission","EDITBASICCUSTOMERDETAILS","getAllUser","isGetAllUserSucess","allGetAlluserData","useLazyGetAllUserQuery","isEditable","_GetCustomersBasicInf","_GetCustomersBasicInf2","split","map","trim","responsibleUserNames","responsibleUserName","responsibleUsers","index","value","label","status","isSubCustomer","filterData","item","roleName","excludingRoles","role","toLowerCase","uniqueData","Array","from","Map","fullName","values","modifyUserData","userId","toString","filterDataDropdown","uniqueDataDropdown","setDropDownOptionField","newStatusOptions","statusMapping","APPROVED","option","PENDING","removeFields","modifyFormFields","removeFormFields","updateRUserDataDropdown","req","String","onReset","restData","getStatusClass","CustomerSupplierStatus","REJECT","responsibleUser","Number","formNew","DataLoader","Image","imagePath","base64File","AppIcons","DummyLogo","altText","title","Iconify","Tooltip","text","href","emailAddress","CopyText","website","DropDown","options","onChange","selectedOption","warning","then","confirmed","FREEZE","BLOCK","DISABLE","SUBMITTED","callChildFunction","taxId","ErrorMessage","NotAvailabe","DropdownSelect","isDropdownDisabled","optionsValue","handleDropdownChange","handleDropdownBlur","onHandleBlur","currentValues","join","listCode","countryName","territory","incotermName","checked","e","target","SuccessMessage","Confirm_Update","replace","disabled","htmlFor","handleModelShow","_Fragment","cursor","fontSize","getApprovalCheckList","CenterModel","find","getStatusLabel","handleUpdate","custData","note","AddEditInvoiceSubmissionInstructionDetail","isDetailPage","updateCustomerApproval","onRejectedCustomerFromApproval","rejectedCustomerFromApproval","CustomerDetails","navigate","useNavigate","useParams","authState","useSelector","state","auth","decryptUrlData","isModelOpen","setIsModelOpen","setCustomerData","setIsBuyingForThirdParty","setIsResponsibleUser","setCustomerCountryId","getCustomersBasicInformationById","useLazyGetCustomersBasicInformationByIdQuery","_authState$user","validateResponsibleUserId","user","userID","countryId","onSuccess","onSidebarClose","location","useLocation","CardSection","CustomerBasicInfoCard","handleBackClick","_location$state","_location$state2","paginationObj","tabIndex","textWithIcon","BackArrowIcon","CustomerViewTab","SidebarModel","contentClass","onClose","modalTitleIcon","AddIcon","isOpen","CustomerBasicDetail","CustomerViewDetails","BasicDetailContextProvider","createContext","molGridRef","mainId","setMainId","customerCountryId","carriersList","setCarriersList","showSubBackButton","setShowSubBackButton","deliveryMethodsList","setDeliveryMethodsList","isExistsFinancialSetting","setIsExistsFinancialSetting","phoneNumberData","setPhoneNumberData","emailAddressData","setEmailAddressData","rejectStatusId","setRejectStatusId","nextRef","settingRef","financialRef","activeTab","activeSubTab","setTotalCount","setApprovalSuccessCount","getValidateCheckList","isGetCheckListSuccess","isGetCheckListData","useGetValidateCheckListMutation","length","successCheckList","isValid","saveFinacialSetting","onhandleEdit","Provider","moveNextPage","prev","movePreviewPage","addCustomer","handleAddBasicDetails","handleActiveSubTabClick","supplierId","field","navigator","clipboard","writeText","err"],"sourceRoot":""}