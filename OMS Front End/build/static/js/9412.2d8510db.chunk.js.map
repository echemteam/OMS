{"version":3,"file":"static/js/9412.2d8510db.chunk.js","mappings":"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","sources":["pages/login/features/LoginForm.data.js","pages/login/features/Login.js","pages/login/Login.js"],"sourcesContent":["import { FormFieldTypes } from \"../../../data/formFieldType\";\r\n\r\nconst LoginFormData = {\r\n    name: \"Login From\",\r\n    initialState: { email: \"\", password: \"\" },\r\n    formFields: [\r\n        {\r\n            id: \"email\",\r\n            lable: \"User Name\",\r\n            Field_Name: \"User Name\",\r\n            fieldType: FormFieldTypes.INPUT,\r\n            dataField: \"email\",\r\n            fieldSetting: {\r\n                placeholder: \"User Name\",\r\n                allowSpace: false,\r\n                maxLength:65,\r\n            },\r\n            validation: [{ type: \"require\" }],\r\n            style: {\r\n                containerCss: \"col-md-12 mb-3\"\r\n            }\r\n        },\r\n        {\r\n            id: \"Password\",\r\n            lable: \"Password\",\r\n            Field_Name: \"Password\",\r\n            fieldType: FormFieldTypes.PASSWORD,\r\n            dataField: \"password\",\r\n            fieldSetting: {\r\n                placeholder: \"Password\",\r\n                maxLength:20,\r\n            },\r\n            style: {\r\n                containerCss: \"col-md-12\"\r\n            },\r\n            validation: [{ type: \"require\" }, { type: \"password\" }]\r\n        },\r\n    ],\r\n};\r\n\r\nexport default LoginFormData;","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useRef } from \"react\";\r\nimport FormCreator from \"../../../components/Forms/FormCreator\";\r\nimport Buttons from \"../../../components/ui/button/Buttons\";\r\nimport LoginFormData from \"./LoginForm.data\";\r\nimport { useNavigate } from \"react-router\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport ToastService from \"../../../services/toastService/ToastService\";\r\nimport { authentication } from \"../../../app/slice/authSlice\";\r\nimport { useUserLoginMutation } from \"../../../app/services/authAPI\";\r\nimport { logUserLoginLogoutHistory } from \"../../../utils/Thunk/UserHistory\";\r\nimport { useLazyGetOrganizationAccountingDetailsQuery, useLazyGetOrganizationOtherChargesQuery, useLazyGetOrganizationShippingChargesQuery } from \"../../../app/services/organizationAPI\";\r\nimport { setOrganizationSettings } from \"../../../app/slice/OrganizationSlice\";\r\n\r\nconst LoginForm = () => {\r\n\r\n  const loginFromRef = useRef();\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const { isLogedin } = useSelector((state) => state.auth);\r\n  const [userLogin, { isLoading: loginLoading, isSuccess: loginSuccess, data: authData }] = useUserLoginMutation();\r\n\r\n  //**Get Organization Details  */\r\n  const [getOtherCharges, { isFetching: isGetOtherChargesFetching, isSuccess: isGetOtherChargesSuccess, data: isGetOtherChargesData }] = useLazyGetOrganizationOtherChargesQuery();\r\n  const [getAccountingDetails, { isFetching: isGetAccountingFetching, isSuccess: isGetAccountingSuccess, data: isGetAccountingData }] = useLazyGetOrganizationAccountingDetailsQuery();\r\n  const [getShippingCharges, { isFetching: isGetShippingChargesFetching, isSuccess: isGetShippingChargesSuccess, data: isGetShippingChargesData }] = useLazyGetOrganizationShippingChargesQuery();\r\n\r\n  const handleLogin = () => {\r\n    let authData = loginFromRef.current.getFormData();\r\n    if (authData) {\r\n      let req = {\r\n        userName: authData.email,\r\n        password: authData.password\r\n      }\r\n      userLogin(req);\r\n    }\r\n  };\r\n\r\n  const handleKeyPress = (event) => {\r\n    if (event.key === \"Enter\") {\r\n      event.preventDefault();\r\n      handleLogin();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Check if all fetching is complete\r\n    if (!isGetOtherChargesFetching && isGetOtherChargesSuccess && isGetOtherChargesData &&\r\n      !isGetAccountingFetching && isGetAccountingSuccess && isGetAccountingData &&\r\n      !isGetShippingChargesFetching && isGetShippingChargesSuccess && isGetShippingChargesData) {\r\n      // Dispatch all settings at once\r\n      dispatch(setOrganizationSettings({\r\n        otherCharge: isGetOtherChargesData,\r\n        shippingSetting: isGetShippingChargesData,\r\n        accountingSetting: isGetAccountingData\r\n      }));\r\n    }\r\n  }, [\r\n    isGetOtherChargesFetching, isGetOtherChargesSuccess, isGetOtherChargesData,\r\n    isGetAccountingFetching, isGetAccountingSuccess, isGetAccountingData,\r\n    isGetShippingChargesFetching, isGetShippingChargesSuccess, isGetShippingChargesData,\r\n    dispatch\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    if (loginSuccess && authData) {\r\n      if (authData.isAuthenticated === false) {\r\n        ToastService.error(authData.message)\r\n      }\r\n      else if (authData.isAuthenticated === true) {\r\n        dispatch(authentication(authData));\r\n        // Track user login\r\n        dispatch(logUserLoginLogoutHistory({\r\n          userId: authData.user.userID, // Set appropriate userId from userData\r\n          isLogin: authData.isAuthenticated\r\n        }));\r\n      }\r\n    }\r\n  }, [loginSuccess, authData, dispatch]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      if (isLogedin) {\r\n        await Promise.all([\r\n          getOtherCharges(),\r\n          getShippingCharges(),\r\n          getAccountingDetails()\r\n        ]);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [isLogedin]);\r\n\r\n  // Check if all data has been successfully added before navigating\r\n  useEffect(() => {\r\n    const allDataFetched = !isGetOtherChargesFetching && isGetOtherChargesSuccess &&\r\n      !isGetAccountingFetching && isGetAccountingSuccess &&\r\n      !isGetShippingChargesFetching && isGetShippingChargesSuccess;\r\n    if (allDataFetched) {\r\n      navigate(\"/\");\r\n    }\r\n  }, [isGetOtherChargesFetching, isGetOtherChargesSuccess, isGetAccountingFetching, isGetAccountingSuccess,\r\n    isGetShippingChargesFetching, isGetShippingChargesSuccess, navigate]);\r\n\r\n  return (\r\n    <div className=\"login-form-section\">\r\n      <h2>Login</h2>\r\n      <form onKeyPress={handleKeyPress}>\r\n        <FormCreator\r\n          ref={loginFromRef}\r\n          config={LoginFormData}\r\n          {...LoginFormData}\r\n        // onFormDataUpdate={handleFormDataChange}\r\n        ></FormCreator>\r\n      </form>\r\n      <div className=\"button-part\">\r\n        <Buttons\r\n          buttonTypeClassName=\"info-btn\"\r\n          buttonText=\"Login\"\r\n          onClick={handleLogin}\r\n          isLoading={loginLoading}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;","import React from \"react\";\r\nimport \"./Login.scss\";\r\nimport LoginForm from \"./features/Login\";\r\n\r\nconst Login = () => {\r\n  const currentYear = new Date().getFullYear();\r\n  return (\r\n    <div className=\"login-section\">\r\n      <div className=\"row p-0 m-0\">\r\n        <div className=\"col-xxl-7 col-lg-7 col-md-6 col-12 p-0\">\r\n          <div className=\"left-bg-section\">\r\n            <h2>Welcome to</h2>\r\n            {/* <Image\r\n              imgCustomClassName=\"text-img\"\r\n              imagePath={AppIcons.logoText}\r\n              altText=\"logo image\"\r\n            ></Image> */}\r\n            <h1>OMS </h1>\r\n            <p className=\"copyright\">\r\n              © {currentYear} <span>OMS </span>. All rights reserved\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-xxl-5 col-lg-5 col-md-6 col-12 p-0\">\r\n          <div className=\"right-form-section\">\r\n            <LoginForm />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"names":["name","initialState","email","password","formFields","id","lable","Field_Name","fieldType","FormFieldTypes","INPUT","dataField","fieldSetting","placeholder","allowSpace","maxLength","validation","type","style","containerCss","PASSWORD","LoginForm","loginFromRef","useRef","navigate","useNavigate","dispatch","useDispatch","isLogedin","useSelector","state","auth","userLogin","isLoading","loginLoading","isSuccess","loginSuccess","data","authData","useUserLoginMutation","getOtherCharges","isFetching","isGetOtherChargesFetching","isGetOtherChargesSuccess","isGetOtherChargesData","useLazyGetOrganizationOtherChargesQuery","getAccountingDetails","isGetAccountingFetching","isGetAccountingSuccess","isGetAccountingData","useLazyGetOrganizationAccountingDetailsQuery","getShippingCharges","isGetShippingChargesFetching","isGetShippingChargesSuccess","isGetShippingChargesData","useLazyGetOrganizationShippingChargesQuery","handleLogin","current","getFormData","req","userName","useEffect","setOrganizationSettings","otherCharge","shippingSetting","accountingSetting","isAuthenticated","ToastService","error","message","authentication","logUserLoginLogoutHistory","userId","user","userID","isLogin","async","Promise","all","fetchData","_jsxs","className","children","_jsx","onKeyPress","event","key","preventDefault","FormCreator","ref","config","LoginFormData","Buttons","buttonTypeClassName","buttonText","onClick","Login","currentYear","Date","getFullYear"],"sourceRoot":""}