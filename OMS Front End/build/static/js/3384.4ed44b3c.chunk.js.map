{"version":3,"file":"static/js/3384.4ed44b3c.chunk.js","mappings":"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","sources":["components/ApprovalCheckList/feature/approvalValidateData/ApprovalValidateData.js"],"sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useImperativeHandle, useState, useRef } from \"react\";\r\n//** Lib's */\r\nimport \"./ApprovalValidateData.scss\";\r\nimport Image from \"../../../image/Image\";\r\nimport Buttons from \"../../../ui/button/Buttons\";\r\nimport { AppIcons } from \"../../../../data/appIcons\";\r\nimport DataLoader from \"../../../ui/dataLoader/DataLoader\";\r\nimport CenterModel from \"../../../ui/centerModel/CenterModel\";\r\nimport { encryptUrlData } from \"../../../../services/CryptoService\";\r\nimport ToastService from \"../../../../services/toastService/ToastService\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ApprovalValidateData = ({ parentRef, handleValidateSuccess, validateCheckList, handleDone, showModal, handleShowValidateModal, handleValidateModalClose,\r\n  isGetCheckListLoading, mainId, isDetailPage, isSupplierApproval, isShowBothButton }) => {\r\n\r\n  const scrollRef = useRef(null);\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const [visibleItems, setVisibleItems] = useState([]);\r\n  const [showDoneButton, setShowDoneButton] = useState(false);\r\n  const [showViewButton, setShowViewButton] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (validateCheckList.length > 0) {\r\n      if (currentIndex < validateCheckList.length) {\r\n        const timer = setTimeout(() => {\r\n          setVisibleItems((prevItems) => [\r\n            ...prevItems,\r\n            validateCheckList[currentIndex],\r\n          ]);\r\n          setCurrentIndex((prevIndex) => prevIndex + 1);\r\n        }, 500);\r\n\r\n        if (currentIndex === (validateCheckList.length - 1)) {\r\n          showButtons();\r\n        }\r\n        return () => clearTimeout(timer);\r\n      }\r\n    }\r\n  }, [currentIndex, validateCheckList]);\r\n\r\n  useEffect(() => {\r\n    setCurrentIndex(0);\r\n    setVisibleItems([]);\r\n    setShowDoneButton(false);\r\n    setShowViewButton(false);\r\n  }, [showModal])\r\n\r\n  const boldSpecificWords = (text) => {\r\n    const wordsToBold = [\"Tax Id\", \"Billing Address\", \"Shipping Address\", \"Invoice Submission Contact\", \"Shipping Setting\", \"Responsible User\",\r\n      \"Accounts Payable Contact\", \"Invoice Follow-up Contact\", \"Delivery Method\", \"Delivery Carrier Method\", \"Payment Terms\", \"Payment Method\",\r\n      \"Credit Limit\", \"Billing Currency\", \"Physical Address\", \"Remittance Address\", \"Primary Contact\", \"Purchase Order Contact\", \"Accounts Receivable Contact\",\r\n      \"Purchase order delivery\", \"Credit Card Notes\", \"Check Mailing Address\", \"Financial Settings Bank Address\"];\r\n    const regex = new RegExp(`\\\\b(${wordsToBold.join(\"|\")})\\\\b`, \"g\");\r\n    return text.replace(\r\n      regex,\r\n      '<strong class=\"bold-text validate-title\">$1</strong>'\r\n    );\r\n  };\r\n\r\n  const showButtons = () => {\r\n    if (visibleItems.length === validateCheckList.length) {\r\n      const allDone = visibleItems.some(data => data.isValid === false);\r\n      if (!allDone) {\r\n        setShowDoneButton(true);\r\n        setShowViewButton(false);\r\n      } else {\r\n        setShowDoneButton(false);\r\n        setShowViewButton(true);\r\n      }\r\n    } else {\r\n      setShowDoneButton(false);\r\n      setShowViewButton(true);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (scrollRef.current) {\r\n      scrollRef.current.scrollTop = scrollRef.current.scrollHeight;\r\n    }\r\n    if (visibleItems.length > 0) {\r\n      showButtons();\r\n    }\r\n  }, [visibleItems]);\r\n\r\n  const handleRedirectToDetails = () => {\r\n    let url;\r\n    if (isSupplierApproval) {\r\n      url = `/SupplierDetails/${encryptUrlData(mainId)}`;\r\n    } else {\r\n      url = `/CustomerDetails/${encryptUrlData(mainId)}`;\r\n    }\r\n    window.open(url, \"_blank\");\r\n  }\r\n\r\n  const validateApprovalCheckList = () => {\r\n    const allDone = visibleItems.some(data => data.isValid === false)\r\n    if (allDone) {\r\n      ToastService.warning(\"Please fill the \")\r\n    } else {\r\n      handleValidateSuccess();\r\n    }\r\n  }\r\n\r\n  useImperativeHandle(parentRef, () => ({\r\n    validateApprovalCheckList,\r\n  }));\r\n\r\n  return (\r\n    <>{showModal &&\r\n      <CenterModel modalTitle=\"Validate Customer Information\" showModal={showModal} handleToggleModal={handleShowValidateModal}\r\n        modelSizeClass=\"w-40 validation-center-model\" isApprovalValidate={true}>\r\n        {!isGetCheckListLoading ? (\r\n          <div className=\"Validate-card row\">\r\n            <div className=\"col-12\">\r\n              <div className=\"customer-data-sec\">\r\n                <div ref={scrollRef} className=\"validation-list\">\r\n                  <ul>\r\n                    {visibleItems.map((item) => (\r\n                      <li key={item.id} className={item.isValid ? \"success\" : \"error\"} >\r\n                        <span className=\"tick-untick-img\">\r\n                          <Image imagePath={item.isValid ? AppIcons.RightTickIcon : AppIcons.UnTickIcon} />\r\n                        </span>\r\n                        <span className=\"validation-msg\" dangerouslySetInnerHTML={{ __html: boldSpecificWords(item.messages), }} />\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-12 mt-lg-4\">\r\n              <div className=\"d-flex align-item-center justify-content-center\">\r\n                <div className=\"d-flex align-item-center\">\r\n                  {isShowBothButton &&\r\n                    <>\r\n                      {showDoneButton ?\r\n                        <Buttons buttonTypeClassName=\"theme-button\" buttonText=\"Done\" onClick={handleDone} />\r\n                        : null}\r\n                      {!isDetailPage && showViewButton ?\r\n                        <Buttons buttonTypeClassName=\"theme-button ml-5\" buttonText={isSupplierApproval ? 'View Supplier Details' : 'View Customer Details'}\r\n                          onClick={handleRedirectToDetails} /> :\r\n                        null}\r\n                    </>\r\n                  }\r\n                  <Buttons buttonTypeClassName=\"dark-btn ml-5\" buttonText=\"Cancel\" onClick={handleValidateModalClose} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <DataLoader />\r\n        )}\r\n      </CenterModel>\r\n    }\r\n    </>\r\n  );\r\n};\r\n\r\nApprovalValidateData.propTypes = {\r\n  parentRef: PropTypes.shape({\r\n    current: PropTypes.shape({\r\n      validateApprovalCheckList: PropTypes.func\r\n    })\r\n  }).isRequired,\r\n  handleValidateSuccess: PropTypes.func.isRequired,\r\n  validateCheckList: PropTypes.arrayOf(PropTypes.shape({\r\n    id: PropTypes.number,\r\n    isValid: PropTypes.bool,\r\n    messages: PropTypes.string\r\n  })).isRequired,\r\n  handleDone: PropTypes.func.isRequired,\r\n  showModal: PropTypes.bool.isRequired,\r\n  handleShowValidateModal: PropTypes.func.isRequired,\r\n  handleValidateModalClose: PropTypes.func.isRequired,\r\n  isGetCheckListLoading: PropTypes.bool.isRequired,\r\n  mainId: PropTypes.oneOfType([PropTypes.bool, PropTypes.number]).isRequired,\r\n  isDetailPage: PropTypes.bool,\r\n  isSupplierApproval: PropTypes.bool.isRequired\r\n};\r\nexport default ApprovalValidateData;\r\n"],"names":["_ref","parentRef","handleValidateSuccess","validateCheckList","handleDone","showModal","handleShowValidateModal","handleValidateModalClose","isGetCheckListLoading","mainId","isDetailPage","isSupplierApproval","isShowBothButton","scrollRef","useRef","currentIndex","setCurrentIndex","useState","visibleItems","setVisibleItems","showDoneButton","setShowDoneButton","showViewButton","setShowViewButton","useEffect","length","timer","setTimeout","prevItems","prevIndex","showButtons","clearTimeout","boldSpecificWords","text","regex","RegExp","join","replace","some","data","isValid","current","scrollTop","scrollHeight","validateApprovalCheckList","ToastService","warning","useImperativeHandle","_jsx","_Fragment","children","CenterModel","modalTitle","handleToggleModal","modelSizeClass","isApprovalValidate","DataLoader","_jsxs","className","ref","map","item","Image","imagePath","AppIcons","RightTickIcon","UnTickIcon","dangerouslySetInnerHTML","__html","messages","id","Buttons","buttonTypeClassName","buttonText","onClick","handleRedirectToDetails","url","encryptUrlData","window","open"],"sourceRoot":""}