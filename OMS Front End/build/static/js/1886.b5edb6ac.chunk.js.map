{"version":3,"file":"static/js/1886.b5edb6ac.chunk.js","mappings":"uJAGA,MAAMA,EAAQC,EAAAA,MAAW,IAAM,kCACzBC,EAAQD,EAAAA,MAAW,IAAM,0CACzBE,EAAiBF,EAAAA,MAAW,IAAM,0CAgFxC,EA7E6BG,IAUtB,IAVuB,UAC5BC,EAAS,KACTC,EAAI,SACJC,EAAQ,aACRC,EAAY,UACZC,EAAS,MACTC,EAAK,YACLC,EAAW,cACXC,KACGC,GACJT,EAiBC,OACEU,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,8BAA6BF,SAAA,CACzCH,EAAWM,eACVL,EAAAA,EAAAA,KAAA,OAAKI,UAAU,gBAAeF,UAC5BF,EAAAA,EAAAA,KAAA,MAAAE,SAAKH,EAAWM,kBAGpBF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAkBF,SAAA,CAC9BX,IACCS,EAAAA,EAAAA,KAACM,EAAAA,SAAQ,CAACC,UAAUP,EAAAA,EAAAA,KAAA,OAAAE,SAAK,eAAiBA,UACxCF,EAAAA,EAAAA,KAACZ,EAAK,CAACG,UAAWA,EAAWiB,QAAShB,OAG1CQ,EAAAA,EAAAA,KAACM,EAAAA,SAAQ,CAACC,UAAUP,EAAAA,EAAAA,KAAA,OAAAE,SAAK,eAAiBA,UACxCF,EAAAA,EAAAA,KAACd,EAAK,IACAa,EACJN,SAjCcgB,CAACC,EAAOC,KAChC,GAAIlB,EAAU,CAAC,IAADmB,EACZ,MAAMC,EAAiB,CACrBC,UAAuB,OAAZH,QAAY,IAAZA,GAAqB,QAATC,EAAZD,EAAcI,eAAO,IAAAH,OAAT,EAAZA,EAAuBI,SAClCC,YAAaP,GAEfjB,EAASE,EAAWkB,EACtB,GA2BUK,OAxBSC,KACfzB,GACFA,EAAaC,EACf,EAsBUyB,WAAsB,OAAXvB,QAAW,IAAXA,OAAW,EAAXA,EAAawB,cAAwB,OAAVtB,QAAU,IAAVA,OAAU,EAAVA,EAAYqB,aAA0B,OAAbtB,QAAa,IAAbA,OAAa,EAAbA,EAAesB,gBAGlFpB,EAAAA,EAAAA,KAACM,EAAAA,SAAQ,CAACC,UAAUP,EAAAA,EAAAA,KAAA,OAAAE,SAAK,eAAiBA,UACxCF,EAAAA,EAAAA,KAACX,EAAc,CAACO,MAAOA,GAAS,cAIrC,C","sources":["components/Forms/formField/FormPhoneInputField.js"],"sourcesContent":["import React, { Suspense } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Phone = React.lazy(() => import(\"../../ui/inputs/phone/Phone.js\"));\r\nconst Label = React.lazy(() => import('../../ui/label/Label'));\r\nconst ValidationText = React.lazy(() => import('../../ui/inputs/validation/ValidationText.js'));\r\n\r\n\r\nconst FormPhoneInputFields = ({\r\n  labelName,\r\n  name,\r\n  onChange,\r\n  onValidation,\r\n  dataField,\r\n  error,\r\n  formSetting,\r\n  overRideProps,\r\n  ...inputProps\r\n}) => {\r\n  const handleInputChange = (phone, phoneDetails) => {\r\n    if (onChange) {\r\n      const newPhoneObject = {\r\n        phoneCode: phoneDetails?.country?.dialCode,\r\n        PhoneNumber: phone,\r\n      };\r\n      onChange(dataField, newPhoneObject);\r\n    }\r\n  };\r\n\r\n  const handleOnBlur = () => {\r\n    if (onValidation) {\r\n      onValidation(dataField);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"input-field-sec phone-input\">\r\n        {inputProps.hasMainTitle &&\r\n          <div className=\"section-title\">\r\n            <h5>{inputProps.hasMainTitle}</h5>\r\n          </div>\r\n        }\r\n        <div className=\"input-label-part\">\r\n          {labelName && (\r\n            <Suspense fallback={<div>Loading...</div>}>\r\n              <Label labelName={labelName} htmlFor={name} />\r\n            </Suspense>\r\n          )}\r\n          <Suspense fallback={<div>Loading...</div>}>\r\n            <Phone\r\n              {...inputProps}\r\n              onChange={handleInputChange}\r\n              onBlur={handleOnBlur}\r\n              isDisable={formSetting?.isViewOnly || inputProps?.isDisable || overRideProps?.isDisable}\r\n            />\r\n          </Suspense>\r\n          <Suspense fallback={<div>Loading...</div>}>\r\n            <ValidationText error={error || \"\"} />\r\n          </Suspense>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nFormPhoneInputFields.propTypes = {\r\n  labelName: PropTypes.string,\r\n  name: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  onValidation: PropTypes.func,\r\n  dataField: PropTypes.string.isRequired,\r\n  error: PropTypes.string,\r\n  formSetting: PropTypes.shape({\r\n    isViewOnly: PropTypes.bool\r\n  }),\r\n  overRideProps: PropTypes.shape({\r\n    isDisable: PropTypes.bool\r\n  }),\r\n  inputProps: PropTypes.shape({\r\n    hasMainTitle: PropTypes.string,\r\n    isDisable: PropTypes.bool\r\n  })\r\n};\r\n\r\nexport default FormPhoneInputFields;\r\n"],"names":["Phone","React","Label","ValidationText","_ref","labelName","name","onChange","onValidation","dataField","error","formSetting","overRideProps","inputProps","_jsx","_Fragment","children","_jsxs","className","hasMainTitle","Suspense","fallback","htmlFor","handleInputChange","phone","phoneDetails","_phoneDetails$country","newPhoneObject","phoneCode","country","dialCode","PhoneNumber","onBlur","handleOnBlur","isDisable","isViewOnly"],"sourceRoot":""}