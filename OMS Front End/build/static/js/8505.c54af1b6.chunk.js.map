{"version":3,"file":"static/js/8505.c54af1b6.chunk.js","mappings":"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","sources":["pages/customerDetail/feature/customerDocumentDetail/CustomerDocumentDetail.js"],"sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useContext, useState, useEffect } from \"react\";\r\nimport { securityKey } from \"../../../../data/SecurityKey\";\r\nimport PropTypes from \"prop-types\";\r\n//** Service */\r\nimport { useAddCustomerDocumentsMutation, useDeleteCustomerDocumentsByIdMutation, useLazyDownloadDocumentQuery, useLazyGetCustomerDocumentsByIdQuery, } from \"../../../../app/services/documentAPI\";\r\n\r\nimport { hasFunctionalPermission } from \"../../../../utils/AuthorizeNavigation/authorizeNavigation\";\r\nimport BasicDetailContext from \"../../../../utils/ContextAPIs/Customer/BasicDetailContext\";\r\n\r\nconst DocumentGrid = React.lazy(() => import(\"../../../../common/features/component/Document/DocumentGrid\"));\r\nconst Unauthorize = React.lazy(() => import(\"../../../../pages/unauthorize/Unauthorize.js\"));\r\nconst CardSection = React.lazy(() => import(\"../../../../components/ui/card/CardSection.js\"));\r\n\r\nconst customerSecurityKey = {\r\n  ADD: securityKey.ADDCUSTOMERDOCUMENT,\r\n  DELETE: securityKey.DELETECUSTOMERDOCUMENT,\r\n  DOWNALOD: securityKey.DOWNALODCUSTOMERDOCUMENT,\r\n};\r\n\r\nconst CustomerDocumentDetail = ({ isEditablePage, customerStatusId }) => {\r\n  const [showNormalDocuments, setShowNormalDocuments] = useState(false);\r\n  const [showArchiveDocuments, setShowArchiveDocuments] = useState(false);\r\n\r\n  const hasPermissionToSeeDocuments = hasFunctionalPermission(\r\n    securityKey.CUSTOMERDOCUMENT\r\n  );\r\n\r\n  const {\r\n    customerId,\r\n    isResponsibleUser,\r\n    activeSubTab,\r\n    handleActiveSubTabClick,\r\n  } = useContext(BasicDetailContext);\r\n\r\n  useEffect(() => {\r\n    if (isEditablePage && !isResponsibleUser) {\r\n      if (hasPermissionToSeeDocuments.hasAccess === true) {\r\n        setShowArchiveDocuments(true);\r\n      } else {\r\n        setShowArchiveDocuments(false);\r\n      }\r\n    } else {\r\n      setShowArchiveDocuments(true);\r\n    }\r\n  }, [isEditablePage, hasPermissionToSeeDocuments]);\r\n\r\n  useEffect(() => {\r\n    if (isEditablePage && !isResponsibleUser) {\r\n      if (hasPermissionToSeeDocuments.hasAccess === true) {\r\n        setShowNormalDocuments(true);\r\n      } else {\r\n        setShowNormalDocuments(false);\r\n      }\r\n    } else {\r\n      setShowNormalDocuments(true);\r\n    }\r\n  }, [isEditablePage, hasPermissionToSeeDocuments]);\r\n\r\n  const tabs = [\r\n    {\r\n      sMenuItemCaption: \"Documents\",\r\n      component: (\r\n        <div className=\"financial-sec\">\r\n          {showNormalDocuments ? (\r\n            <DocumentGrid\r\n              keyId={customerId || 0}\r\n              isSupplier={false}\r\n              isEditablePage={isEditablePage}\r\n              SecurityKey={!isResponsibleUser ? customerSecurityKey : null}\r\n              customerStatusId={customerStatusId}\r\n              isArchive={false}\r\n              addDocuments={useAddCustomerDocumentsMutation}\r\n              downloadDocument={useLazyDownloadDocumentQuery}\r\n              deleteDocumentsById={useDeleteCustomerDocumentsByIdMutation}\r\n              getDocumentsById={useLazyGetCustomerDocumentsByIdQuery}\r\n            />\r\n          ) : (\r\n            <Unauthorize />\r\n          )}\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      sMenuItemCaption: \"Archive Documents\",\r\n      component: (\r\n        <div className=\"shipping-sec\">\r\n          {showArchiveDocuments ? (\r\n            <DocumentGrid\r\n              keyId={customerId || 0}\r\n              isSupplier={false}\r\n              isEditablePage={isEditablePage}\r\n              SecurityKey={!isResponsibleUser ? customerSecurityKey : null}\r\n              customerStatusId={customerStatusId}\r\n              isArchive={true}\r\n              addDocuments={useAddCustomerDocumentsMutation}\r\n              downloadDocument={useLazyDownloadDocumentQuery}\r\n              deleteDocumentsById={useDeleteCustomerDocumentsByIdMutation}\r\n              getDocumentsById={useLazyGetCustomerDocumentsByIdQuery}\r\n            />\r\n          ) : (\r\n            <Unauthorize />\r\n          )}\r\n        </div>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    /**\r\n     * This component displays an DocumentGrid for the  module.\r\n     * This hook dynamically sets the API call based on the module (customer or supplier).\r\n     */\r\n\r\n    <div className=\"customer-document-detail\">\r\n      <CardSection>\r\n        <div className=\"main-customer-grid setting-tab-sec\">\r\n          <div className=\"tab-section tab-2-section\">\r\n            {tabs && tabs.length > 0 && (\r\n              <div className=\"row main-inactive-grid\">\r\n                <div className=\"col-12\">\r\n                  <div className=\"tab-sub-section mb-0\">\r\n                    <div className=\"tab-sub-header\">\r\n                      {tabs &&\r\n                        tabs.map((tab, index) => (\r\n                          <>\r\n                            {isEditablePage ? (\r\n                              <button\r\n                                key={index}\r\n                                className={\r\n                                  activeSubTab === index ? \"active\" : \"\"\r\n                                }\r\n                                onClick={() =>\r\n                                  handleActiveSubTabClick(index, tab.sPage)\r\n                                }\r\n                              >\r\n                                {tab.sMenuItemCaption}\r\n                              </button>\r\n                            ) : (\r\n                              <button\r\n                                key={index}\r\n                                className={\r\n                                  activeSubTab === index ? \"active\" : \"\"\r\n                                }\r\n                              >\r\n                                {tab.sMenuItemCaption}\r\n                              </button>\r\n                            )}\r\n                          </>\r\n                        ))}\r\n                    </div>\r\n                    {activeSubTab !== -1 && tabs[activeSubTab].component && (\r\n                      <div className=\"tab-sub-content\">\r\n                        <div className=\"tab-sub-body-section\">\r\n                          {tabs[activeSubTab].component}\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </CardSection>\r\n    </div>\r\n  );\r\n};\r\nCustomerDocumentDetail.propTypes = {\r\n  isEditablePage: PropTypes.bool.isRequired,\r\n};\r\nexport default CustomerDocumentDetail;\r\n"],"names":["DocumentGrid","React","Unauthorize","CardSection","customerSecurityKey","ADD","securityKey","ADDCUSTOMERDOCUMENT","DELETE","DELETECUSTOMERDOCUMENT","DOWNALOD","DOWNALODCUSTOMERDOCUMENT","_ref","isEditablePage","customerStatusId","showNormalDocuments","setShowNormalDocuments","useState","showArchiveDocuments","setShowArchiveDocuments","hasPermissionToSeeDocuments","hasFunctionalPermission","CUSTOMERDOCUMENT","customerId","isResponsibleUser","activeSubTab","handleActiveSubTabClick","useContext","BasicDetailContext","useEffect","hasAccess","tabs","sMenuItemCaption","component","_jsx","className","children","keyId","isSupplier","SecurityKey","isArchive","addDocuments","useAddCustomerDocumentsMutation","downloadDocument","useLazyDownloadDocumentQuery","deleteDocumentsById","useDeleteCustomerDocumentsByIdMutation","getDocumentsById","useLazyGetCustomerDocumentsByIdQuery","length","_jsxs","map","tab","index","_Fragment","onClick","sPage"],"sourceRoot":""}