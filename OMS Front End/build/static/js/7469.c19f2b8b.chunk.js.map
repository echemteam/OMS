{"version":3,"file":"static/js/7469.c19f2b8b.chunk.js","mappings":"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","sources":["data/editGridColumnType.js","pages/customerDetail/feature/customerSettingDetail/CustomerSettingDetails.js","pages/customerDetail/feature/customerSettingDetail/features/Carrier/config/CarrierConfig.js","pages/customerDetail/feature/customerSettingDetail/features/DeliveryMethod/config/DevliveryConfig.js","pages/customerDetail/feature/customerSettingDetail/features/ShippingSetting/config/ShippingConfig.js","pages/customerDetail/feature/customerSettingDetail/features/ShippingSetting/ShippingSettings.js","pages/unauthorize/Unauthorize.js"],"sourcesContent":["export const EditGridColumnType = {\r\n    INPUT: 1,\r\n    DROPDOWN: 2,\r\n    NUMERIC: 3,\r\n    DATEPICKER: 4,\r\n    CHECKBOX: 5,\r\n    // other types\r\n    ACTION: 10,\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useContext, useState, useEffect } from \"react\";\r\n//** Lib's */\r\nimport \"./SettingDetails.scss\"\r\nimport FinancialSettings from \"./FinancialSettings\";\r\nimport { securityKey } from \"../../../../data/SecurityKey\";\r\nimport Unauthorize from \"../../../unauthorize/Unauthorize\";\r\nimport CardSection from \"../../../../components/ui/card/CardSection\";\r\nimport BasicDetailContext from \"../../../../utils/ContextAPIs/Customer/BasicDetailContext\";\r\nimport { hasFunctionalPermission } from \"../../../../utils/AuthorizeNavigation/authorizeNavigation\";\r\nimport ShippingSettings from \"./features/ShippingSetting/ShippingSettings\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst CustomerSettingDetails = ({ isEditablePage, customerStatusId }) => {\r\n\r\n  const [showFinacialTab, setShowFinacialTab] = useState(false);\r\n  const [showShippingTab, setShowShippingTab] = useState(false);\r\n  const { isResponsibleUser, activeSubTab, handleActiveSubTabClick } = useContext(BasicDetailContext);\r\n\r\n  const hasShippingPermission = hasFunctionalPermission(securityKey.CUSTOMERSHIPPINGSETTING);\r\n  const hasFinacialPermission = hasFunctionalPermission(securityKey.CUSTOMERFINANCIALSETTING);\r\n\r\n  useEffect(() => {\r\n    if (isEditablePage && !isResponsibleUser) {\r\n      if (hasShippingPermission.hasAccess === true) {\r\n        setShowShippingTab(true);\r\n      } else {\r\n        setShowShippingTab(false);\r\n      }\r\n    } else {\r\n      setShowShippingTab(true);\r\n    }\r\n  }, [isEditablePage, hasShippingPermission]);\r\n\r\n  useEffect(() => {\r\n    if (isEditablePage && !isResponsibleUser) {\r\n      if (hasFinacialPermission.hasAccess === true) {\r\n        setShowFinacialTab(true);\r\n      } else {\r\n        setShowFinacialTab(false);\r\n      }\r\n    }\r\n    else {\r\n      setShowFinacialTab(true);\r\n    }\r\n  }, [isEditablePage, hasFinacialPermission]);\r\n\r\n  const tabs = [\r\n    {\r\n      sMenuItemCaption: \"Financial\",\r\n      component: (\r\n        <div className=\"mt-2 financial-sec\">\r\n          {showFinacialTab ?\r\n            <FinancialSettings isEditablePage={isEditablePage} customerStatusId={customerStatusId} /> :\r\n            <Unauthorize />\r\n          }\r\n        </div>\r\n      )\r\n    },\r\n    {\r\n      sMenuItemCaption: \"Shipping\",\r\n      component: (\r\n        <div className=\"mt-2 shipping-sec\">\r\n          {showShippingTab ?\r\n            <ShippingSettings isEditablePage={isEditablePage} customerStatusId={customerStatusId}/>\r\n            : <Unauthorize />\r\n          }\r\n        </div>\r\n      )\r\n    },\r\n  ];\r\n  return (\r\n    <div className=\"main-customer-grid setting-tab-sec\">\r\n      <CardSection>\r\n        <div className=\"tab-section tab-2-section\">\r\n          {tabs && tabs.length > 0 && (\r\n            <div className=\"row main-inactive-grid\">\r\n              <div className=\"col-12\">\r\n                <div className=\"tab-sub-section mb-0\">\r\n                  <div className=\"tab-sub-header\">\r\n                    {tabs &&\r\n                      tabs.map((tab, index) => (\r\n                        <>\r\n                          {isEditablePage ?\r\n                            <button key={index} className={activeSubTab === index ? \"active\" : \"\"} onClick={() => handleActiveSubTabClick(index, tab.sPage)}>\r\n                              {tab.sMenuItemCaption}\r\n                            </button>\r\n                            :\r\n                            <button key={index} className={activeSubTab === index ? \"active\" : \"\"}>\r\n                              {tab.sMenuItemCaption}\r\n                            </button>\r\n                          }\r\n                        </>\r\n                      ))}\r\n                  </div>\r\n                  {activeSubTab !== -1 && tabs[activeSubTab].component && (\r\n                    <div className=\"tab-sub-content\">\r\n                      <div className=\"tab-sub-body-section\">\r\n                        {tabs[activeSubTab].component}\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </CardSection>\r\n    </div>\r\n  );\r\n};\r\n\r\nCustomerSettingDetails.propTypes = {\r\n  isEditablePage: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default CustomerSettingDetails;\r\n","import { EditGridColumnType } from \"../../../../../../../data/editGridColumnType\";\r\nimport { FormFieldTypes } from \"../../../../../../../data/formFieldType\";\r\nimport { GridColumnType } from \"../../../../../../../data/gridColumnType\";\r\n\r\nexport const addEditCarrierFormData = {\r\n  name: \"Shipping Form\",\r\n  initialState: {\r\n    carrierId: 0,\r\n    accountNumber: \"\",\r\n    handlingFee: 10,\r\n    isCarrierPrimary: false,\r\n  },\r\n  formFields: [\r\n    {\r\n      id: \"carrier\",\r\n      lable: \"Carrier \",\r\n      Field_Name: \"Carrier\",\r\n      fieldType: FormFieldTypes.SELECT,\r\n      dataField: \"carrier\",\r\n      fieldSetting: {\r\n        placeholder: \"Select Carrier\",\r\n        isEnableOnChange: true,\r\n      },\r\n      validation: [{ type: \"require\" }],\r\n      style: {\r\n        containerCss:\r\n          \"col-xxl-12 col-xl-12 col-md-12 col-12 col-12 mb-2 label-h-0\",\r\n      },\r\n    },\r\n    {\r\n      id: \"accountNumber\",\r\n      lable: \"Account Number \",\r\n      Field_Name: \"Account Number\",\r\n      fieldType: FormFieldTypes.INPUT,\r\n      dataField: \"accountNumber\",\r\n      fieldSetting: {\r\n        placeholder: \"Enter Account Number\",\r\n        allowSpace: true,\r\n        maxLength: 25,\r\n      },\r\n      validation: [{ type: \"require\" }],\r\n      style: {\r\n        containerCss:\r\n          \"col-xxl-12 col-xl-12 col-md-12 col-12 col-12 mb-3 label-h-0\",\r\n      },\r\n    },\r\n    {\r\n      id: \"handlingFee\",\r\n      lable: \"Handling Fee\",\r\n      Field_Name: \"Handling Fee\",\r\n      fieldType: FormFieldTypes.INPUT,\r\n      dataField: \"handlingFee\",\r\n      fieldSetting: {\r\n        placeholder: \"Enter Handling Fee\",\r\n        allowSpace: true,\r\n        maxLength: 3,\r\n      },\r\n      validation: [{ type: \"require\" }],\r\n      style: {\r\n        containerCss:\r\n          \"col-xxl-12 col-xl-12 col-md-12 col-12 col-12 mb-3 label-h-0\",\r\n      },\r\n    },\r\n    {\r\n      id: \"isCarrierPrimary\",\r\n      lable: \"Is Primary\",\r\n      Field_Name: \"Is Primary\",\r\n      fieldType: FormFieldTypes.CHECKBOX,\r\n      dataField: \"isCarrierPrimary\",\r\n      fieldSetting: {\r\n        placeholder: \"\",\r\n        allowSpace: true,\r\n      },\r\n      // validation: [{ type: \"require\" }],\r\n      style: {\r\n        containerCss: \"col-xxl-4 col-xl-12 col-md-12 col-12 col-12 mb-2\",\r\n      },\r\n    },\r\n  ],\r\n};\r\n\r\nexport const AccountGridConfig = {\r\n  columns: [\r\n    {\r\n      name: \"Carrier\",\r\n      fieldName: \"carrier\",\r\n      colStyle: {\r\n        width: \"25%\",\r\n      },\r\n    },\r\n    {\r\n      name: \"Account Number\",\r\n      colStyle: {\r\n        width: \"25%\",\r\n      },\r\n      fieldName: \"accountNumber\",\r\n      allowEditColumn: true,\r\n      editColumn: {\r\n        editColType: EditGridColumnType.INPUT,\r\n        editColFieldName: \"accountNumber\",\r\n        isDisable: false,\r\n        editColValidation: [\r\n          { type: \"required\", message: \"Account Number is required.\" },\r\n        ],\r\n        colConfig: {\r\n          maxLength: 9,\r\n        },\r\n      },\r\n      colSettings: {},\r\n      allowShort: false,\r\n    },\r\n    {\r\n      name: \"Handling Fee New\",\r\n      fieldName: \"handlingFee\",\r\n      colStyle: {\r\n        width: \"25%\",\r\n      },\r\n      colType: GridColumnType.MONEY,\r\n      allowEditColumn: true,\r\n      editColumn: {\r\n        editColType: EditGridColumnType.NUMERIC,\r\n        editColFieldName: \"handlingFee\",\r\n        isDisable: false,\r\n        editColValidation: [\r\n          { type: \"required\", message: \"Handling Fee is required.\" },\r\n          {\r\n            type: \"maxLength\",\r\n            value: 3,\r\n            message: \"Handling Fee must be at least 3 characters long.\",\r\n          },\r\n        ],\r\n\r\n        colConfig: {\r\n          maxLength: 3,\r\n        },\r\n      },\r\n      colSettings: {},\r\n      allowShort: false,\r\n    },\r\n\r\n    {\r\n      name: \"Is Primary\",\r\n      fieldName: \"isPrimary\",\r\n      colStyle: {\r\n        width: \"25%\",\r\n      },\r\n      colType: GridColumnType.CHECKBOX,\r\n      allowEditColumn: true,\r\n      editColumn: {\r\n        editColType: EditGridColumnType.CHECKBOX,\r\n        editColFieldName: \"isPrimary\",\r\n        isDisable: false,\r\n        editColValidation: [],\r\n        allowOnChange: false,\r\n      },\r\n      colSettings: {\r\n        // allowCheckbox: true,\r\n        // isDisabled: false\r\n        isDisabled: false,\r\n        allowEdit: true,\r\n      },\r\n      allowShort: false,\r\n    },\r\n\r\n    {\r\n      name: \"Action\",\r\n      colStyle: {\r\n        width: \"25%\",\r\n      },\r\n      colType: GridColumnType.ACTION,\r\n      defaultAction: {\r\n        allowEdit: true,\r\n        allowDelete: false,\r\n      },\r\n      allowShort: false,\r\n    },\r\n  ],\r\n  editSettings: {\r\n    defualtEditableView: false,\r\n    buttons: {\r\n      save: true,\r\n      cancel: true,\r\n    }\r\n  },\r\n  allowEdit: true,\r\n  handleRowDataUpdate: null,\r\n  OnColumnChangeEdit: null\r\n};\r\n","import { EditGridColumnType } from \"../../../../../../../data/editGridColumnType\";\r\nimport { FormFieldTypes } from \"../../../../../../../data/formFieldType\";\r\nimport { GridColumnType } from \"../../../../../../../data/gridColumnType\";\r\n\r\nexport const addEditDeliveryFormData = {\r\n    name: \"Shipping Form\",\r\n    initialState: {\r\n        charge: '',\r\n        chargeType: '',\r\n        isDeliveryMethodPrimary: false,\r\n    },\r\n    formFields: [\r\n        {\r\n            id: \"chargeType\",\r\n            lable: \"Charge Type \",\r\n            Field_Name: \"Charge Type\",\r\n            fieldType: FormFieldTypes.SELECT,\r\n            dataField: \"chargeType\",\r\n            fieldSetting: {\r\n                placeholder: \"Select Charge Type\",\r\n                isEnableOnChange: true,\r\n                isDisabled: false,\r\n            },\r\n            validation: [{ type: \"require\" }],\r\n            style: {\r\n                containerCss: \"col-xxl-12 col-xl-12 col-md-12 col-12 col-12 mb-2 label-h-0\",\r\n            },\r\n        },\r\n        {\r\n            id: \"charge\",\r\n            lable: \"Charge \",\r\n            Field_Name: \"Charge\",\r\n            fieldType: FormFieldTypes.NUMERIC,\r\n            dataField: \"charge\",\r\n            fieldSetting: {\r\n                placeholder: \"Enter Charge\",\r\n                allowSpace: true,\r\n                maxLength: 3,\r\n            },\r\n            validation: [{ type: \"require\" }],\r\n            style: {\r\n                containerCss: \"col-xxl-12 col-xl-12 col-md-12 col-12 col-12 mb-2 label-h-0\",\r\n            },\r\n        },\r\n        {\r\n            id: \"isDeliveryMethodPrimary\",\r\n            lable: \"Is Primary\",\r\n            Field_Name: \"Is Primary\",\r\n            fieldType: FormFieldTypes.CHECKBOX,\r\n            dataField: \"isDeliveryMethodPrimary\",\r\n            fieldSetting: {\r\n                placeholder: \"\",\r\n                allowSpace: true,\r\n            },\r\n            // validation: [{ type: \"require\" }],\r\n            style: {\r\n                containerCss: \"col-xxl-4 col-xl-12 col-md-12 col-12 col-12 mb-2\",\r\n            },\r\n        },\r\n\r\n    ],\r\n};\r\n\r\nexport const OurAccountGridConfig = {\r\n    columns: [\r\n        {\r\n            name: \"Zone\",\r\n            fieldName: \"zone\",\r\n            colStyle: {\r\n                width: \"20%\",\r\n            },\r\n        },\r\n        {\r\n            name: \"Charge Type\",\r\n            fieldName: \"name\",\r\n            colStyle: {\r\n                width: \"20%\",\r\n            },\r\n        },\r\n        {\r\n            name: \"Charge\",\r\n            fieldName: \"charge\",\r\n            colType: GridColumnType.MONEY,\r\n            colStyle: {\r\n                width: \"20%\",\r\n            },\r\n            allowEditColumn: true,\r\n            editColumn: {\r\n                editColType: EditGridColumnType.NUMERIC,\r\n                editColFieldName: \"charge\",\r\n                isDisable: false,\r\n                editColValidation: [\r\n                    { type: \"required\", message: \"Charge is required.\" },\r\n                    { type: \"maxLength\", value: 3, message: \"Charge Fee must be at least 3 characters long.\" }\r\n                ],\r\n            },\r\n            colSettings: {},\r\n            allowShort: false\r\n        },\r\n        {\r\n            name: \"Is Primary\",\r\n            fieldName: \"isPrimary\",\r\n            colType: GridColumnType.CHECKBOX,\r\n            colStyle: {\r\n                width: \"20%\",\r\n            },\r\n            colSettings: {\r\n                isDisabled: false,\r\n                allowEdit: true\r\n            },\r\n            allowEditColumn: true,\r\n            editColumn: {\r\n                editColType: EditGridColumnType.CHECKBOX,\r\n                editColFieldName: \"isPrimary\",\r\n                isDisable: false,\r\n                editColValidation: [],\r\n                allowOnChange: false,\r\n            },\r\n            allowShort: false\r\n        },\r\n        {\r\n            name: \"Action\",\r\n            colStyle: {\r\n                width: \"20%\",\r\n            },\r\n            colType: GridColumnType.ACTION,\r\n            defaultAction: {\r\n                allowEdit: true,\r\n                allowDelete: false,\r\n            },\r\n            allowShort: false\r\n        },\r\n    ],\r\n    editSettings: {\r\n        defualtEditableView: false,\r\n        buttons: {\r\n            save: true,\r\n            cancel: true\r\n        }\r\n    },\r\n    allowEdit: true,\r\n    handleRowDataUpdate: null,\r\n    OnColumnChangeEdit: null,\r\n    hasChildGridTable: false,\r\n};\r\n","import { FormFieldTypes } from \"../../../../../../../data/formFieldType\";\r\n\r\nexport const shippingFormData = {\r\n    name: \"Shipping Form\",\r\n    initialState: { deliveryAccountId: \"\" },\r\n    formFields: [\r\n        {\r\n            id: \"deliveryAccountId\",\r\n            lable: \"Account Type \",\r\n            Field_Name: \"Account Type\",\r\n            fieldType: FormFieldTypes.SELECT,\r\n            dataField: \"deliveryAccountId\",\r\n            fieldSetting: {\r\n                placeholder: \"Select Account\",\r\n                allowSpace: true,\r\n                isEnableOnChange: true\r\n            },\r\n            validation: [{ type: \"require\" }],\r\n            style: {\r\n                containerCss: \"col-xxl-6 col-xl-12 col-md-12 col-12 col-12\",\r\n            },\r\n        }\r\n    ],\r\n    formSetting: {\r\n        isViewOnly: false\r\n    }\r\n};","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useContext, useEffect, useImperativeHandle, useRef, useState } from \"react\";\r\n//** Lib's */\r\nimport { shippingFormData } from \"./config/ShippingConfig\";\r\nimport FormCreator from \"../../../../../../components/Forms/FormCreator\";\r\nimport DataLoader from \"../../../../../../components/ui/dataLoader/DataLoader\";\r\nimport BasicDetailContext from \"../../../../../../utils/ContextAPIs/Customer/BasicDetailContext\";\r\n//** Service's */\r\nimport SwalAlert from \"../../../../../../services/swalService/SwalService\";\r\nimport ToastService from \"../../../../../../services/toastService/ToastService\";\r\nimport { useLazyGetAllDeliveryAccountsQuery } from \"../../../../../../app/services/commonAPI\";\r\nimport { useAddCustomerShppingDeliveryCarriersAndDeliveryMethodsMutation, useLazyGetShppingDeliveryCarrierAndDeliveryMethodsByIdQuery } from \"../../../../../../app/services/customerSettingsAPI\";\r\nimport { securityKey } from \"../../../../../../data/SecurityKey\";\r\nimport { hasFunctionalPermission } from \"../../../../../../utils/AuthorizeNavigation/authorizeNavigation\";\r\nimport { OurAccountGridConfig } from \"../DeliveryMethod/config/DevliveryConfig\";\r\nimport { AccountGridConfig } from \"../Carrier/config/CarrierConfig\";\r\nimport { setDropDownOptionField } from \"../../../../../../utils/FormFields/FieldsSetting/SetFieldSetting\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n//** Component's */\r\nconst ManageCarrier = React.lazy(() => import(\"../Carrier/ManageCarrier\"));\r\nconst ManageDevliveryMethod = React.lazy(() => import(\"../DeliveryMethod/ManageDevliveryMethod\"));\r\n\r\nconst ShippingSettings = ({ isEditablePage, customerStatusId }) => {\r\n\r\n  const ref = useRef();\r\n  const { confirm } = SwalAlert();\r\n  const [isShowButton, setIsShowButton] = useState(true);\r\n  const [accountTypeId, setAccountTypeId] = useState(0);\r\n  const [formData, setFormData] = useState(shippingFormData);\r\n  const { customerId, setDeliveryMethodsList, setCarriersList, isResponsibleUser, isExistsFinancialSetting, financialRef,\r\n    getCustomerCompletionCount, subCustomer } = useContext(BasicDetailContext);\r\n\r\n  const [getAllAccountType, { isFetching: isAccountTypeFetching, isSuccess: isAccountTypeSuccess, data: isAccountTypeData, },] = useLazyGetAllDeliveryAccountsQuery();\r\n  const [addDefaultShippings, { isSuccess: isAddDefaultShippingsSuccess, data: isAddDefaultShippingsData, },] = useAddCustomerShppingDeliveryCarriersAndDeliveryMethodsMutation();\r\n  const [getDefaultList, { isFetching: isGetDefaultValueFetching, isSuccess: isGetDefaultValueSuccess, data: isGetDefaultValueData }] = useLazyGetShppingDeliveryCarrierAndDeliveryMethodsByIdQuery();\r\n\r\n  const { formSetting } = shippingFormData;\r\n  const DeliveryActionColumn = OurAccountGridConfig.columns.find(column => column.name === \"Action\");\r\n  const CarrierActionColumn = AccountGridConfig.columns.find(column => column.name === \"Action\");\r\n  const hasAddEditPermission = hasFunctionalPermission(securityKey.ADDEDITCUSTOMERSHIPPINGSETTING);\r\n\r\n  useEffect(() => {\r\n    if (isEditablePage) {\r\n      if (!isResponsibleUser) {\r\n        if (hasAddEditPermission.hasAccess === true) {\r\n          formSetting.isViewOnly = false;\r\n        } else {\r\n          setIsShowButton(false);\r\n          formSetting.isViewOnly = true;\r\n          DeliveryActionColumn.defaultAction.allowEdit = false;\r\n          DeliveryActionColumn.defaultAction.allowDelete = false;\r\n          CarrierActionColumn.defaultAction.allowEdit = false;\r\n          CarrierActionColumn.defaultAction.allowDelete = false;\r\n        }\r\n      }\r\n    }\r\n  }, [hasAddEditPermission]);\r\n\r\n  useEffect(() => {\r\n    getAllAccountType();\r\n    handleGetDefaultList();\r\n  }, [customerId, isEditablePage, isExistsFinancialSetting]);\r\n\r\n  useImperativeHandle(financialRef, () => ({\r\n    handleGetDefaultList,\r\n  }));\r\n\r\n  useEffect(() => {\r\n    if (!isAccountTypeFetching && isAccountTypeSuccess && isAccountTypeData) {\r\n      setDropDownOptionField(isAccountTypeData, 'deliveryAccountId', 'name', shippingFormData, 'deliveryAccountId');\r\n    }\r\n  }, [isAccountTypeFetching, isAccountTypeSuccess, isAccountTypeData]);\r\n\r\n  useEffect(() => {\r\n    if (isAddDefaultShippingsSuccess && isAddDefaultShippingsData) {\r\n      handleGetDefaultList();\r\n      ToastService.success(isAddDefaultShippingsData.errorMessage);\r\n      getCustomerCompletionCount(customerId, subCustomer);\r\n    }\r\n  }, [isAddDefaultShippingsSuccess, isAddDefaultShippingsData]);\r\n\r\n  useEffect(() => {\r\n    if (!isGetDefaultValueFetching && isGetDefaultValueSuccess && isGetDefaultValueData) {\r\n      let form = { ...shippingFormData };\r\n      form.initialState = {\r\n        deliveryAccountId: isGetDefaultValueData.deliveryAccountId\r\n      }\r\n      setFormData(form);\r\n      setAccountTypeId(isGetDefaultValueData.deliveryAccountId);\r\n\r\n      if (isGetDefaultValueData?.deliveryMethodsList?.length > 0) {\r\n        const updatedDeliveryMethodsList = isGetDefaultValueData?.deliveryMethodsList?.map((data) => ({\r\n          ...data,\r\n          zone: data.isForInternational ? 'International' : 'Domestic'\r\n        }));\r\n        setDeliveryMethodsList(updatedDeliveryMethodsList);\r\n      } else if (isGetDefaultValueData?.deliveryMethodsList?.length === 0) {\r\n        setDeliveryMethodsList([]);\r\n      }\r\n\r\n      if (isGetDefaultValueData?.shppingDeliveryCarriersList?.length > 0) {\r\n        setCarriersList(isGetDefaultValueData?.shppingDeliveryCarriersList);\r\n      } else if (isGetDefaultValueData?.shppingDeliveryCarriersList?.length === 0) {\r\n        setCarriersList([]);\r\n      }\r\n    }\r\n  }, [isGetDefaultValueFetching, isGetDefaultValueSuccess, isGetDefaultValueData]);\r\n\r\n  const handleChangeDropdown = (data, dataField) => {\r\n    if (dataField === 'deliveryAccountId') {\r\n      confirm(\r\n        \"Shipping Methods?\", \"Are you sure you want to Add Default Shipping Method?\",\r\n        \"Yes\", 'Cancel', true\r\n      ).then((confirmed) => {\r\n        let request = {\r\n          customerId: customerId,\r\n          deliveryAccountId: data.value\r\n        }\r\n        if (confirmed) {\r\n          let defaultRequest = {\r\n            ...request,\r\n            isByDefault: true\r\n          }\r\n          addDefaultShippings(defaultRequest);\r\n          setAccountTypeId(data.value);\r\n        }\r\n        else if (!confirmed) {\r\n          let form = { ...shippingFormData };\r\n          form.initialState = {\r\n            deliveryAccountId: isGetDefaultValueData?.deliveryAccountId\r\n          }\r\n          setFormData(form);\r\n          // let defaultRequest = {\r\n          //   ...request,\r\n          //   isByDefault: false\r\n          // }\r\n          // addDefaultShippings(defaultRequest);\r\n          // setAccountTypeId(data.value);\r\n        }\r\n      }\r\n      );\r\n    }\r\n  }\r\n  const formActionHandler = {\r\n    DDL_CHANGED: handleChangeDropdown,\r\n  };\r\n\r\n  const handleGetDefaultList = () => {\r\n    if (customerId && customerId > 0) {\r\n      getDefaultList(customerId);\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <FormCreator config={formData} ref={ref} {...formData} onActionChange={formActionHandler} />\r\n      {!isGetDefaultValueFetching ?\r\n        <div className=\"grid-section\">\r\n          {accountTypeId === 1 ?\r\n            <ManageDevliveryMethod isEditablePage={isEditablePage} isShowButton={isShowButton} handleGetDefaultList={handleGetDefaultList} customerStatusId={customerStatusId}\r\n              isGetDataLoading={isGetDefaultValueFetching} /> :\r\n            accountTypeId === 2 ?\r\n              <>\r\n                <ManageCarrier isShowButton={isShowButton} handleGetDefaultList={handleGetDefaultList} isGetDataLoading={isGetDefaultValueFetching}\r\n                  isEditablePage={isEditablePage} customerStatusId={customerStatusId} />\r\n                <ManageDevliveryMethod isShowButton={isShowButton} handleGetDefaultList={handleGetDefaultList} isGetDataLoading={isGetDefaultValueFetching}\r\n                  isEditablePage={isEditablePage} customerStatusId={customerStatusId} />\r\n              </> : null\r\n          }\r\n        </div>\r\n        : <DataLoader />}\r\n    </div>\r\n  );\r\n};\r\n\r\nShippingSettings.propTypes = {\r\n  isEditablePage: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default ShippingSettings;\r\n","import Image from \"../../components/image/Image\";\r\nimport { AppIcons } from \"../../data/appIcons\";\r\nimport \"./Unauthorize.scss\";\r\n\r\nconst Unauthorize = () => {\r\n  return (\r\n    <div className=\"center-content-part\">\r\n      <div className=\"content-desc-section\">\r\n        <div className=\"center-container unauthorized-section\">\r\n          <div className=\"left-text\">\r\n            <h4>\r\n            Oops! Unauthorized Access\r\n            </h4>\r\n            {/* <p>You don't have permission to access this page.</p> */}\r\n            <p>\r\n                You are not authorized to access this page.<br></br>Please Contact the administrator for Access.\r\n            </p>\r\n          </div>\r\n          <div className=\"right-img\">\r\n            <Image\r\n              imagePath={AppIcons.unauthorizedImg}\r\n              altText=\"Vector Image\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Unauthorize;\r\n"],"names":["EditGridColumnType","INPUT","DROPDOWN","NUMERIC","DATEPICKER","CHECKBOX","ACTION","_ref","isEditablePage","customerStatusId","showFinacialTab","setShowFinacialTab","useState","showShippingTab","setShowShippingTab","isResponsibleUser","activeSubTab","handleActiveSubTabClick","useContext","BasicDetailContext","hasShippingPermission","hasFunctionalPermission","securityKey","CUSTOMERSHIPPINGSETTING","hasFinacialPermission","CUSTOMERFINANCIALSETTING","useEffect","hasAccess","tabs","sMenuItemCaption","component","_jsx","className","children","FinancialSettings","Unauthorize","ShippingSettings","CardSection","length","_jsxs","map","tab","index","_Fragment","onClick","sPage","addEditCarrierFormData","name","initialState","carrierId","accountNumber","handlingFee","isCarrierPrimary","formFields","id","lable","Field_Name","fieldType","FormFieldTypes","SELECT","dataField","fieldSetting","placeholder","isEnableOnChange","validation","type","style","containerCss","allowSpace","maxLength","AccountGridConfig","columns","fieldName","colStyle","width","allowEditColumn","editColumn","editColType","editColFieldName","isDisable","editColValidation","message","colConfig","colSettings","allowShort","colType","GridColumnType","MONEY","value","allowOnChange","isDisabled","allowEdit","defaultAction","allowDelete","editSettings","defualtEditableView","buttons","save","cancel","handleRowDataUpdate","OnColumnChangeEdit","addEditDeliveryFormData","charge","chargeType","isDeliveryMethodPrimary","OurAccountGridConfig","hasChildGridTable","shippingFormData","deliveryAccountId","formSetting","isViewOnly","ManageCarrier","React","ManageDevliveryMethod","ref","useRef","confirm","SwalAlert","isShowButton","setIsShowButton","accountTypeId","setAccountTypeId","formData","setFormData","customerId","setDeliveryMethodsList","setCarriersList","isExistsFinancialSetting","financialRef","getCustomerCompletionCount","subCustomer","getAllAccountType","isFetching","isAccountTypeFetching","isSuccess","isAccountTypeSuccess","data","isAccountTypeData","useLazyGetAllDeliveryAccountsQuery","addDefaultShippings","isAddDefaultShippingsSuccess","isAddDefaultShippingsData","useAddCustomerShppingDeliveryCarriersAndDeliveryMethodsMutation","getDefaultList","isGetDefaultValueFetching","isGetDefaultValueSuccess","isGetDefaultValueData","useLazyGetShppingDeliveryCarrierAndDeliveryMethodsByIdQuery","DeliveryActionColumn","find","column","CarrierActionColumn","hasAddEditPermission","ADDEDITCUSTOMERSHIPPINGSETTING","handleGetDefaultList","useImperativeHandle","setDropDownOptionField","ToastService","success","errorMessage","_isGetDefaultValueDat","_isGetDefaultValueDat3","_isGetDefaultValueDat4","_isGetDefaultValueDat5","form","deliveryMethodsList","_isGetDefaultValueDat2","updatedDeliveryMethodsList","zone","isForInternational","shppingDeliveryCarriersList","formActionHandler","DDL_CHANGED","handleChangeDropdown","then","confirmed","request","defaultRequest","isByDefault","FormCreator","config","onActionChange","DataLoader","isGetDataLoading","Image","imagePath","AppIcons","unauthorizedImg","altText"],"sourceRoot":""}