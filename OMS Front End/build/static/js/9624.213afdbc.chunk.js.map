{"version":3,"file":"static/js/9624.213afdbc.chunk.js","mappings":"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","sources":["pages/organization/feature/organizationBankDetail/config/OrganizationBank.data.js","pages/organization/feature/organizationBankDetail/OrganizationBankDetail.js"],"sourcesContent":["import { FormFieldTypes } from \"../../../../../data/formFieldType\";\r\n\r\nexport const OrganizationBankFormData = {\r\n  \r\n    initialState: { beneficiaryName:\"\" , checkingAccountNumber:\"\" , routingAccountNumber: \"\" , swiftCode: \"\" ,bankAddress:\"\",bankBranch : \"\"},\r\n    formFields: [\r\n        {\r\n            id: \"beneficiaryName\",\r\n            lable: \"Beneficiary Name \",\r\n            Field_Name: \"Beneficiary Name\",\r\n            fieldType: FormFieldTypes.INPUT,\r\n            dataField: \"beneficiaryName\",\r\n            fieldSetting: {\r\n              placeholder: \"Enter Beneficiary Name\",\r\n              allowSpace: true,\r\n              maxLength:255,\r\n            },\r\n            validation: [{ type: \"require\" }],\r\n            style: {\r\n              containerCss: \"col-xxl-6 col-xl-12 col-md-12 col-12 col-12 mb-input\",\r\n            },\r\n          },\r\n        {\r\n            id: \"checkingAccountNumber\",\r\n            lable: \"Checking Account Number \",\r\n            Field_Name: \"Checking Account Number\",\r\n            fieldType: FormFieldTypes.INPUT,\r\n            dataField: \"checkingAccountNumber\",\r\n            fieldSetting: {\r\n                placeholder: \"Enter Checking Account Number\",\r\n                allowSpace: true,\r\n                maxLength:34,\r\n            },\r\n            validation: [{ type: \"require\" }],\r\n            style: {\r\n                containerCss: \"col-md-6 mb-3 mb-input relative\",\r\n            },\r\n        },\r\n        {\r\n            id: \"routingAccountNumber\",\r\n            lable: \"Routing Account Number \",\r\n            Field_Name: \"Routing Account Number\",\r\n            fieldType: FormFieldTypes.INPUT,\r\n            dataField: \"routingAccountNumber\",\r\n            fieldSetting: {\r\n                placeholder: \"Enter Routing Account Number\",\r\n                allowSpace: true,\r\n                 maxLength:9,\r\n            },\r\n            validation: [{ type: \"require\" }],\r\n            style: {\r\n                containerCss: \"col-md-6 mb-3 mb-input relative\",\r\n            },\r\n        },\r\n          {\r\n            id: \"swiftCode\",\r\n            lable: \"Swift Code \",\r\n            Field_Name: \"Swift Code\",\r\n            fieldType: FormFieldTypes.INPUT,\r\n            dataField: \"swiftCode\",\r\n            fieldSetting: {\r\n                placeholder: \"Enter Swift Code\",\r\n                allowSpace: true,\r\n                maxLength:11,\r\n            },\r\n            validation: [{ type: \"require\" }],\r\n            style: {\r\n                containerCss: \"col-md-6 mb-3 mb-input relative\",\r\n            },\r\n        },\r\n        {\r\n            id: \"bankBranch\",\r\n            lable: \"Bank Branch\",\r\n            Field_Name: \"Bank Branch\",\r\n            fieldType: FormFieldTypes.INPUT,\r\n            dataField: \"bankBranch\",\r\n            fieldSetting: {\r\n                placeholder: \"Enter Bank Branch\",\r\n                allowSpace: true,\r\n                maxLength:100,\r\n            },\r\n            validation: [{ type: \"require\" }],\r\n            style: {\r\n                containerCss: \"col-md-6 mb-3 mb-input relative\",\r\n            },\r\n        },\r\n        {\r\n            id: \"bankAddress\",\r\n            lable: \"Bank Address \",\r\n            Field_Name: \"Bank Address\",\r\n            fieldType: FormFieldTypes.TEXTAREA,\r\n            dataField: \"bankAddress\",\r\n            fieldSetting: {\r\n                placeholder: \"Enter Bank Address\",\r\n                allowSpace: true,\r\n                maxLength:35,\r\n            },\r\n            validation: [{ type: \"require\" }],\r\n            style: {\r\n                containerCss: \"col-md-6 mb-3 mb-input relative\",\r\n            },\r\n        },\r\n        \r\n    ],\r\n    formSetting: {\r\n        isViewOnly: false\r\n    }\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { useRef, useState, useEffect } from \"react\";\r\nimport FormCreator from \"../../../../components/Forms/FormCreator\";\r\nimport Buttons from \"../../../../components/ui/button/Buttons\";\r\nimport ToastService from \"../../../../services/toastService/ToastService\";\r\nimport { OrganizationBankFormData } from \"./config/OrganizationBank.data\";\r\nimport { useAddEditOrganizationBankDetailsMutation, useLazyGetOrganizationBankDetailsQuery } from \"../../../../app/services/organizationAPI\";\r\nimport DataLoader from \"../../../../components/ui/dataLoader/DataLoader\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\n\r\nconst OrganizationBankDetail = (isEditablePage) => {\r\n    const organizationBankRef = useRef();\r\n    const [organizationBankData, setOrganizationBankData] = useState(OrganizationBankFormData);\r\n    const [addEditOrganizationBankDetails, { isLoading: isAddEditOrganizationBankDetailsLoading, isSuccess: isAddEditOrganizationBankDetailsSuccess, data: isAddEditOrganizationBankDetailsData }] = useAddEditOrganizationBankDetailsMutation();\r\n    const [getOrganizationBankDetails, { isFetching: isGetOrganizationBankDetailsFetching, isSuccess: isGetOrganizationBankDetailsSuccess, data: isGetOrganizationBankDetailsData }] = useLazyGetOrganizationBankDetailsQuery();\r\n    const [bankDetailId, setBankDetailId] = useState(0);\r\n    const [isButtonDisable, setIsButtonDisable] = useState(false);\r\n    const { formSetting } = OrganizationBankFormData;\r\n    const roles = useSelector((state) => state.auth.roles.roleName );\r\n\r\n   \r\n   useEffect(() => {\r\n    if (isEditablePage) {\r\n      if (roles?.includes(\"Admin\")) {  \r\n        setIsButtonDisable(false);\r\n        formSetting.isViewOnly = false;\r\n      } else {\r\n        setIsButtonDisable(true);\r\n        formSetting.isViewOnly = true;\r\n      }\r\n    }\r\n  }, [isEditablePage, roles]);\r\n\r\n    useEffect(() => {\r\n        if (isAddEditOrganizationBankDetailsSuccess && isAddEditOrganizationBankDetailsData) {\r\n            ToastService.success(isAddEditOrganizationBankDetailsData.errorMessage);\r\n            getOrganizationBankDetails();\r\n        }\r\n    }, [isAddEditOrganizationBankDetailsSuccess, isAddEditOrganizationBankDetailsData]);\r\n\r\n\r\n    useEffect(() => {\r\n        getOrganizationBankDetails();\r\n    }, [])\r\n\r\n    const handleAddEditBankDetail = () => {\r\n        let bankData = organizationBankRef.current.getFormData();\r\n        if (bankData) {\r\n            const request = {\r\n                ...bankData,\r\n                organizationBankDetailId: bankDetailId,\r\n                beneficiaryName: bankData?.beneficiaryName,\r\n                checkingAccountNumber: bankData?.checkingAccountNumber,\r\n                routingAccountNumber: bankData?.routingAccountNumber,\r\n                swiftCode: bankData?.swiftCode,\r\n                bankAddress: bankData?.bankAddress,\r\n                bankBranch: bankData?.bankBranch,\r\n            }\r\n            addEditOrganizationBankDetails(request);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if (!isGetOrganizationBankDetailsFetching && isGetOrganizationBankDetailsSuccess && isGetOrganizationBankDetailsData) {\r\n            let formData = { ...organizationBankData };\r\n            formData.initialState = {\r\n                ...isGetOrganizationBankDetailsData,\r\n            };\r\n            setOrganizationBankData(formData);\r\n            setBankDetailId(isGetOrganizationBankDetailsData.organizationBankDetailId);\r\n        }\r\n    }, [isGetOrganizationBankDetailsFetching, isGetOrganizationBankDetailsSuccess, isGetOrganizationBankDetailsData,]);\r\n\r\n    if (isGetOrganizationBankDetailsFetching) {\r\n        return <div><DataLoader /></div>; // Replace with a proper loading spinner or component\r\n    }\r\n\r\n    return (\r\n\r\n        <div className=\"row mt-2 add-address-form\">\r\n            {/* <h4 className=\"organization-tab-title\">Bank Details</h4> */}\r\n            <FormCreator config={organizationBankData}\r\n                ref={organizationBankRef}\r\n                {...organizationBankData}\r\n\r\n            />\r\n             {isEditablePage ?\r\n            <div className=\"col-md-12 mt-2\">\r\n                <div className=\"d-flex align-item-end justify-content-end\">\r\n                    <Buttons\r\n                        buttonTypeClassName=\"theme-button\"\r\n                        buttonText=\"Save\"\r\n                        onClick={handleAddEditBankDetail}\r\n                        isLoading={isAddEditOrganizationBankDetailsLoading}\r\n                        isDisable={isButtonDisable}\r\n                    />\r\n                </div>\r\n            </div>:null}\r\n        </div>\r\n    )\r\n}\r\nexport default OrganizationBankDetail;"],"names":["OrganizationBankFormData","initialState","beneficiaryName","checkingAccountNumber","routingAccountNumber","swiftCode","bankAddress","bankBranch","formFields","id","lable","Field_Name","fieldType","FormFieldTypes","INPUT","dataField","fieldSetting","placeholder","allowSpace","maxLength","validation","type","style","containerCss","TEXTAREA","formSetting","isViewOnly","isEditablePage","organizationBankRef","useRef","organizationBankData","setOrganizationBankData","useState","addEditOrganizationBankDetails","isLoading","isAddEditOrganizationBankDetailsLoading","isSuccess","isAddEditOrganizationBankDetailsSuccess","data","isAddEditOrganizationBankDetailsData","useAddEditOrganizationBankDetailsMutation","getOrganizationBankDetails","isFetching","isGetOrganizationBankDetailsFetching","isGetOrganizationBankDetailsSuccess","isGetOrganizationBankDetailsData","useLazyGetOrganizationBankDetailsQuery","bankDetailId","setBankDetailId","isButtonDisable","setIsButtonDisable","roles","useSelector","state","auth","roleName","useEffect","includes","ToastService","success","errorMessage","formData","organizationBankDetailId","_jsx","children","DataLoader","_jsxs","className","FormCreator","config","ref","Buttons","buttonTypeClassName","buttonText","onClick","handleAddEditBankDetail","bankData","current","getFormData","request","isDisable"],"sourceRoot":""}