{"version":3,"file":"static/js/2600.be4add25.chunk.js","mappings":"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","sources":["common/features/component/CustomerSupplierReason/Reason.data.js","components/ui/centerModel/CenterModel.js","pages/customerDetail/feature/customerBasicDetail/config/CustomerBasicDetail.data.js","pages/supplierDetails/addSupplier/features/AddSupplierTab.js","pages/supplierDetails/addSupplier/AddSupplier.js","pages/supplierDetails/feature/supplierAddressDetail/SupplierAddressDetails.js","pages/supplierDetails/feature/supplierApproval/SupplierApproval.js","pages/supplierDetails/feature/supplierBasicDetail/SupplierBasicDetail.js","pages/supplierDetails/feature/supplierContactDetail/SupplierContactDetail.js","pages/supplierDetails/feature/supplierDocumentDetail/SupplierDocumentDetail.js","utils/ContextAPIs/Supplier/AddSupplierContext.js","utils/StatusColors/StatusColors.js"],"sourcesContent":["import { FormFieldTypes } from \"../../../../data/formFieldType\";\r\n\r\nexport const reasonData = {\r\n  name: \"\",\r\n  initialState: {responsibleUserId:0, inActiveReason: \"\" },\r\n  formFields: [\r\n    {\r\n      id: \"ResponsibleUserId\",\r\n      lable: \"Responsible User \",\r\n      Field_Name: \"Responsible User\",\r\n      fieldType: FormFieldTypes.SELECT,\r\n      dataField: \"responsibleUserId\",\r\n      fieldSetting: {\r\n        placeholder: \"Select Responsible User\",\r\n        isDisabled: false,\r\n        isEnableOnChange: true,\r\n        isMultiSelect: true,\r\n      },\r\n      validation: [{ type: \"require\" }],\r\n      style: {\r\n        containerCss: \"col-xxl-6 col-xl-6 col-md-6 col-12 mb-2\",\r\n      },\r\n    },\r\n    {\r\n      id: \"inActiveReason\",\r\n      lable: \"Reason :\",\r\n      Field_Name: \"Reason \",\r\n      fieldType: FormFieldTypes.TEXTAREA,\r\n      dataField: \"inActiveReason\",\r\n      fieldSetting: {\r\n        placeholder: \"please enter Reason\",\r\n        allowSpace: true,\r\n      },\r\n      validation: [{ type: \"require\" }],\r\n      style: {\r\n        containerCss: \"col-xxl-12 col-xl-12 col-md-12 mb-2\",\r\n      },\r\n    },\r\n  ],\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./CenterModel.scss\";\r\nimport { Modal } from \"react-bootstrap\";\r\n\r\nconst CenterModel = ({ isApprovalValidate, showModal, handleToggleModal, children, ...props }) => {\r\n  return (\r\n    <Modal\r\n      className={`center-model-popup ${props.modelSizeClass}`}\r\n      show={showModal}\r\n      onHide={handleToggleModal}\r\n      keyboard={!isApprovalValidate}\r\n      backdrop={isApprovalValidate ? \"static\" : true}\r\n    >\r\n      <Modal.Header closeButton={!isApprovalValidate}>\r\n        <div className=\"model-title\">{props.modalTitle}</div>\r\n      </Modal.Header>\r\n      <Modal.Body>{children}</Modal.Body>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nCenterModel.propTypes = {\r\n  isApprovalValidate: PropTypes.bool,\r\n  showModal: PropTypes.bool.isRequired,\r\n  handleToggleModal: PropTypes.func.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n  modelSizeClass: PropTypes.string,\r\n  modalTitle: PropTypes.string\r\n};\r\nexport default CenterModel;\r\n","import { SuccessMessage } from \"../../../../../data/appMessages\";\r\nimport { FormFieldTypes } from \"../../../../../data/formFieldType\";\r\nimport { GridColumnType } from \"../../../../../data/gridColumnType\";\r\nimport { getLabelClass } from \"../../../../../utils/StatusColors/StatusColors\";\r\n\r\nexport const excludingRoles = [\"Admin\", \"manager\"];\r\n\r\nexport const customerbasicData = {\r\n  initialState: {\r\n    name: \"\",\r\n    groupTypeId: 1,\r\n    countryId: 233,\r\n    territoryId: 2,\r\n    emailAddress: \"\",\r\n    website: \"\",\r\n    note: \"\",\r\n    isSubCustomer: false,\r\n    taxId: \"\",\r\n    isBuyingForThirdParty: false,\r\n    responsibleUserId: \"\",\r\n    customerNoteId: \"\",\r\n    incotermId: 11,\r\n    attachment: \"\",\r\n    base64File: \"\",\r\n    storagePath: \"\",\r\n  },\r\n  formFields: [\r\n    {\r\n      id: \"attachment\",\r\n      lable: \"Customer Logo \",\r\n      Field_Name: \"Attachment\",\r\n      fieldType: FormFieldTypes.IMAGE,\r\n      dataField: \"attachment\",\r\n      fieldSetting: {\r\n        placeholder: \"Upload Attachment\",\r\n        allowSpace: true,\r\n        isImageUpload: true,\r\n        isButtonVisible: true,\r\n        isCustomButtonVisible: false,\r\n        acceptedFiles: \".png , .jpg \",\r\n      },\r\n      style: {\r\n        containerCss:\r\n          \"col-xxl-4 col-xl-4 col-md-4 col-12 mb-input mb-0 custom-file-upload-section validation-image-uploader customer-logo-sec\",\r\n      },\r\n    },\r\n    // {\r\n    //   id: \"\",\r\n    //   lable: \"\",\r\n    //   Field_Name: \"\",\r\n    //   dataField: \"\",\r\n    //   style: {\r\n    //     containerCss: \"col-xxl-4 col-xl-4 col-md-4 col-4 col-4 remove-line\",\r\n    //   },\r\n    // },\r\n    {\r\n      id: \"name\",\r\n      lable: \"Customer Name \",\r\n      Field_Name: \"Customer Name\",\r\n      fieldType: FormFieldTypes.INPUT,\r\n      dataField: \"name\",\r\n      fieldSetting: {\r\n        placeholder: \"Enter Customer Name\",\r\n        allowSpace: true,\r\n        maxLength: 50,\r\n        exemptBoundarySpaces: true,\r\n      },\r\n      validation: [{ type: \"require\" }, { type: \"uniqueName\" }],\r\n      style: {\r\n        containerCss: \"col-xxl-8 col-xl-8 col-md-8 col-12 mb-input\",\r\n      },\r\n      inputButtonGroupConfig: {\r\n        isPrimaryButtonVisible: false,\r\n        // primaryButtonText: 'Verify',\r\n        infoButtonConfig: {\r\n          isInfoButtonVisible: true,\r\n          infoButtonIcon: \"fa-search\",\r\n          infoButtonTooltip: \"Customer Information\",\r\n        },\r\n      },\r\n    },\r\n    {\r\n      id: \"emailAddress\",\r\n      lable: \"Email \",\r\n      Field_Name: \"Email\",\r\n      fieldType: FormFieldTypes.INPUT,\r\n      dataField: \"emailAddress\",\r\n      fieldSetting: {\r\n        placeholder: \"Enter Email\",\r\n        allowSpace: false,\r\n        maxLength: 65,\r\n        exemptBoundarySpaces: true,\r\n      },\r\n      validation: [{ type: \"require\" }, { type: \"email\" }],\r\n      style: {\r\n        containerCss: \"col-xxl-6 col-xl-6 col-md-6 col-12 mb-input\",\r\n      },\r\n    },\r\n    {\r\n      id: \"website\",\r\n      lable: \"Website \",\r\n      Field_Name: \"Website\",\r\n      fieldType: FormFieldTypes.INPUT,\r\n      dataField: \"website\",\r\n      fieldSetting: {\r\n        placeholder: \"https://www.xyz.com\",\r\n        allowSpace: false,\r\n        maxLength: 250,\r\n      },\r\n      validation: [{ type: \"require\" }, { type: \"website\" }],\r\n      style: {\r\n        containerCss: \"col-xxl-6 col-xl-6 col-md-6 col-12 mb-input\",\r\n      },\r\n    },\r\n\r\n    {\r\n      id: \"groupTypeId\",\r\n      lable: \"Group Type \",\r\n      Field_Name: \"Group Type\",\r\n      fieldType: FormFieldTypes.SELECT,\r\n      dataField: \"groupTypeId\",\r\n      fieldSetting: {\r\n        placeholder: \"Select Group Type\",\r\n        isEnableOnChange: true,\r\n      },\r\n      validation: [{ type: \"require\" }],\r\n      style: {\r\n        containerCss: \"col-xxl-3 col-xl-4 col-md-6 col-12 mb-input\",\r\n      },\r\n    },\r\n\r\n    {\r\n      id: \"countryId\",\r\n      lable: \"Country \",\r\n      Field_Name: \"Country\",\r\n      fieldType: FormFieldTypes.SELECT,\r\n      dataField: \"countryId\",\r\n      fieldSetting: {\r\n        placeholder: \"Select Country\",\r\n        isEnableOnChange: true,\r\n      },\r\n      validation: [{ type: \"require\" }],\r\n      style: {\r\n        containerCss: \"col-xxl-3 col-xl-4 col-md-6 col-12 mb-input\",\r\n      },\r\n    },\r\n    {\r\n      id: \"territoryId\",\r\n      lable: \"Territory \",\r\n      Field_Name: \"Territory\",\r\n      fieldType: FormFieldTypes.SELECT,\r\n      dataField: \"territoryId\",\r\n      fieldSetting: {\r\n        placeholder: \"Select Territory\",\r\n        isEnableOnChange: true,\r\n      },\r\n      validation: [{ type: \"require\" }],\r\n      style: {\r\n        containerCss: \"col-xxl-3 col-xl-4 col-md-4 col-12 mb-input\",\r\n      },\r\n    },\r\n    {\r\n      id: \"incotermId\",\r\n      lable: \"Incoterm\",\r\n      Field_Name: \"Incoterm\",\r\n      fieldType: FormFieldTypes.SELECT,\r\n      dataField: \"incotermId\",\r\n      fieldSetting: {\r\n        placeholder: \"Select Incoterm\",\r\n        isEnableOnChange: true,\r\n      },\r\n      validation: [{ type: \"require\" }],\r\n      style: {\r\n        containerCss: \"col-xxl-3 col-xl-4 col-md-4 col-12 mb-input\",\r\n      },\r\n    },\r\n    {\r\n      id: \"taxId\",\r\n      lable: \"Tax Id \",\r\n      Field_Name: \"Tax Id\",\r\n      fieldType: FormFieldTypes.INPUT,\r\n      dataField: \"taxId\",\r\n      fieldSetting: {\r\n        placeholder: \"Tax Id\",\r\n        allowSpace: false,\r\n        minLength: 10,\r\n        maxLength: 10,\r\n        exemptBoundarySpaces: true,\r\n      },\r\n      inputIcon: {\r\n        isIconShow: true,\r\n        faIcon: \"fa-info-circle\",\r\n        message: SuccessMessage.DefaultUSATaxId,\r\n      },\r\n      style: {\r\n        containerCss: \"col-xxl-3 col-xl-3 col-md-4 col-12 mb-input\",\r\n      },\r\n    },\r\n    {\r\n      id: \"responsibleUserId\",\r\n      lable: \"Responsible User \",\r\n      Field_Name: \"Responsible User\",\r\n      fieldType: FormFieldTypes.SELECT,\r\n      dataField: \"responsibleUserId\",\r\n      fieldSetting: {\r\n        placeholder: \"Select Responsible User\",\r\n        isEnableOnChange: true,\r\n        isDisabled: false,\r\n      },\r\n      style: {\r\n        containerCss: \"col-xxl-4 col-xl-4 col-md-4 col-12 mb-input\",\r\n      },\r\n    },\r\n    {\r\n      id: \"isBuyingForThirdParty\",\r\n      lable: \"Is Buying for Third Party\",\r\n      Field_Name: \"Is Buying for Third Party\",\r\n      fieldType: FormFieldTypes.CHECKBOX,\r\n      dataField: \"isBuyingForThirdParty\",\r\n      style: {\r\n        containerCss:\r\n          \"col-xxl-2 col-xl-2 col-md-3 col-12 pt-2 mb-input margin-top-checkbox mt-2\",\r\n      },\r\n    },\r\n    {\r\n      id: \"isSubCustomer\",\r\n      lable: \"Is Sub Customer\",\r\n      Field_Name: \"Is Sub Customer\",\r\n      fieldType: FormFieldTypes.CHECKBOX,\r\n      dataField: \"isSubCustomer\",\r\n      style: {\r\n        containerCss:\r\n          \"col-xxl-2 col-xl-2 col-md-3 col-12 md-pt-0 pt-2 mb-input margin-top-checkbox margin-left0-checkbox mt-2\",\r\n      },\r\n    },\r\n    {\r\n      id: \"note\",\r\n      lable: \"Notes \",\r\n      Field_Name: \"Notes\",\r\n      fieldType: FormFieldTypes.CKEDITOR,\r\n      dataField: \"note\",\r\n      fieldSetting: {\r\n        placeholder: \"Enter Notes\",\r\n        maxLength: 1000,\r\n      },\r\n      // validation: [{ type: \"require\" }],\r\n      style: {\r\n        containerCss: \"col-xxl-5 col-xl-5 col-md-12 col-12 mb-input mb-0\",\r\n      },\r\n    },\r\n  ],\r\n  formSetting: {\r\n    isViewOnly: false,\r\n  },\r\n};\r\n\r\nexport const basicInfoData = {\r\n  columns: [\r\n    {\r\n      name: \"Name\",\r\n      fieldName: \"name\",\r\n      width: \"15%\",\r\n      // allowShort: true,\r\n    },\r\n    {\r\n      name: \"Tax Id\",\r\n      fieldName: \"taxId\",\r\n      width: \"15%\",\r\n      // allowShort: true,\r\n    },\r\n    {\r\n      name: \"Country\",\r\n      fieldName: \"countryName\",\r\n      width: \"15%\",\r\n      // allowShort: true,\r\n    },\r\n\r\n    {\r\n      name: \"Email\",\r\n      fieldName: \"emailAddress\",\r\n      width: \"15%\",\r\n      // allowShort: true,\r\n    },\r\n    {\r\n      name: \"Group Type\",\r\n      fieldName: \"groupType\",\r\n      width: \"15%\",\r\n      // allowShort: true,\r\n    },\r\n    {\r\n      name: \"Status\",\r\n      fieldName: \"status\",\r\n      allowShort: false,\r\n      colType: GridColumnType.LABLE,\r\n      width: \"15%\",\r\n      colSettings: {\r\n        valueField: \"status\",\r\n        getLableClass: getLabelClass,\r\n      },\r\n    },\r\n    {\r\n      name: \"Action\",\r\n      width: \"10%\",\r\n      colType: GridColumnType.ACTION,\r\n      defaultAction: {\r\n        allowEdit: true,\r\n        allowDisable: false,\r\n      },\r\n    },\r\n  ],\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useContext, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport CardSection from \"../../../../components/ui/card/CardSection\";\r\nimport Image from \"../../../../components/image/Image\";\r\nimport { AppIcons } from \"../../../../data/appIcons\";\r\nimport AddSupplierContext from \"../../../../utils/ContextAPIs/Supplier/AddSupplierContext\";\r\nimport { useUpdateSupplierStatusMutation } from \"../../../../app/services/supplierAPI\";\r\nimport ToastService from \"../../../../services/toastService/ToastService\";\r\nimport { CustomerSupplierTabEnum } from \"../../../../utils/Enums/commonEnums\";\r\nimport { StatusEnums } from \"../../../../utils/Enums/StatusEnums\";\r\nimport SupplierBasicDetail from \"../../feature/supplierBasicDetail/SupplierBasicDetail\";\r\nimport SuplierAddressDetails from \"../../feature/supplierAddressDetail/SupplierAddressDetails\";\r\nimport SupplierContactDetail from \"../../feature/supplierContactDetail/SupplierContactDetail\";\r\nimport SupplierDocumentDetail from \"../../feature/supplierDocumentDetail/SupplierDocumentDetail\";\r\nimport Iconify from \"../../../../components/ui/iconify/Iconify\";\r\nimport FinancialSettings from \"../../feature/financialSettings/FinancialSettings\";\r\nimport SupplierApproval from \"../../feature/supplierApproval/SupplierApproval\";\r\nimport { useRef } from \"react\";\r\n\r\nconst AddSupplierTab = () => {\r\n\r\n  const childRef = useRef();\r\n  const navigate = useNavigate();\r\n  const { activeTab, movePreviewPage, addSupplier, supplierId } =\r\n    useContext(AddSupplierContext);\r\n\r\n  const [\r\n    updateSupplierStatus,\r\n    {\r\n      isSuccess: isSuccessUpdateSupplierStatus,\r\n      data: updateSupplierStatusData,\r\n    },\r\n  ] = useUpdateSupplierStatusMutation();\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  const tabContent = [\r\n    {\r\n      label: \"Basic Information\",\r\n      // subLabel: \"Enter Supplier Basic information\",\r\n      content: <SupplierBasicDetail isEditablePage={false} />,\r\n      tab: CustomerSupplierTabEnum.BasicInformation,\r\n    },\r\n    {\r\n      label: \"Address\",\r\n      // subLabel: \"Enter Supplier Address Details\",\r\n      content: <SuplierAddressDetails isEditablePage={false} />,\r\n      tab: CustomerSupplierTabEnum.Address,\r\n    },\r\n    {\r\n      label: \"Contact\",\r\n      // subLabel: \"Enter Supplier Contact Details\",\r\n      content: (\r\n        <SupplierContactDetail\r\n          isEditablePage={false}\r\n          isSearchFilterShow={false}\r\n        />\r\n      ),\r\n      tab: CustomerSupplierTabEnum.Contact,\r\n    },\r\n    {\r\n      label: \"Financial Setting\",\r\n      // subLabel: \"Enter Financial Setting Details\",\r\n      content: <FinancialSettings isEditablePage={false} />,\r\n      tab: CustomerSupplierTabEnum.Setting\r\n    },\r\n    {\r\n      label: \"Documents\",\r\n      // subLabel: \"Add Supplier Documents Details\",\r\n      content: <SupplierDocumentDetail isEditablePage={true} />,\r\n      tab: CustomerSupplierTabEnum.Documents,\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    if (isSuccessUpdateSupplierStatus && updateSupplierStatusData) {\r\n      ToastService.success(updateSupplierStatusData.errorMessage);\r\n      navigate(\"/Suppliers\");\r\n    }\r\n  }, [isSuccessUpdateSupplierStatus, updateSupplierStatusData]);\r\n\r\n  const handleSubmit = () => {\r\n    if (childRef.current) {\r\n      childRef.current.callChildFunction(\r\n        supplierId,\r\n        false\r\n      );\r\n    }\r\n  };\r\n\r\n  const updateSubmitStatus = () => {\r\n    let req = {\r\n      supplierId: supplierId,\r\n      statusId: StatusEnums.Submitted,\r\n    };\r\n    updateSupplierStatus(req);\r\n  };\r\n\r\n  const handleDraft = () => {\r\n    let req = {\r\n      supplierId: supplierId,\r\n      statusId: StatusEnums.Pending,\r\n    };\r\n    updateSupplierStatus(req);\r\n  };\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"stepper-card stepper-view\">\r\n        <CardSection>\r\n          <div className=\"stepper-section\">\r\n            <div className=\"stepper-header\">\r\n              {tabContent.map((step, index) => (\r\n                <React.Fragment key={index}>\r\n                  <div\r\n                    className={`step ${activeTab === index ? \"active\" : \"\"}`}\r\n                  >\r\n                    <button className=\"step-button\">\r\n                      <span className=\"stepper-box\">{index + 1}</span>\r\n                      <span className=\"stepper-label\">\r\n                        <span>{step.label}</span>\r\n                        <span className=\"small-txt\">{step.subLabel}</span>\r\n                      </span>\r\n                    </button>\r\n                  </div>\r\n                  {index < tabContent.length - 1 && (\r\n                    <div className=\"right-arrow\">\r\n                      <Iconify icon=\"solar:alt-arrow-down-outline\" />\r\n                    </div>\r\n                  )}\r\n                </React.Fragment>\r\n              ))}\r\n            </div>\r\n            <div className=\"stepper-content stepper-view-supplier\">\r\n              <form onSubmit={onSubmit}>\r\n                {tabContent.map((step, index) => (\r\n                  <div\r\n                    key={index}\r\n                    className={`content ${activeTab === index ? \"active\" : \"\"}`}\r\n                  >\r\n                    <div className=\"row\">\r\n                      <div className=\"col-12 mx-auto \">\r\n                        {step.content}\r\n                        <div className=\"d-flex justify-content-end mt-5\">\r\n                          {index > 0 && (\r\n                            <button\r\n                              type=\"button\"\r\n                              className=\"btn dark-btn mr-3 btn-prev\"\r\n                              onClick={movePreviewPage}\r\n                            >\r\n                              <Image imagePath={AppIcons.nextArrowIcon} /> Back\r\n                            </button>\r\n                          )}\r\n                          {index < tabContent.length - 1 ? (\r\n                            <button\r\n                              type=\"button\"\r\n                              className=\"btn theme-button btn-next ml-3\"\r\n                              onClick={() => {\r\n                                addSupplier(step.tab);\r\n                              }}\r\n                            >\r\n                              Next <Image imagePath={AppIcons.nextArrowIcon} />\r\n                            </button>\r\n                          ) : (\r\n                            <>\r\n                              <button\r\n                                type=\"submit\"\r\n                                className=\"btn theme-button\"\r\n                                onClick={handleDraft}\r\n                              >\r\n                                Save as Draft\r\n                              </button>\r\n\r\n                              <button\r\n                                type=\"submit\"\r\n                                className=\"btn theme-button ml-3\"\r\n                                onClick={handleSubmit}\r\n                              >\r\n                                Save as Submit\r\n                              </button>\r\n                            </>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </CardSection>\r\n        <SupplierApproval childRef={childRef} isDetailPage={false} isAddPagePage={true} updateApproval={updateSubmitStatus} />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddSupplierTab;\r\n","import { AddSupplierContextProvider } from \"../../../utils/ContextAPIs/Supplier/AddSupplierContext\";\r\nimport AddSupplierTab from \"./features/AddSupplierTab\";\r\n\r\nconst AddSupplier = () => {\r\n\r\n    return (\r\n        <AddSupplierContextProvider>\r\n            <AddSupplierTab />\r\n        </AddSupplierContextProvider>\r\n    )\r\n}\r\n\r\nexport default AddSupplier;","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\n//** Lib's */\r\nimport { securityKey } from '../../../../data/SecurityKey';\r\nimport AddSupplierContext from '../../../../utils/ContextAPIs/Supplier/AddSupplierContext';\r\n//** Service */\r\nimport { useAddAddressMutation, useDeleteAddressMutation, useUpdateAddAddressMutation } from '../../../../app/services/addressAPI';\r\nimport { useLazyGetAddresssBySupplierIdQuery, useLazyGetSupplierAddresssByAddressIdQuery } from '../../../../app/services/supplierAddressAPI';\r\n\r\nconst AddressGrid = React.lazy(() => import(\"../../../../common/features/component/Address/AddressGrid\"));\r\n\r\n//** Component's */\r\n\r\nconst supplierSecurityKey = {\r\n    ADD: securityKey.ADDSUPPLIERADDRESS,\r\n    EDIT: securityKey.EDITSUPPLIERADDRESS,\r\n}\r\n\r\nconst SuplierAddressDetails = ({ isEditablePage, supplierStatus }) => {\r\n\r\n    const { supplierId, isResponsibleUser, setIsAddressChange, getSupplierCompletionCount } = useContext(AddSupplierContext);\r\n\r\n    const getCompletionCount = () => {\r\n        getSupplierCompletionCount(supplierId);\r\n    }\r\n\r\n    return (\r\n        /**\r\n        * This component displays an AddressGrid for the supplier module.\r\n        * This hook dynamically sets the API call based on the module (customer or supplier).\r\n        */\r\n        <AddressGrid\r\n            isSupplier={true}\r\n            isEditablePage={isEditablePage}\r\n            keyId={supplierId || 0}\r\n            SecurityKey={!isResponsibleUser ? supplierSecurityKey : null}\r\n            getAddresssByCustomerId={useLazyGetAddresssBySupplierIdQuery}\r\n            getAddresssById={useLazyGetSupplierAddresssByAddressIdQuery}\r\n            addAddress={useAddAddressMutation}\r\n            updateAddress={useUpdateAddAddressMutation}\r\n            deleteAddress={useDeleteAddressMutation}\r\n            statusId={supplierStatus}\r\n            setIsAddressChange={setIsAddressChange}\r\n            getCompletionCount={getCompletionCount}\r\n        />\r\n    )\r\n}\r\n\r\nSuplierAddressDetails.propTypes = {\r\n    isEditablePage: PropTypes.bool.isRequired,\r\n};\r\nexport default SuplierAddressDetails","import React, { forwardRef, useContext, useEffect, useImperativeHandle, useRef, useState } from \"react\";\r\nimport PropTypes from 'prop-types';\r\n//** Lib's */\r\nimport { ApprovalEnum, OwnerType } from \"../../../../utils/Enums/commonEnums\";\r\nimport ApprovalCheckList from \"../../../../components/ApprovalCheckList/ApprovalCheckList\";\r\n//** Service's */\r\nimport { useGetValidateCheckListMutation, useLazyGetSupplierAddressInfoByIdQuery, useLazyGetSupplierBasicInfoByIdQuery, useLazyGetSupplierContactInfoByIdQuery, useLazyGetSupplierFinacialSettingQuery } from \"../../../../app/services/ApprovalAPI\";\r\nimport AddSupplierContext from \"../../../../utils/ContextAPIs/Supplier/AddSupplierContext\";\r\n//** Component's */\r\nconst ApprovalValidateData = React.lazy(() => import(\"../../../../components/ApprovalCheckList/feature/approvalValidateData/ApprovalValidateData\"));\r\n\r\nconst SupplierApproval = forwardRef(({ childRef, getListApi, updateApproval, isDetailPage, isAddPagePage, setSelectedStatus, responsibleUserIds, OnRejectedSupplierFromApproval }) => {\r\n\r\n    const parentRef = useRef();\r\n    const [supplierId, setSupplierId] = useState(false);\r\n    const [isShowApproval, setIsShowApproval] = useState(false);\r\n    const [validateCheckList, setValidateCheckList] = useState([]);\r\n    const [isShowBothButton, setIsShowBothButton] = useState(false);\r\n    const [isShowValidateModal, setIsShowValidateModal] = useState(false);\r\n    const [showApprovalCheckList, setShowApprovalCheckList] = useState(false);\r\n    const { setRejectStatusId } = useContext(AddSupplierContext);\r\n    const [getValidateCheckList, { isLoading: isGetCheckListLoading, isSuccess: isGetCheckListSuccess, data: isGetCheckListData }] = useGetValidateCheckListMutation();\r\n\r\n    //** Approval CheckList Modal*/\r\n    const handleShowApprovalList = () => {\r\n        setIsShowApproval(!isShowApproval);\r\n    };\r\n\r\n    const onSidebarApprovalClose = () => {\r\n        if (!isDetailPage) {\r\n            getListApi();\r\n        }\r\n        setIsShowApproval(!isShowApproval);\r\n    };\r\n    const onSuccessApprovalClose = () => {\r\n        setIsShowApproval(!isShowApproval);\r\n        updateApproval();\r\n    };\r\n\r\n    //** Validate check list Modal */\r\n    const handleShowValidateModal = (supplierId, isShowApprovalCheckList, isShowBothButton = true) => {\r\n        setIsShowValidateModal(!isShowValidateModal);\r\n        let request = {\r\n            customerId: 0,\r\n            supplierId: supplierId\r\n        }\r\n        getValidateCheckList(request);\r\n        setSupplierId(supplierId);\r\n        setShowApprovalCheckList(isShowApprovalCheckList ? isShowApprovalCheckList : false);\r\n        setIsShowBothButton(isShowBothButton);\r\n    };\r\n\r\n    const handleValidateModalClose = () => {\r\n        setIsShowValidateModal(!isShowValidateModal);\r\n        if (!isDetailPage && !isAddPagePage) {\r\n            getListApi();\r\n        }\r\n    };\r\n    const handleModalClose = () => {\r\n        setIsShowValidateModal(!isShowValidateModal);\r\n    }\r\n\r\n    const handleDone = () => {\r\n        if (parentRef.current) {\r\n            parentRef.current.validateApprovalCheckList();\r\n        }\r\n    }\r\n\r\n    const handleValidateSuccess = () => {\r\n        handleModalClose();\r\n        showApprovalCheckList && handleShowApprovalList();\r\n        !showApprovalCheckList && updateApproval();\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (isGetCheckListSuccess && isGetCheckListData) {\r\n            setValidateCheckList(isGetCheckListData);\r\n        }\r\n    }, [isGetCheckListSuccess, isGetCheckListData])\r\n\r\n    //** Use Imperative Handle */\r\n    useImperativeHandle(childRef, () => ({\r\n        callChildFunction: handleShowValidateModal\r\n    }))\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ApprovalValidateData parentRef={parentRef} handleValidateSuccess={handleValidateSuccess} showModal={isShowValidateModal} isSupplierApproval={true}\r\n                isGetCheckListLoading={isGetCheckListLoading} mainId={supplierId} isDetailPage={isDetailPage} handleShowValidateModal={handleShowValidateModal}\r\n                handleValidateModalClose={handleValidateModalClose} handleDone={handleDone} validateCheckList={validateCheckList} isShowBothButton={isShowBothButton} />\r\n            {(isShowApproval) &&\r\n                <ApprovalCheckList onSidebarClose={onSidebarApprovalClose} isModelOpen={isShowApproval} mainId={supplierId} isSupplierApproval={true}\r\n                    ApprovalData={ApprovalEnum.APPROVESUPPLIER} onSuccessApprovalClose={onSuccessApprovalClose}\r\n                    getBasicInformationById={useLazyGetSupplierBasicInfoByIdQuery} getAddressById={useLazyGetSupplierAddressInfoByIdQuery}\r\n                    getContactById={useLazyGetSupplierContactInfoByIdQuery} getFinacialSettingById={useLazyGetSupplierFinacialSettingQuery} ownerType={OwnerType.Supplier}\r\n                    setRejectStatusId={setRejectStatusId}\r\n                    setSelectedStatus={setSelectedStatus} basicData={responsibleUserIds}\r\n                    OnRejectedSupplierFromApproval={OnRejectedSupplierFromApproval}\r\n                />\r\n            }\r\n        </React.Fragment>\r\n    )\r\n});\r\n\r\nSupplierApproval.propTypes = {\r\n    childRef: PropTypes.shape({\r\n        current: PropTypes.object\r\n    }).isRequired,\r\n    getListApi: PropTypes.func,\r\n    updateApproval: PropTypes.func.isRequired,\r\n    isDetailPage: PropTypes.bool,\r\n};\r\nexport default SupplierApproval;","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types'; \r\n//** Lib's */\r\nimport CardSection from '../../../../components/ui/card/CardSection';\r\n//** Component */\r\nconst AddEditSupplierBasicDetail = React.lazy(() => import(\"./AddEditSupplierBasicDetail\"));\r\n\r\nconst SupplierBasicDetail = (props) => {\r\n\r\n  const { isOpen, getSupplierById, onSidebarClose, keyId, isEditablePage } = props;\r\n\r\n  return (\r\n    <div className=\"basic-info-sec half-sec supplier-basic-info-model\">\r\n      <CardSection buttonClassName=\"theme-button\">\r\n        <AddEditSupplierBasicDetail keyId={keyId} getSupplierById={getSupplierById} isOpen={isOpen} isEditablePage={isEditablePage}\r\n          onSidebarClose={onSidebarClose} />\r\n      </CardSection>\r\n    </div>\r\n  );\r\n}\r\n\r\nSupplierBasicDetail.propTypes = {\r\n  isOpen: PropTypes.bool,\r\n  getSupplierById: PropTypes.func ,\r\n  onSidebarClose: PropTypes.func ,\r\n  keyId: PropTypes.number ,\r\n  isEditablePage: PropTypes.bool ,\r\n};\r\n\r\nexport default SupplierBasicDetail","import React, { useContext } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { securityKey } from \"../../../../data/SecurityKey\";\r\nimport AddSupplierContext from \"../../../../utils/ContextAPIs/Supplier/AddSupplierContext\";\r\n//** Service */\r\nimport { useAddEditContactMutation, useLazyGetContactBySupplierIdQuery, useLazyGetSupllierContactByContactQuery, } from \"../../../../app/services/contactAPI\";\r\n//** Component's */\r\nconst ContactGrid = React.lazy(() => import(\"../../../../common/features/component/Contact/ContactGrid\"));\r\n\r\nconst supplierSecurityKey = {\r\n  ADD: securityKey.ADDSUPPLIERCONTACT,\r\n  EDIT: securityKey.EDITSUPPLIERCONTACT,\r\n};\r\n\r\nconst SupplierContactDetail = ({ isEditablePage, isSearchFilterShow, contryIdCode }) => {\r\n\r\n  const { supplierId, isResponsibleUser, getSupplierCompletionCount } = useContext(AddSupplierContext);\r\n\r\n  const getCompletionCount = () => {\r\n    getSupplierCompletionCount(supplierId);\r\n  }\r\n\r\n  return (\r\n    /**\r\n      * This component displays an ContactGrid for the supplier module.\r\n      * This hook dynamically sets the API call based on the module (customer or supplier).\r\n    */\r\n    <div className=\"supplier-contacts\">\r\n      <ContactGrid\r\n        isSupplier={true}\r\n        isEditablePage={isEditablePage}\r\n        keyId={supplierId || 0}\r\n        isSearchFilterShow={isSearchFilterShow}\r\n        getContactByKeyId={useLazyGetContactBySupplierIdQuery}\r\n        addEditContactMutation={useAddEditContactMutation}\r\n        SecurityKey={!isResponsibleUser ? supplierSecurityKey : null}\r\n        getContactById={useLazyGetSupllierContactByContactQuery}\r\n        contryIdCode={contryIdCode}\r\n        getCompletionCount={getCompletionCount}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nSupplierContactDetail.propTypes = {\r\n  isEditablePage: PropTypes.bool.isRequired,\r\n  isSearchFilterShow: PropTypes.bool.isRequired,\r\n};\r\nexport default SupplierContactDetail;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useContext, useState, useEffect } from \"react\";\r\nimport { securityKey } from \"../../../../data/SecurityKey\";\r\nimport AddSupplierContext from \"../../../../utils/ContextAPIs/Supplier/AddSupplierContext\";\r\nimport PropTypes from \"prop-types\";\r\n//** Service */\r\nimport { useLazyDownloadDocumentQuery } from \"../../../../app/services/documentAPI\";\r\n\r\nimport { hasFunctionalPermission } from \"../../../../utils/AuthorizeNavigation/authorizeNavigation\";\r\nimport {\r\n  useAddSupplierDocumentsMutation,\r\n  useDeleteSupplierDocumentsByIdMutation,\r\n  useLazyGetSupplierDocumentsByIdQuery,\r\n} from \"../../../../app/services/supplierDocuementsAPI\";\r\n\r\n//** Components */\r\nconst DocumentGrid = React.lazy(() =>\r\n  import(\"../../../../common/features/component/Document/DocumentGrid\")\r\n);\r\n\r\nconst CardSection = React.lazy(() =>\r\n  import(\"../../../../components/ui/card/CardSection.js\")\r\n);\r\n\r\nconst Unauthorize = React.lazy(() =>\r\n  import(\"../../../../pages/unauthorize/Unauthorize.js\")\r\n);\r\n\r\nconst supplierSecurityKey = {\r\n  ADD: securityKey.ADDSUPPLIERDOCUMENT,\r\n  DELETE: securityKey.DELETESUPPLIERDOCUMENT,\r\n  DOWNALOD: securityKey.DOWNALODSUPPLIERDOCUMENT,\r\n};\r\n\r\nconst SupplierDocumentDetail = ({ isEditablePage, supplierStatus }) => {\r\n  const [showNormalDocuments, setShowNormalDocuments] = useState(false);\r\n  const [showArchiveDocuments, setShowArchiveDocuments] = useState(false);\r\n\r\n  const {\r\n    supplierId,\r\n    isResponsibleUser,\r\n    activeSubTab,\r\n    handleActiveSubTabClick,\r\n  } = useContext(AddSupplierContext);\r\n\r\n  const hasPermissionToSeeDocuments = hasFunctionalPermission(\r\n    securityKey.SUPPLIERDOCUMENT\r\n  );\r\n\r\n  useEffect(() => {\r\n    const shouldShowDocuments =\r\n      isEditablePage && !isResponsibleUser\r\n        ? hasPermissionToSeeDocuments.hasAccess\r\n        : true;\r\n\r\n    setShowNormalDocuments(shouldShowDocuments);\r\n    setShowArchiveDocuments(shouldShowDocuments);\r\n  }, [isEditablePage, hasPermissionToSeeDocuments]);\r\n\r\n  const tabs = [\r\n    {\r\n      sMenuItemCaption: \"Documents\",\r\n      component: (\r\n        <div className=\"mt-2 financial-sec\">\r\n          {showNormalDocuments ? (\r\n            <DocumentGrid\r\n              keyId={supplierId || 0}\r\n              isSupplier={true}\r\n              isEditablePage={isEditablePage}\r\n              SecurityKey={!isResponsibleUser ? supplierSecurityKey : null}\r\n              customerStatusId={supplierStatus}\r\n              isArchive={false}\r\n              addDocuments={useAddSupplierDocumentsMutation}\r\n              downloadDocument={useLazyDownloadDocumentQuery}\r\n              deleteDocumentsById={useDeleteSupplierDocumentsByIdMutation}\r\n              getDocumentsById={useLazyGetSupplierDocumentsByIdQuery}\r\n            />\r\n          ) : (\r\n            <Unauthorize />\r\n          )}\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      sMenuItemCaption: \"Archive Documents\",\r\n      component: (\r\n        <div className=\"mt-2 shipping-sec\">\r\n          {showArchiveDocuments ? (\r\n            <DocumentGrid\r\n              keyId={supplierId || 0}\r\n              isSupplier={true}\r\n              isEditablePage={isEditablePage}\r\n              SecurityKey={!isResponsibleUser ? supplierSecurityKey : null}\r\n              customerStatusId={supplierStatus}\r\n              isArchive={true}\r\n              addDocuments={useAddSupplierDocumentsMutation}\r\n              downloadDocument={useLazyDownloadDocumentQuery}\r\n              deleteDocumentsById={useDeleteSupplierDocumentsByIdMutation}\r\n              getDocumentsById={useLazyGetSupplierDocumentsByIdQuery}\r\n            />\r\n          ) : (\r\n            <Unauthorize />\r\n          )}\r\n        </div>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  // Safely retrieve the active tab's component\r\n  // const activeTabComponent = tabs[activeSubTab]?.component;\r\n\r\n  return (\r\n\r\n\r\n\r\n    <div className=\"supplier-document-detail\">\r\n\r\n    <CardSection isDocuments={true}>\r\n      <div className=\"main-customer-grid setting-tab-sec\">\r\n        <div className=\"main-customer-grid setting-tab-sec\">\r\n          <div className=\"tab-section tab-2-section\">\r\n            {tabs && tabs.length > 0 && (\r\n              <div className=\"row main-inactive-grid\">\r\n                <div className=\"col-12\">\r\n                  <div className=\"tab-sub-section mb-0\">\r\n                    <div className=\"tab-sub-header\">\r\n                      {tabs &&\r\n                        tabs.map((tab, index) => (\r\n                          <>\r\n                            {isEditablePage ? (\r\n                              <button\r\n                                key={index}\r\n                                className={\r\n                                  activeSubTab === index ? \"active\" : \"\"\r\n                                }\r\n                                onClick={() =>\r\n                                  handleActiveSubTabClick(index, tab.sPage)\r\n                                }\r\n                              >\r\n                                {tab.sMenuItemCaption}\r\n                              </button>\r\n                            ) : (\r\n                              <button\r\n                                key={index}\r\n                                className={\r\n                                  activeSubTab === index ? \"active\" : \"\"\r\n                                }\r\n                              >\r\n                                {tab.sMenuItemCaption}\r\n                              </button>\r\n                            )}\r\n                          </>\r\n                        ))}\r\n                    </div>\r\n                    {activeSubTab !== -1 && tabs[activeSubTab].component && (\r\n                      <div className=\"tab-sub-content\">\r\n                        <div className=\"tab-sub-body-section\">\r\n                          {tabs[activeSubTab].component}\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </CardSection>\r\n    </div>\r\n  );\r\n};\r\n\r\nSupplierDocumentDetail.propTypes = {\r\n  isEditablePage: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default SupplierDocumentDetail;\r\n","import { useEffect, useRef, useState } from \"react\";\r\nimport { createContext } from \"react\";\r\nimport { useGetValidateCheckListMutation } from \"../../../app/services/ApprovalAPI\";\r\n\r\nconst AddSupplierContext = createContext();\r\n\r\nexport default AddSupplierContext;\r\n\r\nexport const AddSupplierContextProvider = ({ children }) => {\r\n\r\n  const nextStepRef = useRef(null);\r\n  const [mainId, setMainId] = useState(0);\r\n  const [activeTab, setActiveTab] = useState(0);\r\n  const [activeSubTab, setActiveSubTab] = useState(0);\r\n  const [supplierId, setSupplierId] = useState(0);\r\n  const [allCountries, setAllCountries] = useState(false);\r\n\r\n  //** Using for Contact  */\r\n  const [contactId, setContactId] = useState(0);\r\n  const [contactNumbers, setContactNumbers] = useState();\r\n  const [phoneNumberData, setPhoneNumberData] = useState();\r\n  const [emailAddressData, setEmailAddressData] = useState();\r\n  const [contactMainModal, setContactMainModal] = useState(false);\r\n  //** */\r\n\r\n  const [isResponsibleUser, setIsResponsibleUser] = useState(false);\r\n\r\n  const [rejectStatusId, setRejectStatusId] = useState('');\r\n  // const [showSubBackButton, setShowSubBackButton] = useState(false);\r\n\r\n  const moveNextPage = () => {\r\n    setActiveTab((prev) => prev + 1);\r\n  };\r\n\r\n  const movePreviewPage = () => {\r\n    setActiveTab((prev) => prev - 1);\r\n  };\r\n\r\n  const addSupplier = (data) => {\r\n    if (supplierId > 0 && data === 1) {\r\n      if (nextStepRef.current) {\r\n        nextStepRef.current.handleAddEditSupplier();\r\n      }\r\n    } else if (supplierId > 0) {\r\n      setActiveTab((prev) => prev + 1);\r\n    } else {\r\n      if (nextStepRef.current) {\r\n        nextStepRef.current.handleAddEditSupplier();\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleActiveSubTabClick = (tabIndex) => {\r\n    setActiveSubTab(tabIndex);\r\n    // setShowSubBackButton(false);\r\n    if (tabIndex === 1) {\r\n      // setShowSubBackButton(true);\r\n    }\r\n  };\r\n\r\n  //** Completion Changes  */\r\n  const [totalCount, setTotalCount] = useState();\r\n  const [approvalSuccessCount, setApprovalSuccessCount] = useState();\r\n  const [getValidateCheckList, { isSuccess: isGetCheckListSuccess, data: isGetCheckListData }] = useGetValidateCheckListMutation();\r\n\r\n  const getSupplierCompletionCount = (supplierId) => {\r\n    let request = {\r\n      customerId: 0,\r\n      supplierId: supplierId\r\n    }\r\n    getValidateCheckList(request);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (isGetCheckListSuccess && isGetCheckListData) {\r\n      if (isGetCheckListData && isGetCheckListData.length > 0) {\r\n        const successCheckList = isGetCheckListData.filter(data => data.isValid);\r\n        setTotalCount(isGetCheckListData.length);\r\n        setApprovalSuccessCount(successCheckList.length);\r\n      }\r\n    }\r\n  }, [isGetCheckListSuccess, isGetCheckListData])\r\n\r\n  return (\r\n    <AddSupplierContext.Provider\r\n      value={{\r\n        totalCount,\r\n        approvalSuccessCount,\r\n        getSupplierCompletionCount,\r\n        nextStepRef,\r\n        supplierId,\r\n        setSupplierId,\r\n        activeTab,\r\n        setActiveTab,\r\n        moveNextPage,\r\n        movePreviewPage,\r\n        addSupplier,\r\n        setAllCountries,\r\n        allCountries,\r\n        setMainId,\r\n        mainId,\r\n        contactId,\r\n        setContactId,\r\n        contactMainModal,\r\n        contactNumbers,\r\n        setContactNumbers,\r\n        setPhoneNumberData,\r\n        setIsResponsibleUser,\r\n        isResponsibleUser,\r\n        phoneNumberData,\r\n        emailAddressData,\r\n        setEmailAddressData,\r\n        setContactMainModal,\r\n        handleActiveSubTabClick,\r\n        activeSubTab,\r\n        setRejectStatusId,\r\n        rejectStatusId,\r\n      }}\r\n    >\r\n      {children}\r\n    </AddSupplierContext.Provider>\r\n  );\r\n};\r\n","export const getLabelClass = (value) => {\r\n    switch (value) {\r\n      case \"Active\":\r\n        return \"status-btn badge-gradient-success\";\r\n      case \"Open\":\r\n        return \"status-btn badge-gradient-info\";\r\n      case \"In Active\":\r\n        return \"status-btn badge-gradient-danger\";\r\n      case \"Pending\":\r\n        return \"status-btn badge-gradient-Pending\";\r\n      case \"In progress\":\r\n        return \"status-btn badge-gradient-theme\";\r\n      case \"Submitted\":\r\n        return \"status-btn badge-gradient-Submitted\";\r\n      case \"Approved\":\r\n        return \"status-btn badge-gradient-Approved\";\r\n      case \"Freeze\":\r\n        return \"status-btn badge-gradient-Frozen\";\r\n      case \"Block\":\r\n        return \"status-btn badge-gradient-Blocked\";\r\n      case \"Reject\":\r\n        return \"status-btn badge-gradient-reject\";\r\n      case \"Disable\":\r\n        return \"status-btn badge-gradient-disabled\";\r\n      default:\r\n        return \"status-btn badge-gradient-info\";\r\n    }\r\n  };"],"names":["reasonData","name","initialState","responsibleUserId","inActiveReason","formFields","id","lable","Field_Name","fieldType","FormFieldTypes","SELECT","dataField","fieldSetting","placeholder","isDisabled","isEnableOnChange","isMultiSelect","validation","type","style","containerCss","TEXTAREA","allowSpace","_ref","isApprovalValidate","showModal","handleToggleModal","children","props","_jsxs","Modal","className","modelSizeClass","show","onHide","keyboard","backdrop","_jsx","Header","closeButton","modalTitle","Body","excludingRoles","customerbasicData","groupTypeId","countryId","territoryId","emailAddress","website","note","isSubCustomer","taxId","isBuyingForThirdParty","customerNoteId","incotermId","attachment","base64File","storagePath","IMAGE","isImageUpload","isButtonVisible","isCustomButtonVisible","acceptedFiles","INPUT","maxLength","exemptBoundarySpaces","inputButtonGroupConfig","isPrimaryButtonVisible","infoButtonConfig","isInfoButtonVisible","infoButtonIcon","infoButtonTooltip","minLength","inputIcon","isIconShow","faIcon","message","SuccessMessage","DefaultUSATaxId","CHECKBOX","CKEDITOR","formSetting","isViewOnly","GridColumnType","LABLE","getLabelClass","ACTION","AddSupplierTab","childRef","useRef","navigate","useNavigate","activeTab","movePreviewPage","addSupplier","supplierId","useContext","AddSupplierContext","updateSupplierStatus","isSuccess","isSuccessUpdateSupplierStatus","data","updateSupplierStatusData","useUpdateSupplierStatusMutation","tabContent","label","content","SupplierBasicDetail","isEditablePage","tab","CustomerSupplierTabEnum","BasicInformation","SuplierAddressDetails","Address","SupplierContactDetail","isSearchFilterShow","Contact","FinancialSettings","Setting","SupplierDocumentDetail","Documents","useEffect","ToastService","success","errorMessage","handleSubmit","current","callChildFunction","handleDraft","req","statusId","StatusEnums","Pending","_Fragment","CardSection","map","step","index","React","subLabel","length","Iconify","icon","onSubmit","e","preventDefault","onClick","Image","imagePath","AppIcons","nextArrowIcon","SupplierApproval","isDetailPage","isAddPagePage","updateApproval","updateSubmitStatus","Submitted","AddSupplier","AddSupplierContextProvider","AddressGrid","supplierSecurityKey","ADD","securityKey","ADDSUPPLIERADDRESS","EDIT","EDITSUPPLIERADDRESS","supplierStatus","isResponsibleUser","setIsAddressChange","getSupplierCompletionCount","isSupplier","keyId","SecurityKey","getAddresssByCustomerId","useLazyGetAddresssBySupplierIdQuery","getAddresssById","useLazyGetSupplierAddresssByAddressIdQuery","addAddress","useAddAddressMutation","updateAddress","useUpdateAddAddressMutation","deleteAddress","useDeleteAddressMutation","getCompletionCount","ApprovalValidateData","forwardRef","getListApi","setSelectedStatus","responsibleUserIds","OnRejectedSupplierFromApproval","parentRef","setSupplierId","useState","isShowApproval","setIsShowApproval","validateCheckList","setValidateCheckList","isShowBothButton","setIsShowBothButton","isShowValidateModal","setIsShowValidateModal","showApprovalCheckList","setShowApprovalCheckList","setRejectStatusId","getValidateCheckList","isLoading","isGetCheckListLoading","isGetCheckListSuccess","isGetCheckListData","useGetValidateCheckListMutation","handleShowValidateModal","isShowApprovalCheckList","arguments","undefined","customerId","useImperativeHandle","handleValidateSuccess","isSupplierApproval","mainId","handleValidateModalClose","handleDone","validateApprovalCheckList","ApprovalCheckList","onSidebarClose","onSidebarApprovalClose","isModelOpen","ApprovalData","ApprovalEnum","APPROVESUPPLIER","onSuccessApprovalClose","getBasicInformationById","useLazyGetSupplierBasicInfoByIdQuery","getAddressById","useLazyGetSupplierAddressInfoByIdQuery","getContactById","useLazyGetSupplierContactInfoByIdQuery","getFinacialSettingById","useLazyGetSupplierFinacialSettingQuery","ownerType","OwnerType","Supplier","basicData","AddEditSupplierBasicDetail","isOpen","getSupplierById","buttonClassName","ContactGrid","ADDSUPPLIERCONTACT","EDITSUPPLIERCONTACT","contryIdCode","getContactByKeyId","useLazyGetContactBySupplierIdQuery","addEditContactMutation","useAddEditContactMutation","useLazyGetSupllierContactByContactQuery","DocumentGrid","Unauthorize","ADDSUPPLIERDOCUMENT","DELETE","DELETESUPPLIERDOCUMENT","DOWNALOD","DOWNALODSUPPLIERDOCUMENT","showNormalDocuments","setShowNormalDocuments","showArchiveDocuments","setShowArchiveDocuments","activeSubTab","handleActiveSubTabClick","hasPermissionToSeeDocuments","hasFunctionalPermission","SUPPLIERDOCUMENT","shouldShowDocuments","hasAccess","tabs","sMenuItemCaption","component","customerStatusId","isArchive","addDocuments","useAddSupplierDocumentsMutation","downloadDocument","useLazyDownloadDocumentQuery","deleteDocumentsById","useDeleteSupplierDocumentsByIdMutation","getDocumentsById","useLazyGetSupplierDocumentsByIdQuery","isDocuments","sPage","createContext","nextStepRef","setMainId","setActiveTab","setActiveSubTab","allCountries","setAllCountries","contactId","setContactId","contactNumbers","setContactNumbers","phoneNumberData","setPhoneNumberData","emailAddressData","setEmailAddressData","contactMainModal","setContactMainModal","setIsResponsibleUser","rejectStatusId","totalCount","setTotalCount","approvalSuccessCount","setApprovalSuccessCount","successCheckList","filter","isValid","Provider","value","moveNextPage","prev","handleAddEditSupplier","tabIndex"],"sourceRoot":""}