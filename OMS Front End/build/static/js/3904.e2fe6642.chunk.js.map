{"version":3,"file":"static/js/3904.e2fe6642.chunk.js","mappings":"uJAEA,MAAMA,EAAWC,EAAAA,MAAW,IAAM,kCAE5BC,EAAQD,EAAAA,MAAW,IAAM,0CACzBE,EAAiBF,EAAAA,MAAW,IAAM,0CAmExC,EAhE2BG,IAUpB,IAVqB,UAC1BC,EAAS,KACTC,EAAI,SACJC,EAAQ,aACRC,EAAY,UACZC,EAAS,MACTC,EAAK,YACLC,EAAW,cACXC,KACGC,GACJT,EAaC,OACEU,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,4BAA2BF,SAAA,CACvCH,EAAWM,cACVL,EAAAA,EAAAA,KAAA,OAAKI,UAAU,gBAAeF,UAC5BF,EAAAA,EAAAA,KAAA,MAAAE,SAAKH,EAAWM,iBAEhB,IACJF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAkBF,SAAA,CAC9BX,GAA2B,KAAdA,IACZS,EAAAA,EAAAA,KAACZ,EAAK,CAACG,UAAWA,EAAWe,IAAKd,KAEpCQ,EAAAA,EAAAA,KAACd,EAAQ,IACHa,EACJN,SA1BiBc,IACrBd,GACFA,EAASE,EAAWY,EAAEC,OAAOC,MAC/B,EAwBQC,OArBWC,KACfjB,GACFA,EAAaC,EACf,EAmBQiB,WAAsB,OAAXf,QAAW,IAAXA,OAAW,EAAXA,EAAagB,cAAwB,OAAVd,QAAU,IAAVA,OAAU,EAAVA,EAAYa,aAA0B,OAAbd,QAAa,IAAbA,OAAa,EAAbA,EAAec,iBAGlFZ,EAAAA,EAAAA,KAACX,EAAc,CAACO,MAAOA,GAAS,SAEjC,C","sources":["components/Forms/formField/FormTextAreaField.js"],"sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nconst TextArea = React.lazy(() => import(\"../../ui/inputs/textArea/TextArea.js\"));\r\n\r\nconst Label = React.lazy(() => import('../../ui/label/Label'));\r\nconst ValidationText = React.lazy(() => import('../../ui/inputs/validation/ValidationText.js'))\r\n\r\n\r\nconst FormTextAreaFields = ({\r\n  labelName,\r\n  name,\r\n  onChange,\r\n  onValidation,\r\n  dataField,\r\n  error,\r\n  formSetting,\r\n  overRideProps,\r\n  ...inputProps\r\n}) => {\r\n  const handleInputChange = (e) => {\r\n    if (onChange) {\r\n      onChange(dataField, e.target.value);\r\n    }\r\n  };\r\n\r\n  const handleOnBlur = () => {\r\n    if (onValidation) {\r\n      onValidation(dataField);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"input-field-sec text-area\">\r\n        {inputProps.hasMainTitle ?\r\n          <div className=\"section-title\">\r\n            <h5>{inputProps.hasMainTitle}</h5>\r\n          </div>\r\n          : \"\"}\r\n        <div className=\"input-label-part\">\r\n          {labelName && labelName !== \"\" && (\r\n            <Label labelName={labelName} for={name} />\r\n          )}\r\n          <TextArea\r\n            {...inputProps}\r\n            onChange={handleInputChange}\r\n            onBlur={handleOnBlur}\r\n            isDisable={formSetting?.isViewOnly || inputProps?.isDisable || overRideProps?.isDisable}\r\n          />\r\n        </div>\r\n        <ValidationText error={error || \"\"} />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nFormTextAreaFields.propTypes = {\r\n  labelName: PropTypes.string,\r\n  name: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func,\r\n  onValidation: PropTypes.func,\r\n  dataField: PropTypes.string.isRequired,\r\n  error: PropTypes.string,\r\n  formSetting: PropTypes.shape({\r\n    isViewOnly: PropTypes.bool,\r\n  }),\r\n  overRideProps: PropTypes.shape({\r\n    isDisable: PropTypes.bool,\r\n  }),\r\n  inputProps: PropTypes.object,\r\n};\r\n\r\nexport default FormTextAreaFields;\r\n"],"names":["TextArea","React","Label","ValidationText","_ref","labelName","name","onChange","onValidation","dataField","error","formSetting","overRideProps","inputProps","_jsx","_Fragment","children","_jsxs","className","hasMainTitle","for","e","target","value","onBlur","handleOnBlur","isDisable","isViewOnly"],"sourceRoot":""}