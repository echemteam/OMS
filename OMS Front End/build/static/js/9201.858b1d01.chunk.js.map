{"version":3,"file":"static/js/9201.858b1d01.chunk.js","mappings":"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","sources":["common/features/component/CustomerSupplierReason/Reason.data.js","components/ui/centerModel/CenterModel.js","pages/customerDetail/feature/customerBasicDetail/config/CustomerBasicDetail.data.js","pages/supplierDetails/feature/supplierViewDetail/SupplierBasicInfo/SupplierBasicInfoCard.js","utils/CopyText/CopyText.js","utils/StatusColors/StatusColors.js"],"sourcesContent":["import { FormFieldTypes } from \"../../../../data/formFieldType\";\r\n\r\nexport const reasonData = {\r\n  name: \"\",\r\n  initialState: {responsibleUserId:0, inActiveReason: \"\" },\r\n  formFields: [\r\n    {\r\n      id: \"ResponsibleUserId\",\r\n      lable: \"Responsible User \",\r\n      Field_Name: \"Responsible User\",\r\n      fieldType: FormFieldTypes.SELECT,\r\n      dataField: \"responsibleUserId\",\r\n      fieldSetting: {\r\n        placeholder: \"Select Responsible User\",\r\n        isDisabled: false,\r\n        isEnableOnChange: true,\r\n        isMultiSelect: true,\r\n      },\r\n      validation: [{ type: \"require\" }],\r\n      style: {\r\n        containerCss: \"col-xxl-6 col-xl-6 col-md-6 col-12 mb-2\",\r\n      },\r\n    },\r\n    {\r\n      id: \"inActiveReason\",\r\n      lable: \"Reason :\",\r\n      Field_Name: \"Reason \",\r\n      fieldType: FormFieldTypes.TEXTAREA,\r\n      dataField: \"inActiveReason\",\r\n      fieldSetting: {\r\n        placeholder: \"please enter Reason\",\r\n        allowSpace: true,\r\n      },\r\n      validation: [{ type: \"require\" }],\r\n      style: {\r\n        containerCss: \"col-xxl-12 col-xl-12 col-md-12 mb-2\",\r\n      },\r\n    },\r\n  ],\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./CenterModel.scss\";\r\nimport { Modal } from \"react-bootstrap\";\r\n\r\nconst CenterModel = ({ isApprovalValidate, showModal, handleToggleModal, children, ...props }) => {\r\n  return (\r\n    <Modal\r\n      className={`center-model-popup ${props.modelSizeClass}`}\r\n      show={showModal}\r\n      onHide={handleToggleModal}\r\n      keyboard={!isApprovalValidate}\r\n      backdrop={isApprovalValidate ? \"static\" : true}\r\n    >\r\n      <Modal.Header closeButton={!isApprovalValidate}>\r\n        <div className=\"model-title\">{props.modalTitle}</div>\r\n      </Modal.Header>\r\n      <Modal.Body>{children}</Modal.Body>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nCenterModel.propTypes = {\r\n  isApprovalValidate: PropTypes.bool,\r\n  showModal: PropTypes.bool.isRequired,\r\n  handleToggleModal: PropTypes.func.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n  modelSizeClass: PropTypes.string,\r\n  modalTitle: PropTypes.string\r\n};\r\nexport default CenterModel;\r\n","import { SuccessMessage } from \"../../../../../data/appMessages\";\r\nimport { FormFieldTypes } from \"../../../../../data/formFieldType\";\r\nimport { GridColumnType } from \"../../../../../data/gridColumnType\";\r\nimport { getLabelClass } from \"../../../../../utils/StatusColors/StatusColors\";\r\n\r\nexport const excludingRoles = [\"Admin\", \"manager\"];\r\n\r\nexport const customerbasicData = {\r\n  initialState: {\r\n    name: \"\",\r\n    groupTypeId: 1,\r\n    countryId: 233,\r\n    territoryId: 2,\r\n    emailAddress: \"\",\r\n    website: \"\",\r\n    note: \"\",\r\n    isSubCustomer: false,\r\n    taxId: \"\",\r\n    isBuyingForThirdParty: false,\r\n    responsibleUserId: \"\",\r\n    customerNoteId: \"\",\r\n    incotermId: 11,\r\n    attachment: \"\",\r\n    base64File: \"\",\r\n    storagePath: \"\",\r\n  },\r\n  formFields: [\r\n    {\r\n      id: \"attachment\",\r\n      lable: \"Customer Logo \",\r\n      Field_Name: \"Attachment\",\r\n      fieldType: FormFieldTypes.IMAGE,\r\n      dataField: \"attachment\",\r\n      fieldSetting: {\r\n        placeholder: \"Upload Attachment\",\r\n        allowSpace: true,\r\n        isImageUpload: true,\r\n        isButtonVisible: true,\r\n        isCustomButtonVisible: false,\r\n        acceptedFiles: \".png , .jpg \",\r\n      },\r\n      style: {\r\n        containerCss:\r\n          \"col-xxl-4 col-xl-4 col-md-4 col-12 mb-input mb-0 custom-file-upload-section validation-image-uploader customer-logo-sec\",\r\n      },\r\n    },\r\n    // {\r\n    //   id: \"\",\r\n    //   lable: \"\",\r\n    //   Field_Name: \"\",\r\n    //   dataField: \"\",\r\n    //   style: {\r\n    //     containerCss: \"col-xxl-4 col-xl-4 col-md-4 col-4 col-4 remove-line\",\r\n    //   },\r\n    // },\r\n    {\r\n      id: \"name\",\r\n      lable: \"Customer Name \",\r\n      Field_Name: \"Customer Name\",\r\n      fieldType: FormFieldTypes.INPUT,\r\n      dataField: \"name\",\r\n      fieldSetting: {\r\n        placeholder: \"Enter Customer Name\",\r\n        allowSpace: true,\r\n        maxLength: 50,\r\n        exemptBoundarySpaces: true,\r\n      },\r\n      validation: [{ type: \"require\" }, { type: \"uniqueName\" }],\r\n      style: {\r\n        containerCss: \"col-xxl-8 col-xl-8 col-md-8 col-12 mb-input\",\r\n      },\r\n      inputButtonGroupConfig: {\r\n        isPrimaryButtonVisible: false,\r\n        // primaryButtonText: 'Verify',\r\n        infoButtonConfig: {\r\n          isInfoButtonVisible: true,\r\n          infoButtonIcon: \"fa-search\",\r\n          infoButtonTooltip: \"Customer Information\",\r\n        },\r\n      },\r\n    },\r\n    {\r\n      id: \"emailAddress\",\r\n      lable: \"Email \",\r\n      Field_Name: \"Email\",\r\n      fieldType: FormFieldTypes.INPUT,\r\n      dataField: \"emailAddress\",\r\n      fieldSetting: {\r\n        placeholder: \"Enter Email\",\r\n        allowSpace: false,\r\n        maxLength: 65,\r\n        exemptBoundarySpaces: true,\r\n      },\r\n      validation: [{ type: \"require\" }, { type: \"email\" }],\r\n      style: {\r\n        containerCss: \"col-xxl-6 col-xl-6 col-md-6 col-12 mb-input\",\r\n      },\r\n    },\r\n    {\r\n      id: \"website\",\r\n      lable: \"Website \",\r\n      Field_Name: \"Website\",\r\n      fieldType: FormFieldTypes.INPUT,\r\n      dataField: \"website\",\r\n      fieldSetting: {\r\n        placeholder: \"https://www.xyz.com\",\r\n        allowSpace: false,\r\n        maxLength: 250,\r\n      },\r\n      validation: [{ type: \"require\" }, { type: \"website\" }],\r\n      style: {\r\n        containerCss: \"col-xxl-6 col-xl-6 col-md-6 col-12 mb-input\",\r\n      },\r\n    },\r\n\r\n    {\r\n      id: \"groupTypeId\",\r\n      lable: \"Group Type \",\r\n      Field_Name: \"Group Type\",\r\n      fieldType: FormFieldTypes.SELECT,\r\n      dataField: \"groupTypeId\",\r\n      fieldSetting: {\r\n        placeholder: \"Select Group Type\",\r\n        isEnableOnChange: true,\r\n      },\r\n      validation: [{ type: \"require\" }],\r\n      style: {\r\n        containerCss: \"col-xxl-3 col-xl-4 col-md-6 col-12 mb-input\",\r\n      },\r\n    },\r\n\r\n    {\r\n      id: \"countryId\",\r\n      lable: \"Country \",\r\n      Field_Name: \"Country\",\r\n      fieldType: FormFieldTypes.SELECT,\r\n      dataField: \"countryId\",\r\n      fieldSetting: {\r\n        placeholder: \"Select Country\",\r\n        isEnableOnChange: true,\r\n      },\r\n      validation: [{ type: \"require\" }],\r\n      style: {\r\n        containerCss: \"col-xxl-3 col-xl-4 col-md-6 col-12 mb-input\",\r\n      },\r\n    },\r\n    {\r\n      id: \"territoryId\",\r\n      lable: \"Territory \",\r\n      Field_Name: \"Territory\",\r\n      fieldType: FormFieldTypes.SELECT,\r\n      dataField: \"territoryId\",\r\n      fieldSetting: {\r\n        placeholder: \"Select Territory\",\r\n        isEnableOnChange: true,\r\n      },\r\n      validation: [{ type: \"require\" }],\r\n      style: {\r\n        containerCss: \"col-xxl-3 col-xl-4 col-md-4 col-12 mb-input\",\r\n      },\r\n    },\r\n    {\r\n      id: \"incotermId\",\r\n      lable: \"Incoterm\",\r\n      Field_Name: \"Incoterm\",\r\n      fieldType: FormFieldTypes.SELECT,\r\n      dataField: \"incotermId\",\r\n      fieldSetting: {\r\n        placeholder: \"Select Incoterm\",\r\n        isEnableOnChange: true,\r\n      },\r\n      validation: [{ type: \"require\" }],\r\n      style: {\r\n        containerCss: \"col-xxl-3 col-xl-4 col-md-4 col-12 mb-input\",\r\n      },\r\n    },\r\n    {\r\n      id: \"taxId\",\r\n      lable: \"Tax Id \",\r\n      Field_Name: \"Tax Id\",\r\n      fieldType: FormFieldTypes.INPUT,\r\n      dataField: \"taxId\",\r\n      fieldSetting: {\r\n        placeholder: \"Tax Id\",\r\n        allowSpace: false,\r\n        minLength: 10,\r\n        maxLength: 10,\r\n        exemptBoundarySpaces: true,\r\n      },\r\n      inputIcon: {\r\n        isIconShow: true,\r\n        faIcon: \"fa-info-circle\",\r\n        message: SuccessMessage.DefaultUSATaxId,\r\n      },\r\n      style: {\r\n        containerCss: \"col-xxl-3 col-xl-3 col-md-4 col-12 mb-input\",\r\n      },\r\n    },\r\n    {\r\n      id: \"responsibleUserId\",\r\n      lable: \"Responsible User \",\r\n      Field_Name: \"Responsible User\",\r\n      fieldType: FormFieldTypes.SELECT,\r\n      dataField: \"responsibleUserId\",\r\n      fieldSetting: {\r\n        placeholder: \"Select Responsible User\",\r\n        isEnableOnChange: true,\r\n        isDisabled: false,\r\n      },\r\n      style: {\r\n        containerCss: \"col-xxl-4 col-xl-4 col-md-4 col-12 mb-input\",\r\n      },\r\n    },\r\n    {\r\n      id: \"isBuyingForThirdParty\",\r\n      lable: \"Is Buying for Third Party\",\r\n      Field_Name: \"Is Buying for Third Party\",\r\n      fieldType: FormFieldTypes.CHECKBOX,\r\n      dataField: \"isBuyingForThirdParty\",\r\n      style: {\r\n        containerCss:\r\n          \"col-xxl-2 col-xl-2 col-md-3 col-12 pt-2 mb-input margin-top-checkbox mt-2\",\r\n      },\r\n    },\r\n    {\r\n      id: \"isSubCustomer\",\r\n      lable: \"Is Sub Customer\",\r\n      Field_Name: \"Is Sub Customer\",\r\n      fieldType: FormFieldTypes.CHECKBOX,\r\n      dataField: \"isSubCustomer\",\r\n      style: {\r\n        containerCss:\r\n          \"col-xxl-2 col-xl-2 col-md-3 col-12 md-pt-0 pt-2 mb-input margin-top-checkbox margin-left0-checkbox mt-2\",\r\n      },\r\n    },\r\n    {\r\n      id: \"note\",\r\n      lable: \"Notes \",\r\n      Field_Name: \"Notes\",\r\n      fieldType: FormFieldTypes.CKEDITOR,\r\n      dataField: \"note\",\r\n      fieldSetting: {\r\n        placeholder: \"Enter Notes\",\r\n        maxLength: 1000,\r\n      },\r\n      // validation: [{ type: \"require\" }],\r\n      style: {\r\n        containerCss: \"col-xxl-5 col-xl-5 col-md-12 col-12 mb-input mb-0\",\r\n      },\r\n    },\r\n  ],\r\n  formSetting: {\r\n    isViewOnly: false,\r\n  },\r\n};\r\n\r\nexport const basicInfoData = {\r\n  columns: [\r\n    {\r\n      name: \"Name\",\r\n      fieldName: \"name\",\r\n      width: \"15%\",\r\n      // allowShort: true,\r\n    },\r\n    {\r\n      name: \"Tax Id\",\r\n      fieldName: \"taxId\",\r\n      width: \"15%\",\r\n      // allowShort: true,\r\n    },\r\n    {\r\n      name: \"Country\",\r\n      fieldName: \"countryName\",\r\n      width: \"15%\",\r\n      // allowShort: true,\r\n    },\r\n\r\n    {\r\n      name: \"Email\",\r\n      fieldName: \"emailAddress\",\r\n      width: \"15%\",\r\n      // allowShort: true,\r\n    },\r\n    {\r\n      name: \"Group Type\",\r\n      fieldName: \"groupType\",\r\n      width: \"15%\",\r\n      // allowShort: true,\r\n    },\r\n    {\r\n      name: \"Status\",\r\n      fieldName: \"status\",\r\n      allowShort: false,\r\n      colType: GridColumnType.LABLE,\r\n      width: \"15%\",\r\n      colSettings: {\r\n        valueField: \"status\",\r\n        getLableClass: getLabelClass,\r\n      },\r\n    },\r\n    {\r\n      name: \"Action\",\r\n      width: \"10%\",\r\n      colType: GridColumnType.ACTION,\r\n      defaultAction: {\r\n        allowEdit: true,\r\n        allowDisable: false,\r\n      },\r\n    },\r\n  ],\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useRef, useState, useContext } from \"react\";\r\n//** Lib's */\r\nimport PropTypes from \"prop-types\";\r\nimport CopyText from \"../../../../../utils/CopyText/CopyText\";\r\nimport { securityKey } from \"../../../../../data/SecurityKey\";\r\nimport { ErrorMessage } from \"../../../../../data/appMessages\";\r\nimport Buttons from \"../../../../../components/ui/button/Buttons\";\r\nimport FormCreator from \"../../../../../components/Forms/FormCreator\";\r\nimport DropDown from \"../../../../../components/ui/dropdown/DropDrown\";\r\nimport DataLoader from \"../../../../../components/ui/dataLoader/DataLoader\";\r\nimport CenterModel from \"../../../../../components/ui/centerModel/CenterModel\";\r\nimport { StatusValue, statusMapping } from \"../../../../../utils/Enums/StatusEnums\";\r\nimport AddSupplierContext from \"../../../../../utils/ContextAPIs/Supplier/AddSupplierContext\";\r\nimport { hasFunctionalPermission } from \"../../../../../utils/AuthorizeNavigation/authorizeNavigation\";\r\n//** Service's */\r\nimport SwalAlert from \"../../../../../services/swalService/SwalService\";\r\nimport ToastService from \"../../../../../services/toastService/ToastService\";\r\nimport { useLazyGetAllUserQuery } from \"../../../../../app/services/commonAPI\";\r\nimport {\r\n  useAddEditResponsibleUserForSupplierMutation,\r\n  useUpdateSupplierInActiveStatusMutation,\r\n  useUpdateSupplierStatusMutation,\r\n} from \"../../../../../app/services/supplierAPI\";\r\nimport { removeFormFields } from \"../../../../../utils/FormFields/RemoveFields/handleRemoveFields\";\r\nimport { setDropDownOptionField } from \"../../../../../utils/FormFields/FieldsSetting/SetFieldSetting\";\r\nimport { reasonData } from \"../../../../../common/features/component/CustomerSupplierReason/Reason.data\";\r\nimport { excludingRoles } from \"../../../../customerDetail/feature/customerBasicDetail/config/CustomerBasicDetail.data\";\r\nimport Iconify from \"../../../../../components/ui/iconify/Iconify\";\r\nimport DropdownSelect from \"../../../../../components/ui/dropdown/DropdownSelect\";\r\nimport { useAddSupplierNotesMutation } from \"../../../../../app/services/supplierNotesAPI\";\r\nimport { CustomerSupplierStatus } from \"../../../../../utils/Enums/commonEnums\";\r\nimport Image from \"../../../../../components/image/Image\";\r\nimport { AppIcons } from \"../../../../../data/appIcons\";\r\n\r\n//** Component's */\r\nconst SupplierApproval = React.lazy(() =>\r\n  import(\"../../supplierApproval/SupplierApproval\")\r\n);\r\n\r\nconst SupplierBasicInfoCard = ({\r\n  editClick,\r\n  supplierData,\r\n  isLoading,\r\n  supplierId,\r\n  getSupplierById,\r\n  GetSupplierBasicInformationByIdData,\r\n  isGetSupplierBasicInformationByIdFetching,\r\n  isGetSupplierBasicInformationById,\r\n}) => {\r\n  const childRef = useRef();\r\n  const reasonRef = useRef();\r\n  const { confirm } = SwalAlert();\r\n  const [selectedStatus, setSelectedStatus] = useState(null);\r\n  const [formData, setFormData] = useState(reasonData);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [statusId, setStatusId] = useState();\r\n  const [showEditIcon, setShowEditIcon] = useState(true);\r\n  const [responsibleUserIds, setResponsibleUserIds] = useState([]);\r\n  const [rUserValue, setRUserValue] = useState([]);\r\n  const [addSupplierNotes] = useAddSupplierNotesMutation();\r\n  const [responsibleUserOptions, setResponsibleUserOptions] = useState([]);\r\n  const [filteredStatusOptions, setFilteredStatusOptions] = useState(StatusValue);\r\n  const [prevRUserValue, setPrevRUserValue] = useState(\"\");\r\n\r\n  const [\r\n    getAllUser,\r\n    {\r\n      isFetching: isSuppilierFetching,\r\n      isSuccess: isGetAllUserSucess,\r\n      data: allGetAlluserData,\r\n    },\r\n  ] = useLazyGetAllUserQuery();\r\n  const [\r\n    addEditResponsibleUserForSupplier,\r\n    {\r\n      isSuccess: isSuccessAddEditResponsibleUserForSupplier,\r\n      data: isAddEditResponsibleUserForSupplierData,\r\n    },\r\n  ] = useAddEditResponsibleUserForSupplierMutation();\r\n  const [\r\n    updateSupplierStatus,\r\n    {\r\n      isSuccess: isSuccessUpdateSupplierStatus,\r\n      data: updateSupplierStatusData,\r\n    },\r\n  ] = useUpdateSupplierStatusMutation();\r\n  const [\r\n    updateSupplierInActiveStatus,\r\n    {\r\n      isLoading: updateCustomerInActiveStatusCustomerLoading,\r\n      isSuccess: isSuccessUpdateSupplierInActiveStatus,\r\n      data: updateSupplierInActiveStatusData,\r\n    },\r\n  ] = useUpdateSupplierInActiveStatusMutation();\r\n\r\n  const {\r\n    isResponsibleUser,\r\n    totalCount,\r\n    approvalSuccessCount,\r\n    getSupplierCompletionCount,\r\n  } = useContext(AddSupplierContext);\r\n  const [isButtonDisable, setIsButtonDisable] = useState(false);\r\n  const hasEditPermission = hasFunctionalPermission(\r\n    securityKey.EDITBASICSUPPLIERDETAILS\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (!isResponsibleUser) {\r\n      if (hasEditPermission && hasEditPermission.isViewOnly === true) {\r\n        setShowEditIcon(true);\r\n        setIsButtonDisable(true);\r\n      } else if (hasEditPermission.isEditable === true) {\r\n        setShowEditIcon(true);\r\n      } else {\r\n        setShowEditIcon(false);\r\n        setIsButtonDisable(true);\r\n      }\r\n    }\r\n  }, [hasEditPermission, isResponsibleUser]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      isSuccessUpdateSupplierInActiveStatus &&\r\n      updateSupplierInActiveStatusData\r\n    ) {\r\n      ToastService.success(updateSupplierInActiveStatusData.errorMessage);\r\n      handleToggleModal();\r\n    }\r\n  }, [isSuccessUpdateSupplierInActiveStatus, updateSupplierInActiveStatusData]);\r\n\r\n  useEffect(() => {\r\n    if (isSuccessUpdateSupplierStatus && updateSupplierStatusData) {\r\n      ToastService.success(updateSupplierStatusData.errorMessage);\r\n      handleToggleModal();\r\n    }\r\n  }, [isSuccessUpdateSupplierStatus, updateSupplierStatusData]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      isSuccessAddEditResponsibleUserForSupplier &&\r\n      isAddEditResponsibleUserForSupplierData\r\n    ) {\r\n      ToastService.success(\r\n        isAddEditResponsibleUserForSupplierData.errorMessage\r\n      );\r\n      getSupplierCompletionCount(supplierId);\r\n    }\r\n  }, [\r\n    isSuccessAddEditResponsibleUserForSupplier,\r\n    isAddEditResponsibleUserForSupplierData,\r\n  ]);\r\n\r\n  const rejectedSupplierFromApproval = () => {\r\n    getSupplierById();\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   if (rejectStatusId) {\r\n  //     getSupplierById()\r\n  //   }\r\n  // }, [rejectStatusId, setRejectStatusId, selectedStatus])\r\n  // useEffect(() => {\r\n  //   if (supplierData) {\r\n  //     const statusId = supplierData.statusId;\r\n  //     switch (statusId) {\r\n  //       case 1:\r\n  //       case 2:\r\n  //       case 3:\r\n  //         setOptions(StaticStatus[StatusValue[statusId - 1].label]);\r\n  //         break;\r\n  //       case 4:\r\n  //         setOptions([\r\n  //           { value: \"4\", label: \"Freeze\" },\r\n  //           { value: \"3\", label: \"Approved\" },\r\n  //           { value: \"1\", label: \"Pending\" },\r\n  //         ]);\r\n  //         break;\r\n  //       case 5:\r\n  //         setOptions([\r\n  //           { value: \"5\", label: \"Block\" },\r\n  //           { value: \"3\", label: \"Approved\" },\r\n  //           { value: \"1\", label: \"Pending\" },\r\n  //         ]);\r\n  //         break;\r\n  //       case 6:\r\n  //         setOptions(StaticStatus.Approved.filter(option => option.label === StatusValue[statusId - 1].label));\r\n  //         break;\r\n  //       case 7:\r\n  //         setOptions(StaticStatus[StatusValue[statusId - 1].label]);\r\n  //         break;\r\n  //       default:\r\n  //         setOptions([]);\r\n  //     }\r\n\r\n  //     setSelectedStatus(StatusValue[statusId - 1].label);\r\n  //   }\r\n  // }, [supplierData]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      isGetSupplierBasicInformationById &&\r\n      !isGetSupplierBasicInformationByIdFetching &&\r\n      GetSupplierBasicInformationByIdData\r\n    ) {\r\n      const responsibleUserIds =\r\n        GetSupplierBasicInformationByIdData?.responsibleUserId\r\n          ?.split(\",\")\r\n          .map((id) => id.trim());\r\n      const responsibleUserNames =\r\n        GetSupplierBasicInformationByIdData?.responsibleUserName\r\n          ?.split(\",\")\r\n          .map((name) => name.trim());\r\n      const responsibleUsers = responsibleUserIds?.map((id, index) => ({\r\n        value: id,\r\n        label: responsibleUserNames[index] || id,\r\n      }));\r\n      setResponsibleUserIds(responsibleUserIds);\r\n      setRUserValue(responsibleUsers);\r\n      setPrevRUserValue(responsibleUsers);\r\n      setSelectedStatus(GetSupplierBasicInformationByIdData.status);\r\n      getAllUser();\r\n      getSupplierCompletionCount(\r\n        GetSupplierBasicInformationByIdData.supplierId\r\n      );\r\n    }\r\n  }, [\r\n    isGetSupplierBasicInformationByIdFetching,\r\n    isGetSupplierBasicInformationById,\r\n    GetSupplierBasicInformationByIdData,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    if (showModal && selectedStatus === CustomerSupplierStatus.REJECT) {\r\n      if (responsibleUserIds) {\r\n        const responsibleUser = responsibleUserIds?.map((id) =>\r\n          Number(id.trim())\r\n        );\r\n        const formNew = { ...formData };\r\n        formNew.initialState = {\r\n          ...formNew.initialState,\r\n          responsibleUserId: responsibleUser,\r\n        };\r\n        setFormData(formNew);\r\n      }\r\n    }\r\n  }, [showModal, selectedStatus]);\r\n\r\n  useEffect(() => {\r\n    if (!isSuppilierFetching && isGetAllUserSucess && allGetAlluserData) {\r\n      const filterData = allGetAlluserData.filter((item) => {\r\n        return (\r\n          item.roleName === null ||\r\n          !excludingRoles\r\n            .map((role) => role.toLowerCase())\r\n            .includes(item.roleName.toLowerCase())\r\n        );\r\n      });\r\n      const uniqueData = Array.from(\r\n        new Map(filterData.map((item) => [item.fullName, item])).values()\r\n      );\r\n      const filteredData = responsibleUserIds\r\n        ? uniqueData.filter(\r\n          (item) => !responsibleUserIds.includes(item.userId.toString())\r\n        )\r\n        : uniqueData;\r\n      const modifyUserData = filteredData.map((item) => ({\r\n        value: item.userId,\r\n        label: item.fullName,\r\n      }));\r\n      setResponsibleUserOptions(modifyUserData);\r\n      const filterDataDropdown = allGetAlluserData.filter((item) => {\r\n        return (\r\n          item.roleName === null ||\r\n          !excludingRoles\r\n            .map((role) => role.toLowerCase())\r\n            .includes(item.roleName.toLowerCase())\r\n        );\r\n      });\r\n\r\n      const uniqueDataDropdown = Array.from(\r\n        new Map(\r\n          filterDataDropdown.map((item) => [item.fullName, item])\r\n        ).values()\r\n      );\r\n      setDropDownOptionField(\r\n        uniqueDataDropdown,\r\n        \"userId\",\r\n        \"fullName\",\r\n        reasonData,\r\n        \"responsibleUserId\"\r\n      );\r\n    }\r\n  }, [isGetAllUserSucess, allGetAlluserData, isSuppilierFetching]);\r\n\r\n  const updateRUserData = (data) => {\r\n    const responsibleUserId = data.map((option) => option.value.toString());\r\n    setRUserValue(data);\r\n    setResponsibleUserIds(responsibleUserId);\r\n    getAllUser();\r\n  };\r\n\r\n  const handleStatusChange = (selectedOption) => {\r\n    if (selectedOption.label === supplierData.status) {\r\n      ToastService.warning(\r\n        \"You can't change the status of the customer to currect customer status.\"\r\n      );\r\n    } else {\r\n      if (selectedOption.value === CustomerSupplierStatus.PENDING) {\r\n        confirm(\r\n          \"Warning?\",\r\n          `Are you sure you want to change the supplier status to ${selectedOption.label}?`,\r\n          \"Yes\",\r\n          \"Cancel\"\r\n        ).then((confirmed) => {\r\n          if (confirmed) {\r\n            removeFields();\r\n            let req = {\r\n              supplierId: supplierId,\r\n              statusId: selectedOption.value,\r\n            };\r\n            updateSupplierStatus(req);\r\n            setSelectedStatus(selectedOption.value);\r\n          }\r\n        });\r\n      } else if (\r\n        selectedOption.value === CustomerSupplierStatus.FREEZE ||\r\n        selectedOption.value === CustomerSupplierStatus.BLOCK ||\r\n        selectedOption.value === CustomerSupplierStatus.DISABLE\r\n      ) {\r\n        removeFields();\r\n        setShowModal(true);\r\n        setSelectedStatus(selectedOption.value);\r\n      } else if (selectedOption.value === CustomerSupplierStatus.SUBMITTED) {\r\n        removeFields();\r\n        if (childRef.current) {\r\n          childRef.current.callChildFunction(supplierId, false);\r\n        }\r\n        setStatusId(selectedOption.value);\r\n      } else if (selectedOption.value === CustomerSupplierStatus.APPROVED) {\r\n        removeFields();\r\n        if (childRef.current) {\r\n          childRef.current.callChildFunction(supplierId, true);\r\n        }\r\n        setStatusId(selectedOption.value);\r\n      } else if (selectedOption.value === CustomerSupplierStatus.REJECT) {\r\n        if (supplierData.responsibleUserId) {\r\n          removeFields();\r\n        }\r\n        setShowModal(true);\r\n        setSelectedStatus(selectedOption.value);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (supplierData) {\r\n      let newStatusOptions = StatusValue;\r\n      if (supplierData.status === statusMapping.APPROVED) {\r\n        newStatusOptions = StatusValue.filter(option => option.value !== 2);\r\n      }\r\n      else if (supplierData.status === statusMapping.PENDING) {\r\n        newStatusOptions = StatusValue.filter(option => option.value !== 3)\r\n      }\r\n      setFilteredStatusOptions(newStatusOptions);\r\n    }\r\n  }, [supplierData]);\r\n  const removeFields = () => {\r\n    const modifyFormFields = removeFormFields(formData, [\"responsibleUserId\"]);\r\n    setFormData(modifyFormFields);\r\n  };\r\n\r\n  const updateCustomerApproval = () => {\r\n    setSelectedStatus(statusId);\r\n    let req = {\r\n      supplierId: supplierId,\r\n      statusId: statusId,\r\n    };\r\n    updateSupplierStatus(req);\r\n  };\r\n\r\n  const onReset = () => {\r\n    let restData = { ...reasonData };\r\n    restData.initialState = { ...formData };\r\n    setFormData(restData);\r\n  };\r\n\r\n  const handleUpdate = () => {\r\n    let custData = reasonRef.current.getFormData();\r\n    if (custData) {\r\n      let req = {\r\n        ...custData,\r\n        supplierId: supplierId,\r\n        statusId: selectedStatus ? selectedStatus : 0,\r\n        note: custData.inActiveReason,\r\n      };\r\n      updateSupplierInActiveStatus(req);\r\n      addSupplierNotes(req);\r\n      updateRUserDataDropdown(custData.responsibleUserId);\r\n    }\r\n  };\r\n\r\n  const updateRUserDataDropdown = (value) => {\r\n    let req = {\r\n      supplierId: supplierId,\r\n      userId: String(value),\r\n    };\r\n    addEditResponsibleUserForSupplier(req);\r\n  };\r\n  const onHandleBlur = () => {\r\n    // let req = {\r\n    //   supplierId: supplierId,\r\n    //   userId: rUserValue?.map((option) => option.value).join(\",\"),\r\n    // };\r\n    // addEditResponsibleUserForSupplier(req);\r\n\r\n    const currentValues = rUserValue?.map((option) => option.value).join(\",\");\r\n\r\n    if (currentValues !== prevRUserValue) {\r\n      let req = {\r\n        customerId: supplierId,\r\n        userId: currentValues,\r\n      };\r\n\r\n      addEditResponsibleUserForSupplier(req);\r\n      setPrevRUserValue(currentValues);  // Store the current value for future comparison\r\n    }\r\n\r\n  };\r\n  const handleToggleModal = () => {\r\n    setShowModal(false);\r\n    onReset();\r\n    getSupplierById();\r\n    setSelectedStatus(supplierData.status);\r\n  };\r\n\r\n  const getStatusClass = () => {\r\n    switch (selectedStatus) {\r\n      case \"Pending\":\r\n        return \"badge-gradient-Pending\";\r\n      case \"Submitted\":\r\n        return \"badge-gradient-Submitted\";\r\n      case \"Approved\":\r\n        return \"badge-gradient-Approved\";\r\n      case \"Freeze\":\r\n        return \"badge-gradient-Frozen\";\r\n      case \"Block\":\r\n        return \"badge-gradient-Blocked\";\r\n      case \"Reject\":\r\n        return \"badge-gradient-reject\";\r\n      case \"Disable\":\r\n        return \"badge-gradient-disabled\";\r\n      default:\r\n        return \"badge-gradient-info\";\r\n    }\r\n  };\r\n\r\n  const getStatusLabel = (value) => {\r\n    const status = StatusValue.find((item) => item.value === value);\r\n    return status ? status.label : \"Unknown\"; // Returns 'Unknown' if value not found\r\n  };\r\n\r\n  const getApprovalCheckList = () => {\r\n    if (childRef.current) {\r\n      childRef.current.callChildFunction(supplierId, false, false);\r\n      // childRef.current.callChildFunction(customerId, customerData.isSubCustomer ? customerData.isSubCustomer : false, false, false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!isLoading ? (\r\n        <div className=\"basic-customer-detail\">\r\n          <div className=\"col-xl-12 col-lg-12 col-md-12 col-12\">\r\n            <div className=\"d-flex profile-info justify-content-between col-12\">\r\n              <div className=\"d-flex col-3 flex-column profile-icon-desc justify-content-center\">\r\n                <div className=\"d-flex w-100\">\r\n                  <div className=\"profile-icon \">\r\n                    <Image\r\n                      imagePath={supplierData?.base64File ? supplierData?.base64File : AppIcons.DummyLogo}\r\n                      altText=\"button Icon\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"detail-sec\">\r\n                    <div className=\"customer-name\">\r\n                      <h5 className=\"ml-0\">{supplierData?.name}</h5>\r\n                    </div>\r\n                    <div>\r\n                      <div className=\"field-desc col-span-3\">\r\n                        <i className=\"fa fa-envelope\"></i>\r\n                        <a\r\n                          className=\"email-link\"\r\n                          href={`mailto:${supplierData?.emailAddress}`}\r\n                        >\r\n                          <div className=\"info-desc\">\r\n                            {supplierData?.emailAddress}\r\n                          </div>\r\n                        </a>\r\n\r\n                        <span\r\n                          className=\"copy-icon tooltip-div\"\r\n                          onClick={() =>\r\n                            CopyText(supplierData?.emailAddress, \"email\")\r\n                          }\r\n                        >\r\n                          <Iconify icon=\"bitcoin-icons:copy-outline\" />\r\n                          <div className=\"tooltip-show\">\r\n                            <p>Click to Copy</p>\r\n                          </div>\r\n                          <div className=\"tooltip-arrow-icon\"></div>\r\n                        </span>\r\n                      </div>\r\n\r\n                      <div className=\"field-desc \">\r\n                        <i className=\"fa fa-globe\"></i>\r\n                        <div className=\"info-desc\">{supplierData?.website}</div>\r\n\r\n                        <span\r\n                          className=\"copy-icon tooltip-div\"\r\n                          onClick={() =>\r\n                            CopyText(supplierData?.website, \"website\")\r\n                          }\r\n                        >\r\n                          <Iconify icon=\"bitcoin-icons:copy-outline\" />\r\n                          <div className=\"tooltip-show\">\r\n                            <p>Click to Copy</p>\r\n                          </div>\r\n                          <div className=\"tooltip-arrow-icon\"></div>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"col-3\">\r\n                <div className=\"field-desc basic-info-select dis-dropdown\">\r\n                  <div className=\"inf-label\">Status</div>\r\n                  <b>&nbsp;:&nbsp;</b>\r\n                  {isButtonDisable ?\r\n                    <div className={`info-desc  ${getStatusClass()}`}>{selectedStatus}</div>\r\n                    :\r\n                    <div className={`status-dropdown ${getStatusClass()}`}>\r\n                      <DropDown\r\n                        options={filteredStatusOptions}\r\n                        value={selectedStatus}\r\n                        onChange={handleStatusChange}\r\n                        placeholder=\"Select Status\"\r\n                        isDisabled={isButtonDisable}\r\n                      />\r\n                    </div>\r\n                  }\r\n                </div>\r\n\r\n                <div className=\"field-desc\">\r\n                  <div className=\"inf-label\">Tax Id</div>\r\n                  <b>&nbsp;:&nbsp;</b>\r\n                  <div className=\"info-desc\">\r\n                    {supplierData?.taxId\r\n                      ? supplierData?.taxId\r\n                      : ErrorMessage.NotAvailabe}\r\n                  </div>\r\n                </div>\r\n                <div className=\"field-desc basic-info-select dis-dropdown\">\r\n                  <div className=\"inf-label\">R-User</div>\r\n                  <b>&nbsp;:&nbsp;</b>\r\n                  <div className=\"status-dropdown\">\r\n                    {/* <DropDown\r\n                    options={responsibleUserOptions}\r\n                    value={rUserValue}\r\n                    onChange={handleRUserChange}\r\n                    placeholder=\"Responsible User\"\r\n                    isDisabled={isResponsibleUser ? true : isButtonDisable}\r\n                  /> */}\r\n                    <DropdownSelect\r\n                      isMultiSelect={true}\r\n                      placeholder=\"Responsible User\"\r\n                      isDropdownDisabled={\r\n                        isResponsibleUser ? true : isButtonDisable\r\n                      }\r\n                      optionsValue={responsibleUserOptions}\r\n                      value={rUserValue}\r\n                      handleDropdownChange={updateRUserData}\r\n                      handleDropdownBlur={onHandleBlur}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"field-desc\">\r\n                  <div className=\"inf-label\">List Code</div>\r\n                  <b>&nbsp;:&nbsp;</b>\r\n                  <div className=\"info-desc\">\r\n                    {supplierData?.listCode\r\n                      ? supplierData?.listCode\r\n                      : ErrorMessage.NotAvailabe}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* second no */}\r\n              <div className=\"col-3  separator\">\r\n                <div className=\"field-desc\">\r\n                  <div className=\"inf-label\">Country</div>\r\n                  <b>&nbsp;:&nbsp;</b>\r\n                  <div className=\"info-desc\">{supplierData?.countryName}</div>\r\n                </div>\r\n                <div className=\"field-desc\">\r\n                  <div className=\"inf-label\">Territory</div>\r\n                  <b>&nbsp;:&nbsp;</b>\r\n                  <div className=\"info-desc\">{supplierData?.territory}</div>\r\n                </div>\r\n                <div className=\"field-desc\">\r\n                  <div className=\"inf-label\">Supplier Type</div>\r\n                  <b>&nbsp;:&nbsp;</b>\r\n                  <div className=\"info-desc\">{supplierData?.supplierType}</div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* third no */}\r\n\r\n              <div className=\"col-3\">\r\n                <div className=\"field-desc\">\r\n                  <div\r\n                    className=\"inf-label\"\r\n                    style={{ minWidth: \"130px\", maxWidth: \"130px\" }}\r\n                  >\r\n                    Group Type\r\n                  </div>\r\n                  <b>&nbsp;:&nbsp;</b>\r\n                  <div className=\"info-desc\">{supplierData?.groupType}</div>\r\n                </div>\r\n                <div className=\"field-desc\">\r\n                  <div\r\n                    className=\"inf-label\"\r\n                    style={{ minWidth: \"130px\", maxWidth: \"130px\" }}\r\n                  >\r\n                    Incoterm\r\n                  </div>\r\n                  <b>&nbsp;:&nbsp;</b>\r\n                  <div className=\"info-desc\">{supplierData?.incotermName}</div>\r\n                </div>\r\n                <div className=\"field-desc\">\r\n                  <div\r\n                    className=\"inf-label\"\r\n                    style={{ minWidth: \"130px\", maxWidth: \"130px\" }}\r\n                  >\r\n                    Profile Completion\r\n                  </div>\r\n                  <b>&nbsp;:&nbsp;</b>\r\n                  {totalCount && (\r\n                    <>\r\n                      <div\r\n                        className=\"submission-tab d-flex gap-2 align-items-center pt-1 pl-1\"\r\n                        style={{ cursor: \"pointer\", fontSize: \"13px\" }}\r\n                        onClick={getApprovalCheckList}\r\n                      >\r\n                        {approvalSuccessCount + \"/\" + totalCount}\r\n\r\n                        <span className=\"tooltip-div\">\r\n                          <Iconify icon=\"ep:info-filled\" className=\"info\" />\r\n                          <div className=\"tooltip-show\">\r\n                            <p>Click to view</p>\r\n                          </div>\r\n                          <div className=\"tooltip-arrow-icon\"></div>\r\n                        </span>\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {showEditIcon ? (\r\n              <div className=\"edit-icons\" onClick={editClick}>\r\n                <Iconify icon=\"tabler:pencil\" />\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n          {showModal && (\r\n            <CenterModel\r\n              showModal={showModal}\r\n              handleToggleModal={handleToggleModal}\r\n              modalTitle={`${getStatusLabel(selectedStatus)} Reason`}\r\n              modelSizeClass=\"w-50s\"\r\n            >\r\n              <div className=\"row horizontal-form\">\r\n                <FormCreator config={formData} ref={reasonRef} {...formData} />\r\n                <div className=\"col-md-12 mt-2\">\r\n                  <div className=\"d-flex align-item-end justify-content-end\">\r\n                    <div className=\"d-flex align-item-end\">\r\n                      <Buttons\r\n                        buttonTypeClassName=\"theme-button\"\r\n                        buttonText=\"Update\"\r\n                        isLoading={updateCustomerInActiveStatusCustomerLoading}\r\n                        onClick={handleUpdate}\r\n                      />\r\n                      <Buttons\r\n                        buttonTypeClassName=\"dark-btn ml-5\"\r\n                        buttonText=\"Cancel\"\r\n                        onClick={handleToggleModal}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CenterModel>\r\n          )}\r\n        </div>\r\n      ) : (\r\n        <DataLoader />\r\n      )}\r\n      <SupplierApproval\r\n        childRef={childRef}\r\n        isDetailPage={true}\r\n        updateApproval={updateCustomerApproval}\r\n        setSelectedStatus={setSelectedStatus}\r\n        responsibleUserIds={responsibleUserIds}\r\n        OnRejectedSupplierFromApproval={rejectedSupplierFromApproval}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nSupplierBasicInfoCard.propTypes = {\r\n  editClick: PropTypes.func.isRequired,\r\n  supplierData: PropTypes.shape({\r\n    name: PropTypes.string,\r\n    emailAddress: PropTypes.string,\r\n    website: PropTypes.string,\r\n    taxId: PropTypes.string,\r\n    statusId: PropTypes.number,\r\n    status: PropTypes.string,\r\n    responsibleUserId: PropTypes.number,\r\n    responsibleUserName: PropTypes.string,\r\n    countryName: PropTypes.string,\r\n    territory: PropTypes.string,\r\n    supplierType: PropTypes.string,\r\n    groupType: PropTypes.string,\r\n    isCompany: PropTypes.bool,\r\n  }),\r\n  isLoading: PropTypes.bool,\r\n  supplierId: PropTypes.number.isRequired,\r\n  getSupplierById: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SupplierBasicInfoCard;\r\n","import ToastService from \"../../services/toastService/ToastService\";\r\n\r\nconst CopyText =(text,field )=>{\r\n navigator.clipboard.writeText(text).then(\r\n          () => {\r\n            ToastService.success(`${field} copied to the clipboard.`);\r\n          },\r\n          (err) => {\r\n            ToastService.err(\"Could not copy text: \", err);\r\n          }\r\n        );\r\n   \r\n};\r\nexport default CopyText;","export const getLabelClass = (value) => {\r\n    switch (value) {\r\n      case \"Active\":\r\n        return \"status-btn badge-gradient-success\";\r\n      case \"Open\":\r\n        return \"status-btn badge-gradient-info\";\r\n      case \"In Active\":\r\n        return \"status-btn badge-gradient-danger\";\r\n      case \"Pending\":\r\n        return \"status-btn badge-gradient-Pending\";\r\n      case \"In progress\":\r\n        return \"status-btn badge-gradient-theme\";\r\n      case \"Submitted\":\r\n        return \"status-btn badge-gradient-Submitted\";\r\n      case \"Approved\":\r\n        return \"status-btn badge-gradient-Approved\";\r\n      case \"Freeze\":\r\n        return \"status-btn badge-gradient-Frozen\";\r\n      case \"Block\":\r\n        return \"status-btn badge-gradient-Blocked\";\r\n      case \"Reject\":\r\n        return \"status-btn badge-gradient-reject\";\r\n      case \"Disable\":\r\n        return \"status-btn badge-gradient-disabled\";\r\n      default:\r\n        return \"status-btn badge-gradient-info\";\r\n    }\r\n  };"],"names":["reasonData","name","initialState","responsibleUserId","inActiveReason","formFields","id","lable","Field_Name","fieldType","FormFieldTypes","SELECT","dataField","fieldSetting","placeholder","isDisabled","isEnableOnChange","isMultiSelect","validation","type","style","containerCss","TEXTAREA","allowSpace","_ref","isApprovalValidate","showModal","handleToggleModal","children","props","_jsxs","Modal","className","modelSizeClass","show","onHide","keyboard","backdrop","_jsx","Header","closeButton","modalTitle","Body","excludingRoles","customerbasicData","groupTypeId","countryId","territoryId","emailAddress","website","note","isSubCustomer","taxId","isBuyingForThirdParty","customerNoteId","incotermId","attachment","base64File","storagePath","IMAGE","isImageUpload","isButtonVisible","isCustomButtonVisible","acceptedFiles","INPUT","maxLength","exemptBoundarySpaces","inputButtonGroupConfig","isPrimaryButtonVisible","infoButtonConfig","isInfoButtonVisible","infoButtonIcon","infoButtonTooltip","minLength","inputIcon","isIconShow","faIcon","message","SuccessMessage","DefaultUSATaxId","CHECKBOX","CKEDITOR","formSetting","isViewOnly","GridColumnType","LABLE","getLabelClass","ACTION","SupplierApproval","React","editClick","supplierData","isLoading","supplierId","getSupplierById","GetSupplierBasicInformationByIdData","isGetSupplierBasicInformationByIdFetching","isGetSupplierBasicInformationById","childRef","useRef","reasonRef","confirm","SwalAlert","selectedStatus","setSelectedStatus","useState","formData","setFormData","setShowModal","statusId","setStatusId","showEditIcon","setShowEditIcon","responsibleUserIds","setResponsibleUserIds","rUserValue","setRUserValue","addSupplierNotes","useAddSupplierNotesMutation","responsibleUserOptions","setResponsibleUserOptions","filteredStatusOptions","setFilteredStatusOptions","StatusValue","prevRUserValue","setPrevRUserValue","getAllUser","isFetching","isSuppilierFetching","isSuccess","isGetAllUserSucess","data","allGetAlluserData","useLazyGetAllUserQuery","addEditResponsibleUserForSupplier","isSuccessAddEditResponsibleUserForSupplier","isAddEditResponsibleUserForSupplierData","useAddEditResponsibleUserForSupplierMutation","updateSupplierStatus","isSuccessUpdateSupplierStatus","updateSupplierStatusData","useUpdateSupplierStatusMutation","updateSupplierInActiveStatus","updateCustomerInActiveStatusCustomerLoading","isSuccessUpdateSupplierInActiveStatus","updateSupplierInActiveStatusData","useUpdateSupplierInActiveStatusMutation","isResponsibleUser","totalCount","approvalSuccessCount","getSupplierCompletionCount","useContext","AddSupplierContext","isButtonDisable","setIsButtonDisable","hasEditPermission","hasFunctionalPermission","securityKey","EDITBASICSUPPLIERDETAILS","useEffect","isEditable","ToastService","success","errorMessage","_GetSupplierBasicInfo","_GetSupplierBasicInfo2","split","map","trim","responsibleUserNames","responsibleUserName","responsibleUsers","index","value","label","status","CustomerSupplierStatus","REJECT","responsibleUser","Number","formNew","filterData","filter","item","roleName","role","toLowerCase","includes","uniqueData","Array","from","Map","fullName","values","modifyUserData","userId","toString","filterDataDropdown","uniqueDataDropdown","setDropDownOptionField","newStatusOptions","statusMapping","APPROVED","option","PENDING","removeFields","modifyFormFields","removeFormFields","updateRUserDataDropdown","req","String","onReset","restData","getStatusClass","_Fragment","DataLoader","Image","imagePath","AppIcons","DummyLogo","altText","href","onClick","CopyText","Iconify","icon","DropDown","options","onChange","selectedOption","warning","then","confirmed","FREEZE","BLOCK","DISABLE","SUBMITTED","current","callChildFunction","ErrorMessage","NotAvailabe","DropdownSelect","isDropdownDisabled","optionsValue","handleDropdownChange","handleDropdownBlur","onHandleBlur","currentValues","join","customerId","listCode","countryName","territory","supplierType","minWidth","maxWidth","groupType","incotermName","cursor","fontSize","getApprovalCheckList","CenterModel","find","getStatusLabel","FormCreator","config","ref","Buttons","buttonTypeClassName","buttonText","handleUpdate","custData","getFormData","isDetailPage","updateApproval","updateCustomerApproval","OnRejectedSupplierFromApproval","rejectedSupplierFromApproval","text","field","navigator","clipboard","writeText","err"],"sourceRoot":""}