{"version":3,"file":"static/js/4603.ac255ae3.chunk.js","mappings":"wLAQA,MAAMA,EAAcC,EAAAA,MAAW,IAAM,kCAE/BC,EAAsB,CACxBC,IAAKC,EAAAA,EAAYC,mBACjBC,KAAMF,EAAAA,EAAYG,qBAgCtB,EA7B8BC,IAA2C,IAA1C,eAAEC,EAAc,iBAAEC,GAAkBF,EAE/D,MAAM,WAAEG,EAAU,YAAEC,EAAW,kBAAEC,EAAiB,mBAAEC,EAAkB,2BAAEC,IAA+BC,EAAAA,EAAAA,YAAWC,EAAAA,GAMlH,OACIC,EAAAA,EAAAA,KAAClB,EAAW,CACRmB,YAAY,EACZV,eAAgBA,EAChBW,MAAOT,GAAc,EACrBU,YAAcR,EAA0C,KAAtBX,EAClCoB,wBAAyBC,EAAAA,GACzBC,gBAAiBC,EAAAA,GACjBC,WAAYC,EAAAA,GACZC,cAAeC,EAAAA,GACfC,cAAeC,EAAAA,GACfrB,iBAAkBA,EAClBI,mBAAoBA,EACpBkB,mBAjBmBA,KACvBjB,EAA2BJ,EAAYC,EAAY,GAiBjD,C","sources":["pages/customerDetail/feature/customerAddressDetail/CustomerAddressDetail.js"],"sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useContext } from 'react';\r\n//** Service */\r\nimport BasicDetailContext from '../../../../utils/ContextAPIs/Customer/BasicDetailContext';\r\nimport { useAddAddressMutation, useDeleteAddressMutation, useLazyGetAddresssByCustomerIdQuery, useLazyGetCustomerAddresssByAddressIdQuery, useUpdateAddAddressMutation } from '../../../../app/services/addressAPI';\r\nimport { securityKey } from '../../../../data/SecurityKey';\r\nimport PropTypes from 'prop-types';\r\n//** Component's */\r\nconst AddressGrid = React.lazy(() => import(\"../../../../common/features/component/Address/AddressGrid\"));\r\n\r\nconst customerSecurityKey = {\r\n    ADD: securityKey.ADDCUSTOMERADDRESS,\r\n    EDIT: securityKey.EDITCUSTOMERADDRESS,\r\n}\r\n\r\nconst CustomerAddressDetail = ({ isEditablePage, customerStatusId }) => {\r\n\r\n    const { customerId, subCustomer, isResponsibleUser, setIsAddressChange, getCustomerCompletionCount } = useContext(BasicDetailContext);\r\n\r\n    const getCompletionCount = () => {\r\n        getCustomerCompletionCount(customerId, subCustomer);\r\n    }\r\n\r\n    return (\r\n        <AddressGrid\r\n            isSupplier={false}\r\n            isEditablePage={isEditablePage}\r\n            keyId={customerId || 0}\r\n            SecurityKey={!isResponsibleUser ? customerSecurityKey : null}\r\n            getAddresssByCustomerId={useLazyGetAddresssByCustomerIdQuery}\r\n            getAddresssById={useLazyGetCustomerAddresssByAddressIdQuery}\r\n            addAddress={useAddAddressMutation}\r\n            updateAddress={useUpdateAddAddressMutation}\r\n            deleteAddress={useDeleteAddressMutation}\r\n            customerStatusId={customerStatusId}\r\n            setIsAddressChange={setIsAddressChange}\r\n            getCompletionCount={getCompletionCount}\r\n        />\r\n    )\r\n}\r\n\r\nCustomerAddressDetail.propTypes = {\r\n    isEditablePage: PropTypes.bool.isRequired\r\n};\r\nexport default CustomerAddressDetail\r\n"],"names":["AddressGrid","React","customerSecurityKey","ADD","securityKey","ADDCUSTOMERADDRESS","EDIT","EDITCUSTOMERADDRESS","_ref","isEditablePage","customerStatusId","customerId","subCustomer","isResponsibleUser","setIsAddressChange","getCustomerCompletionCount","useContext","BasicDetailContext","_jsx","isSupplier","keyId","SecurityKey","getAddresssByCustomerId","useLazyGetAddresssByCustomerIdQuery","getAddresssById","useLazyGetCustomerAddresssByAddressIdQuery","addAddress","useAddAddressMutation","updateAddress","useUpdateAddAddressMutation","deleteAddress","useDeleteAddressMutation","getCompletionCount"],"sourceRoot":""}