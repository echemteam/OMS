{"version":3,"file":"static/js/7981.daf5be0a.chunk.js","mappings":"gMAQA,MAAMA,EAAsBC,EAAAA,MAAW,IAAM,kCAsE7C,EApEuBC,IAAuC,IAADC,EAAAC,EAAA,IAArC,KAAEC,EAAI,MAAEC,EAAK,gBAAEC,GAAiBL,EAgBpD,OACIM,EAAAA,EAAAA,MAAA,MAAIC,UAAW,IAAGJ,EAAKK,SAAW,eAAiB,IAAKC,SAAA,EACpDH,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaE,SAAA,EACxBH,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAiBG,QAhBvBC,KACjBR,EAAKK,UAAYL,EAAKK,SACtBH,GAAmBA,EAAgBF,EAAMA,EAAKS,GAAG,EAcaH,SAAA,CACjDN,EAAKM,SAASI,OAAS,GACpBC,EAAAA,EAAAA,KAAA,OAAKP,UAAU,aAAYE,UACvBK,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CAACC,UAAWC,EAAAA,EAASC,UAAWC,QAAQ,gBAEvC,MACfL,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CAACC,UAAWb,EAAKM,SAASI,OAAS,GAAe,IAAVT,EAAca,EAAAA,EAASG,WAAaH,EAAAA,EAASI,cAAeF,QAAQ,kBAEtHL,EAAAA,EAAAA,KAAA,OAAKP,UAAU,eAAcE,SAAEN,EAAKmB,QACpCR,EAAAA,EAAAA,KAAA,OAAKP,UAAU,sBAAqBE,UAChCK,EAAAA,EAAAA,KAACS,EAAAA,QAAQ,CACLC,QAAsB,QAAbvB,EAAAE,EAAKsB,gBAAQ,IAAAxB,GAAbA,EAAeyB,cAAgBC,EAAAA,GAA0BC,EAAAA,GAClEC,MAAoB,QAAf3B,EAAEC,EAAKsB,gBAAQ,IAAAvB,OAAA,EAAbA,EAAe4B,kBACtBC,SAzBGC,IACnB,MAAMH,EAAQG,EAAUH,MACxB1B,EAAKsB,SAASK,kBAAoBD,EAClCxB,GAAmBA,EAAgBF,EAAMA,EAAKS,GAAG,SAyB5CT,EAAKM,UAAYN,EAAKM,SAASI,OAAS,IACrCC,EAAAA,EAAAA,KAAChB,EAAmB,CAChBmC,WAAY9B,EAAKM,SACjBL,MAAOA,EAAQ,EACf8B,WAAY/B,EACZE,gBA5BO8B,IACnB9B,GAAmBA,EAAgB8B,EAAWA,EAAUvB,GAAG,MA6BtD,C","sources":["pages/Security/permissions/features/PermissionItem.js"],"sourcesContent":["import React from \"react\";\r\nimport PropTypes from 'prop-types'; \r\n//** Lib's */\r\nimport { AppIcons } from \"../../../../data/appIcons\";\r\nimport Image from \"../../../../components/image/Image\";\r\nimport DropDown from \"../../../../components/ui/dropdown/DropDrown\";\r\nimport { SelectGrantDenyDropdown, SelectViewEditDropdown } from \"../../../../pages/Security/permissions/features/config/securityPermissions.Data\";\r\n//** Component's */\r\nconst PermissionChildItem = React.lazy(() => import(\"./PermissionChildItem\"));\r\n\r\nconst PermissionItem = ({ item, level, onParenetUpdate }) => {\r\n\r\n    //** Handle Change's */\r\n    const onItemExpand = () => {\r\n        item.isActive = !item.isActive;\r\n        onParenetUpdate && onParenetUpdate(item, item.id);\r\n    };\r\n    const onValueChange = (valueItem) => {\r\n        const value = valueItem.value;\r\n        item.itemData.securitySettingId = value;\r\n        onParenetUpdate && onParenetUpdate(item, item.id);\r\n    };\r\n    const onChildUpdate = (childItem) => {\r\n        onParenetUpdate && onParenetUpdate(childItem, childItem.id);\r\n    };\r\n\r\n    return (\r\n        <li className={`${item.isActive ? \"active-1drop\" : \"\"}`}>\r\n            <div className=\"parent-part\">\r\n                <div className=\"drop-menu-icon\" onClick={onItemExpand}>\r\n                    {item.children.length > 0 ? (\r\n                        <div className=\"arrow-icon\">\r\n                            <Image imagePath={AppIcons.arrowIcon} altText=\"tree-icon\" />\r\n                            {/* <Iconify icon=\"solar:alt-arrow-down-outline\" /> */}\r\n                        </div>) : (null)}\r\n                    <Image imagePath={item.children.length > 0 || level === 0 ? AppIcons.folderIcon : AppIcons.subFolderIcon} altText=\"tree-icon\" />\r\n                </div>\r\n                <div className=\"security-key\">{item.name}</div>\r\n                <div className=\"permission-dropdown\">\r\n                    <DropDown\r\n                        options={item.itemData?.grantDenyFlag ? SelectGrantDenyDropdown : SelectViewEditDropdown}\r\n                        value={item.itemData?.securitySettingId}\r\n                        onChange={onValueChange} />\r\n                </div>\r\n            </div>\r\n            {item.children && item.children.length > 0 && (\r\n                <PermissionChildItem\r\n                    childItems={item.children}\r\n                    level={level + 1}\r\n                    parentItem={item}\r\n                    onParenetUpdate={onChildUpdate} />\r\n            )}\r\n        </li>\r\n    );\r\n};\r\nPermissionItem.propTypes = {\r\n    item: PropTypes.shape({\r\n        isActive: PropTypes.bool.isRequired,\r\n        id: PropTypes.number,\r\n        name: PropTypes.string.isRequired,\r\n        children: PropTypes.arrayOf(PropTypes.shape({\r\n            isActive: PropTypes.bool,\r\n            id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n            name: PropTypes.string,\r\n            children: PropTypes.array,\r\n            itemData: PropTypes.shape({\r\n                grantDenyFlag: PropTypes.bool,\r\n                securitySettingId: PropTypes.oneOfType([PropTypes.string, PropTypes.number])  \r\n            })\r\n        })),\r\n        itemData: PropTypes.shape({\r\n            grantDenyFlag: PropTypes.bool,\r\n            securitySettingId: PropTypes.oneOfType([PropTypes.string, PropTypes.number]) \r\n        })\r\n    }).isRequired,\r\n    level: PropTypes.number.isRequired,\r\n    onParenetUpdate: PropTypes.func\r\n};\r\nexport default PermissionItem;"],"names":["PermissionChildItem","React","_ref","_item$itemData","_item$itemData2","item","level","onParenetUpdate","_jsxs","className","isActive","children","onClick","onItemExpand","id","length","_jsx","Image","imagePath","AppIcons","arrowIcon","altText","folderIcon","subFolderIcon","name","DropDown","options","itemData","grantDenyFlag","SelectGrantDenyDropdown","SelectViewEditDropdown","value","securitySettingId","onChange","valueItem","childItems","parentItem","childItem"],"sourceRoot":""}