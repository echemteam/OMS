{"version":3,"file":"static/js/6337.4adcdea1.chunk.js","mappings":"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","sources":["common/features/component/ExistingInfo/Config/Existing.data.js","common/features/component/ExistingInfo/ValidateCustomerSupplierInfo.js","pages/customerDetail/feature/customerBasicDetail/config/CustomerBasicDetail.data.js","pages/customerDetail/feature/customerBasicDetail/config/TaxIdValidator.js","pages/supplierDetails/feature/supplierBasicDetail/AddEditSupplierBasicDetail.js","pages/supplierDetails/feature/supplierBasicDetail/config/SupplierBasicDetail.data.js","utils/CustomerSupplier/CustomerSupplierUtils.js","utils/ResponsibleUser/validateRUser.js","utils/StatusColors/StatusColors.js"],"sourcesContent":["import { GridColumnType } from \"../../../../../data/gridColumnType\";\r\nimport { getLabelClass } from \"../../../../../utils/StatusColors/StatusColors\";\r\n\r\nexport const basicInfoData = {\r\n    columns: [\r\n        {\r\n            name: \"Search Match (%)\",\r\n            fieldName: \"matchPercentage\",\r\n            colType: GridColumnType.CUSTOM,\r\n            colStyle: {\r\n                width: \"10%\",\r\n            },\r\n            renderCustomCol: (rowData) => {\r\n                return (\r\n                    <>\r\n                        {rowData?.matchPercentage ? `${rowData.matchPercentage} %` : 'N/A'}\r\n                    </>\r\n                );\r\n            },\r\n            // allowShort: true,\r\n        },\r\n        {\r\n            name: \"Name\",\r\n            fieldName: \"name\",\r\n            colStyle: {\r\n                width: \"20%\",\r\n            },\r\n            // allowShort: true,\r\n        },\r\n        {\r\n            name: \"Tax Id\",\r\n            fieldName: \"taxId\",\r\n            colStyle: {\r\n                width: \"10%\",\r\n            },\r\n            // allowShort: true,\r\n        },\r\n        {\r\n            name: \"Country\",\r\n            fieldName: \"countryName\",\r\n            colStyle: {\r\n                width: \"15%\",\r\n            },\r\n            // allowShort: true,\r\n        },\r\n\r\n        {\r\n            name: \"Email\",\r\n            fieldName: \"emailAddress\",\r\n            colStyle: {\r\n                width: \"15%\",\r\n            },\r\n            // allowShort: true,\r\n        },\r\n        {\r\n            name: \"Group Type\",\r\n            fieldName: \"groupType\",\r\n            colStyle: {\r\n                width: \"15%\",\r\n            },\r\n            // allowShort: true,\r\n        },\r\n        {\r\n            name: \"Status\",\r\n            fieldName: \"status\",\r\n            allowShort: false,\r\n            colType: GridColumnType.LABLE,\r\n            colStyle: {\r\n                width: \"14%\",\r\n            },\r\n            colSettings: {\r\n                valueField: \"status\",\r\n                getLableClass: getLabelClass,\r\n            },\r\n        },\r\n\r\n        {\r\n            name: \"Action\",\r\n            colStyle: {\r\n                width: \"8%\",\r\n            },\r\n            colType: GridColumnType.ACTION,\r\n            defaultAction: {\r\n                allowEdit: true,\r\n                allowDisable: false,\r\n            },\r\n        },\r\n    ],\r\n};\r\n\r\nexport const OrderBasicInfoData = {\r\n    columns: [\r\n        {\r\n            name: \"Customer Name\",\r\n            fieldName: \"customerName\",\r\n            colStyle: {\r\n                width: \"25%\",\r\n            },\r\n            // allowShort: true,\r\n        },\r\n        {\r\n            name: \"Po Number\",\r\n            fieldName: \"poNumber\",\r\n            colStyle: {\r\n                width: \"25%\",\r\n            },\r\n            // allowShort: true,\r\n        },\r\n        {\r\n            name: \"Order Received Date\",\r\n            colStyle: {\r\n                width: \"25%\",\r\n            },\r\n            fieldName: \"orderReceivedDate\",\r\n            colType: GridColumnType.DATE,\r\n            colSettings: {\r\n                isUTC: true,\r\n                format: \"MM/DD/YYYY hh:mm A \",\r\n            },\r\n            // allowShort: true,\r\n        },\r\n\r\n        {\r\n            name: \"Action\",\r\n            colStyle: {\r\n                width: \"25%\",\r\n                textAlign: \"center\",\r\n                justifyContent: \"center\"\r\n            },\r\n            colType: GridColumnType.ACTION,\r\n            defaultAction: {\r\n                allowEdit: true,\r\n                allowDisable: false,\r\n            },\r\n        },\r\n    ],\r\n};\r\n\r\nexport const validateNameEmailWebsiteGrid = {\r\n    columns: [\r\n\r\n        {\r\n            name: \"Name\",\r\n            fieldName: \"name\",\r\n            colStyle: {\r\n                width: \"10%\",\r\n            },\r\n            // allowShort: true,\r\n        },\r\n        {\r\n            name: \"Tax Id\",\r\n            fieldName: \"taxId\",\r\n            colStyle: {\r\n                width: \"10%\",\r\n            },\r\n            // allowShort: true,\r\n        },\r\n        {\r\n            name: \"Website\",\r\n            fieldName: \"website\",\r\n            colStyle: {\r\n                width: \"10%\",\r\n            },\r\n            // allowShort: true,\r\n        },\r\n        // {\r\n        //     name: \"Country\",\r\n        //     fieldName: \"countryName\",\r\n        //     colStyle: {\r\n        //         width: \"15%\",\r\n        //     },\r\n        // },\r\n\r\n        {\r\n            name: \"Email\",\r\n            fieldName: \"emailAddress\",\r\n            colStyle: {\r\n                width: \"15%\",\r\n            },\r\n        },\r\n        {\r\n            name: \"Reason\",\r\n            fieldName: \"reason\",\r\n            colStyle: {\r\n                width: \"30%\",\r\n            },\r\n        },\r\n        {\r\n            name: \"Status\",\r\n            fieldName: \"status\",\r\n            allowShort: false,\r\n            colType: GridColumnType.LABLE,\r\n            colStyle: {\r\n                width: \"12%\",\r\n            },\r\n            colSettings: {\r\n                valueField: \"status\",\r\n                getLableClass: getLabelClass,\r\n            },\r\n        },\r\n\r\n        {\r\n            name: \"Action\",\r\n            colStyle: {\r\n                width: \"8%\",\r\n            },\r\n            colType: GridColumnType.ACTION,\r\n            defaultAction: {\r\n                allowEdit: true,\r\n                allowDisable: false,\r\n            },\r\n        },\r\n    ],\r\n};","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { forwardRef, useRef, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n//** Libs's */\r\nimport CardSection from '../../../../components/ui/card/CardSection';\r\nimport SidebarModel from '../../../../components/ui/sidebarModel/SidebarModel';\r\n//** Service's */\r\nimport { encryptUrlData } from '../../../../services/CryptoService';\r\nimport FinalMolGrid from '../../../../components/FinalMolGrid/FinalMolGrid';\r\nimport Buttons from '../../../../components/ui/button/Buttons';\r\n\r\nconst ValidateCustomerSupplierInfo = forwardRef(({ onAdd, isSupplier, onSidebarClose, isModalOpen, gridCnfiguration, gridData, isGridLoading }) => {\r\n\r\n    //** State */\r\n    const molGridRef = useRef();\r\n    const [isOpen, setIsOpen] = useState(isModalOpen);\r\n\r\n    const handleEditClick = (data) => {\r\n        let url;\r\n        if (!isSupplier) {\r\n            url = `/CustomerDetails/${encryptUrlData(data.customerId)}`;\r\n        } else {\r\n            url = `/SupplierDetails/${encryptUrlData(data.supplierId)}`;\r\n        }\r\n        window.open(url, \"_blank\");\r\n    };\r\n\r\n\r\n\r\n    const actionHandler = {\r\n        EDIT: handleEditClick,\r\n    };\r\n\r\n    const sidebarClose = () => {\r\n        setIsOpen(false);\r\n    }\r\n\r\n    const onAddData = () => {\r\n        onAdd();\r\n        setIsOpen(false);\r\n    }\r\n\r\n    return (\r\n        <SidebarModel\r\n            modalTitle=\"Matching Details\"\r\n            contentClass=\"content-80\"\r\n            onClose={sidebarClose} isOpen={isOpen}>\r\n            <div className='pop-up-input-btn mt-3'>\r\n                <CardSection>\r\n                    <div className=\"row input-list-button\">\r\n                        <div className=\"col-lg-12 table-striped\">\r\n                            <FinalMolGrid\r\n                                ref={molGridRef}\r\n                                configuration={gridCnfiguration}\r\n                                dataSource={gridData}\r\n                                onActionChange={actionHandler}\r\n                                isLoading={isGridLoading} />\r\n                        </div>\r\n                    </div>\r\n                </CardSection>\r\n                <div className='d-flex justify-content-end'>\r\n                    <Buttons\r\n                        buttonTypeClassName=\"theme-button mr-5\"\r\n                        buttonText=\"Create a customer\"\r\n                        onClick={onAddData}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </SidebarModel>\r\n    )\r\n});\r\n\r\nValidateCustomerSupplierInfo.propTypes = {\r\n    // parentRef: PropTypes.shape({\r\n    //     current: PropTypes.shape({\r\n    //         callChildFunction: PropTypes.func\r\n    //     })\r\n    // }).isRequired,\r\n    // isSupplier: PropTypes.bool.isRequired,\r\n    // getExistingInfoByName: PropTypes.func.isRequired\r\n};\r\n\r\nexport default ValidateCustomerSupplierInfo;","import { SuccessMessage } from \"../../../../../data/appMessages\";\r\nimport { FormFieldTypes } from \"../../../../../data/formFieldType\";\r\nimport { GridColumnType } from \"../../../../../data/gridColumnType\";\r\nimport { getLabelClass } from \"../../../../../utils/StatusColors/StatusColors\";\r\n\r\nexport const excludingRoles = [\"Admin\", \"manager\"];\r\n\r\nexport const customerbasicData = {\r\n  initialState: {\r\n    name: \"\",\r\n    groupTypeId: 1,\r\n    countryId: 233,\r\n    territoryId: 2,\r\n    emailAddress: \"\",\r\n    website: \"\",\r\n    note: \"\",\r\n    isSubCustomer: false,\r\n    taxId: \"\",\r\n    isBuyingForThirdParty: false,\r\n    responsibleUserId: \"\",\r\n    customerNoteId: \"\",\r\n    incotermId: 11,\r\n    attachment: \"\",\r\n    base64File: \"\",\r\n    storagePath: \"\",\r\n  },\r\n  formFields: [\r\n    {\r\n      id: \"attachment\",\r\n      lable: \"Customer Logo \",\r\n      Field_Name: \"Attachment\",\r\n      fieldType: FormFieldTypes.IMAGE,\r\n      dataField: \"attachment\",\r\n      fieldSetting: {\r\n        placeholder: \"Upload Attachment\",\r\n        allowSpace: true,\r\n        isImageUpload: true,\r\n        isButtonVisible: true,\r\n        isCustomButtonVisible: false,\r\n        acceptedFiles: \".png , .jpg \",\r\n      },\r\n      style: {\r\n        containerCss:\r\n          \"col-xxl-4 col-xl-4 col-md-4 col-12 mb-input mb-0 custom-file-upload-section validation-image-uploader customer-logo-sec\",\r\n      },\r\n    },\r\n    // {\r\n    //   id: \"\",\r\n    //   lable: \"\",\r\n    //   Field_Name: \"\",\r\n    //   dataField: \"\",\r\n    //   style: {\r\n    //     containerCss: \"col-xxl-4 col-xl-4 col-md-4 col-4 col-4 remove-line\",\r\n    //   },\r\n    // },\r\n    {\r\n      id: \"name\",\r\n      lable: \"Customer Name \",\r\n      Field_Name: \"Customer Name\",\r\n      fieldType: FormFieldTypes.INPUT,\r\n      dataField: \"name\",\r\n      fieldSetting: {\r\n        placeholder: \"Enter Customer Name\",\r\n        allowSpace: true,\r\n        maxLength: 50,\r\n        exemptBoundarySpaces: true,\r\n      },\r\n      validation: [{ type: \"require\" }, { type: \"uniqueName\" }],\r\n      style: {\r\n        containerCss: \"col-xxl-8 col-xl-8 col-md-8 col-12 mb-input\",\r\n      },\r\n      inputButtonGroupConfig: {\r\n        isPrimaryButtonVisible: false,\r\n        // primaryButtonText: 'Verify',\r\n        infoButtonConfig: {\r\n          isInfoButtonVisible: true,\r\n          infoButtonIcon: \"fa-search\",\r\n          infoButtonTooltip: \"Customer Information\",\r\n        },\r\n      },\r\n    },\r\n    {\r\n      id: \"emailAddress\",\r\n      lable: \"Email \",\r\n      Field_Name: \"Email\",\r\n      fieldType: FormFieldTypes.INPUT,\r\n      dataField: \"emailAddress\",\r\n      fieldSetting: {\r\n        placeholder: \"Enter Email\",\r\n        allowSpace: false,\r\n        maxLength: 65,\r\n        exemptBoundarySpaces: true,\r\n      },\r\n      validation: [{ type: \"require\" }, { type: \"email\" }],\r\n      style: {\r\n        containerCss: \"col-xxl-6 col-xl-6 col-md-6 col-12 mb-input\",\r\n      },\r\n    },\r\n    {\r\n      id: \"website\",\r\n      lable: \"Website \",\r\n      Field_Name: \"Website\",\r\n      fieldType: FormFieldTypes.INPUT,\r\n      dataField: \"website\",\r\n      fieldSetting: {\r\n        placeholder: \"https://www.xyz.com\",\r\n        allowSpace: false,\r\n        maxLength: 250,\r\n      },\r\n      validation: [{ type: \"require\" }, { type: \"website\" }],\r\n      style: {\r\n        containerCss: \"col-xxl-6 col-xl-6 col-md-6 col-12 mb-input\",\r\n      },\r\n    },\r\n\r\n    {\r\n      id: \"groupTypeId\",\r\n      lable: \"Group Type \",\r\n      Field_Name: \"Group Type\",\r\n      fieldType: FormFieldTypes.SELECT,\r\n      dataField: \"groupTypeId\",\r\n      fieldSetting: {\r\n        placeholder: \"Select Group Type\",\r\n        isEnableOnChange: true,\r\n      },\r\n      validation: [{ type: \"require\" }],\r\n      style: {\r\n        containerCss: \"col-xxl-3 col-xl-4 col-md-6 col-12 mb-input\",\r\n      },\r\n    },\r\n\r\n    {\r\n      id: \"countryId\",\r\n      lable: \"Country \",\r\n      Field_Name: \"Country\",\r\n      fieldType: FormFieldTypes.SELECT,\r\n      dataField: \"countryId\",\r\n      fieldSetting: {\r\n        placeholder: \"Select Country\",\r\n        isEnableOnChange: true,\r\n      },\r\n      validation: [{ type: \"require\" }],\r\n      style: {\r\n        containerCss: \"col-xxl-3 col-xl-4 col-md-6 col-12 mb-input\",\r\n      },\r\n    },\r\n    {\r\n      id: \"territoryId\",\r\n      lable: \"Territory \",\r\n      Field_Name: \"Territory\",\r\n      fieldType: FormFieldTypes.SELECT,\r\n      dataField: \"territoryId\",\r\n      fieldSetting: {\r\n        placeholder: \"Select Territory\",\r\n        isEnableOnChange: true,\r\n      },\r\n      validation: [{ type: \"require\" }],\r\n      style: {\r\n        containerCss: \"col-xxl-3 col-xl-4 col-md-4 col-12 mb-input\",\r\n      },\r\n    },\r\n    {\r\n      id: \"incotermId\",\r\n      lable: \"Incoterm\",\r\n      Field_Name: \"Incoterm\",\r\n      fieldType: FormFieldTypes.SELECT,\r\n      dataField: \"incotermId\",\r\n      fieldSetting: {\r\n        placeholder: \"Select Incoterm\",\r\n        isEnableOnChange: true,\r\n      },\r\n      validation: [{ type: \"require\" }],\r\n      style: {\r\n        containerCss: \"col-xxl-3 col-xl-4 col-md-4 col-12 mb-input\",\r\n      },\r\n    },\r\n    {\r\n      id: \"taxId\",\r\n      lable: \"Tax Id \",\r\n      Field_Name: \"Tax Id\",\r\n      fieldType: FormFieldTypes.INPUT,\r\n      dataField: \"taxId\",\r\n      fieldSetting: {\r\n        placeholder: \"Tax Id\",\r\n        allowSpace: false,\r\n        minLength: 10,\r\n        maxLength: 10,\r\n        exemptBoundarySpaces: true,\r\n      },\r\n      inputIcon: {\r\n        isIconShow: true,\r\n        faIcon: \"fa-info-circle\",\r\n        message: SuccessMessage.DefaultUSATaxId,\r\n      },\r\n      style: {\r\n        containerCss: \"col-xxl-3 col-xl-3 col-md-4 col-12 mb-input\",\r\n      },\r\n    },\r\n    {\r\n      id: \"responsibleUserId\",\r\n      lable: \"Responsible User \",\r\n      Field_Name: \"Responsible User\",\r\n      fieldType: FormFieldTypes.SELECT,\r\n      dataField: \"responsibleUserId\",\r\n      fieldSetting: {\r\n        placeholder: \"Select Responsible User\",\r\n        isEnableOnChange: true,\r\n        isDisabled: false,\r\n      },\r\n      style: {\r\n        containerCss: \"col-xxl-4 col-xl-4 col-md-4 col-12 mb-input\",\r\n      },\r\n    },\r\n    {\r\n      id: \"isBuyingForThirdParty\",\r\n      lable: \"Is Buying for Third Party\",\r\n      Field_Name: \"Is Buying for Third Party\",\r\n      fieldType: FormFieldTypes.CHECKBOX,\r\n      dataField: \"isBuyingForThirdParty\",\r\n      style: {\r\n        containerCss:\r\n          \"col-xxl-2 col-xl-2 col-md-3 col-12 pt-2 mb-input margin-top-checkbox mt-2\",\r\n      },\r\n    },\r\n    {\r\n      id: \"isSubCustomer\",\r\n      lable: \"Is Sub Customer\",\r\n      Field_Name: \"Is Sub Customer\",\r\n      fieldType: FormFieldTypes.CHECKBOX,\r\n      dataField: \"isSubCustomer\",\r\n      style: {\r\n        containerCss:\r\n          \"col-xxl-2 col-xl-2 col-md-3 col-12 md-pt-0 pt-2 mb-input margin-top-checkbox margin-left0-checkbox mt-2\",\r\n      },\r\n    },\r\n    {\r\n      id: \"note\",\r\n      lable: \"Notes \",\r\n      Field_Name: \"Notes\",\r\n      fieldType: FormFieldTypes.CKEDITOR,\r\n      dataField: \"note\",\r\n      fieldSetting: {\r\n        placeholder: \"Enter Notes\",\r\n        maxLength: 1000,\r\n      },\r\n      // validation: [{ type: \"require\" }],\r\n      style: {\r\n        containerCss: \"col-xxl-5 col-xl-5 col-md-12 col-12 mb-input mb-0\",\r\n      },\r\n    },\r\n  ],\r\n  formSetting: {\r\n    isViewOnly: false,\r\n  },\r\n};\r\n\r\nexport const basicInfoData = {\r\n  columns: [\r\n    {\r\n      name: \"Name\",\r\n      fieldName: \"name\",\r\n      width: \"15%\",\r\n      // allowShort: true,\r\n    },\r\n    {\r\n      name: \"Tax Id\",\r\n      fieldName: \"taxId\",\r\n      width: \"15%\",\r\n      // allowShort: true,\r\n    },\r\n    {\r\n      name: \"Country\",\r\n      fieldName: \"countryName\",\r\n      width: \"15%\",\r\n      // allowShort: true,\r\n    },\r\n\r\n    {\r\n      name: \"Email\",\r\n      fieldName: \"emailAddress\",\r\n      width: \"15%\",\r\n      // allowShort: true,\r\n    },\r\n    {\r\n      name: \"Group Type\",\r\n      fieldName: \"groupType\",\r\n      width: \"15%\",\r\n      // allowShort: true,\r\n    },\r\n    {\r\n      name: \"Status\",\r\n      fieldName: \"status\",\r\n      allowShort: false,\r\n      colType: GridColumnType.LABLE,\r\n      width: \"15%\",\r\n      colSettings: {\r\n        valueField: \"status\",\r\n        getLableClass: getLabelClass,\r\n      },\r\n    },\r\n    {\r\n      name: \"Action\",\r\n      width: \"10%\",\r\n      colType: GridColumnType.ACTION,\r\n      defaultAction: {\r\n        allowEdit: true,\r\n        allowDisable: false,\r\n      },\r\n    },\r\n  ],\r\n};\r\n","import { SuccessMessage } from \"../../../../../data/appMessages\";\r\n\r\nexport const getTaxIdMinMaxLength = (countryId, formFields, formFieldsId) => {\r\n    let minLength, maxLength, message, formField;\r\n\r\n    switch (countryId) {\r\n        case 1:\r\n            minLength = 3;\r\n            maxLength = 10;\r\n            break;\r\n        case 2:\r\n            minLength = 10;\r\n            maxLength = 15;\r\n            break;\r\n        case 82: //** GE\r\n            minLength = 11;\r\n            maxLength = 11;\r\n            break;\r\n        case 233: //** US\r\n            minLength = 10;\r\n            maxLength = 10;\r\n            break;\r\n        default:\r\n            minLength = 0;\r\n            maxLength = 20;\r\n            break;\r\n    }\r\n\r\n    if (minLength !== undefined && maxLength !== undefined) {\r\n        message = SuccessMessage.TaxId.replace(\"{0}\", minLength).replace(\"{1}\", maxLength);\r\n        formField = formFields.find((data) => data.id === formFieldsId);\r\n        if (formField) {\r\n            // const validation = formField.validation;\r\n            formField.fieldSetting.minLength = minLength;\r\n            formField.fieldSetting.maxLength = maxLength;\r\n            formField.inputIcon.message = SuccessMessage.TaxId.replace(\"{0}\", minLength).replace(\"{1}\", maxLength);\r\n            // validation.minLength = minLength;\r\n            // validation.maxLength = maxLength;\r\n        }\r\n    }\r\n    return { message, maxLength, minLength, formFields };\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useRef, useState, useEffect, useImperativeHandle, useContext } from \"react\";\r\n//** Libs's */\r\nimport { securityKey } from \"../../../../data/SecurityKey\";\r\nimport Buttons from \"../../../../components/ui/button/Buttons\";\r\nimport { FieldSettingType } from \"../../../../utils/Enums/commonEnums\";\r\nimport FormCreator from \"../../../../components/Forms/FormCreator\";\r\nimport { onResetForm } from \"../../../../utils/FormFields/ResetForm/handleResetForm\";\r\nimport { removeFormFields } from \"../../../../utils/FormFields/RemoveFields/handleRemoveFields\";\r\nimport { hasFunctionalPermission } from \"../../../../utils/AuthorizeNavigation/authorizeNavigation\";\r\nimport { setFieldSetting, setDropDownOptionField } from \"../../../../utils/FormFields/FieldsSetting/SetFieldSetting\";\r\n//** Context API */\r\nimport AddSupplierContext from \"../../../../utils/ContextAPIs/Supplier/AddSupplierContext\";\r\n//** Service's */\r\nimport ToastService from \"../../../../services/toastService/ToastService\";\r\nimport { useLazyGetAllIncotermQuery, useLazyGetAllUserQuery } from \"../../../../app/services/commonAPI\";\r\nimport { useLazyGetAllCountriesQuery, useLazyGetAllGroupTypesQuery, useLazyGetAllTerritoriesQuery } from \"../../../../app/services/basicdetailAPI\";\r\nimport {\r\n    useAddEditSupplierBasicInformationMutation, useCheckSupplierNameExistMutation, useGetSearchSuppliersDetailsByNameEmailWebsiteMutation,\r\n    useLazyGetAllSupplierTypeQuery, useLazyGetSupplierBasicInformationByIdQuery,\r\n    useLazyGetSupplierDetailsBySupplierNameQuery\r\n} from \"../../../../app/services/supplierAPI\";\r\nimport DataLoader from \"../../../../components/ui/dataLoader/DataLoader\";\r\nimport { supplierBasicData } from \"./config/SupplierBasicDetail.data\";\r\nimport { excludingRoles } from \"../../../customerDetail/feature/customerBasicDetail/config/CustomerBasicDetail.data\";\r\nimport { getTaxIdMinMaxLength } from \"../../../customerDetail/feature/customerBasicDetail/config/TaxIdValidator\";\r\nimport PropTypes from 'prop-types';\r\nimport { validateResponsibleUserId } from \"../../../../utils/ResponsibleUser/validateRUser\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { validateNameEmailWebsiteGrid } from \"../../../../common/features/component/ExistingInfo/Config/Existing.data\";\r\nimport ValidateCustomerSupplierInfo from \"../../../../common/features/component/ExistingInfo/ValidateCustomerSupplierInfo\";\r\nimport { isCustomerOrSupplierApprovedStatus } from \"../../../../utils/CustomerSupplier/CustomerSupplierUtils\";\r\n\r\n//** Compoent's */\r\nconst ExistingCustomerSupplierInfo = React.lazy(() => import(\"../../../../common/features/component/ExistingInfo/ExistingCustomerSupplierInfo\"));\r\n\r\nconst AddEditSupplierBasicDetail = ({ keyId, getSupplierById, isOpen, onSidebarClose, isEditablePage }) => {\r\n\r\n    //** State */\r\n    const parentRef = useRef();\r\n    const basicDetailRef = useRef();\r\n    const authState = useSelector((state) => state.auth);\r\n    const [noteId, setNoteId] = useState(0);\r\n    const { formSetting } = supplierBasicData;\r\n    const [supplierName, setSupplierName] = useState('');\r\n    const [formData, setFormData] = useState(supplierBasicData);\r\n    const [isResponsibleUser, setIsResponsibleUser] = useState(false);\r\n    const [isButtonDisable, setIsButtonDisable] = useState(false);\r\n    // const { ValidateRequestByApprovalRules } = useValidateAndAddApprovalRequests();\r\n    const [isRemoveFields, setIsRemoveFields] = useState(false);\r\n    const { nextStepRef, setSupplierId, moveNextPage, supplierId } = useContext(AddSupplierContext);\r\n\r\n    const [validateCustomerSupplierInfoModal, setValidateCustomerSupplierInfoModal] = useState(false);\r\n    const [validateCustomerSupplierData, setValidateCustomerSupplierData] = useState([]);\r\n\r\n    //** API Call's */\r\n    const [getAllUser, { isSuccess: isGetAllUserSucess, data: allGetAllUserData, }] = useLazyGetAllUserQuery();\r\n    const [getAllCountries, { isSuccess: isGetAllCountriesSucess, data: allGetAllCountriesData, }] = useLazyGetAllCountriesQuery();\r\n    const [getAllGroupTypes, { isSuccess: isGetAllGroupTypesSucess, data: allGetAllGroupTypesData, }] = useLazyGetAllGroupTypesQuery();\r\n    const [getAllTerritories, { isSuccess: isGetAllTerritoriesSucess, data: allGetAllTerritoriesData }] = useLazyGetAllTerritoriesQuery();\r\n    const [getAllSupplierType, { isSuccess: isGetAllSupplierTypeSucess, data: allGetAllSupplierTypeData }] = useLazyGetAllSupplierTypeQuery();\r\n    const [CheckSupplierNameExist, { isSuccess: isSupplierNameExistSucess, data: isSupplierNameExistData, }] = useCheckSupplierNameExistMutation();\r\n    const [getSupplierBasicInformationById, { isFetching: isGetSupplierBasicInformationByIdFetching, isSuccess: isGetSupplierBasicInformationById,\r\n        data: GetSupplierBasicInformationByIdData }] = useLazyGetSupplierBasicInformationByIdQuery();\r\n    const [addEditSupplierBasicInformation, { isLoading: isAddEditSupplierBasicInformationLoading, isSuccess: isAddEditSupplierBasicInformationSuccess,\r\n        data: isAddEditSupplierBasicInformationData }] = useAddEditSupplierBasicInformationMutation();\r\n    const [getAllIncoterm, { isSuccess: isGetAllIncotermSucess, data: allGetAllIncotermData }] = useLazyGetAllIncotermQuery();\r\n    const [validateSupplierNameEmailWebsite, { isSuccess: isValidateSupplierNameEmailWebsiteSucess, data: isValidateSupplierNameEmailWebsiteData, isLoading }]\r\n        = useGetSearchSuppliersDetailsByNameEmailWebsiteMutation();\r\n\r\n    //** Security Key */\r\n    const hasEditPermission = hasFunctionalPermission(securityKey.EDITBASICSUPPLIERDETAILS);\r\n\r\n    //** UseEffect's */\r\n    useEffect(() => {\r\n        if (isEditablePage) {\r\n            if (!isResponsibleUser) {\r\n                if (hasEditPermission.isViewOnly === true) {\r\n                    formSetting.isViewOnly = true;\r\n                    setIsButtonDisable(true);\r\n                    setFieldSetting(formData, 'responsibleUserId', FieldSettingType.DISABLED, true);\r\n                }\r\n                else if (hasEditPermission.isEditable === true) {\r\n                    formSetting.isViewOnly = false;\r\n                    setIsButtonDisable(false);\r\n                    setFieldSetting(formData, 'responsibleUserId', FieldSettingType.DISABLED, false);\r\n                }\r\n                else {\r\n                    formSetting.isViewOnly = true;\r\n                    setIsButtonDisable(true);\r\n                    setFieldSetting(formData, 'responsibleUserId', FieldSettingType.DISABLED, false);\r\n                }\r\n            }\r\n            if (isResponsibleUser) {\r\n                formSetting.isViewOnly = false;\r\n                setIsButtonDisable(false);\r\n                setFieldSetting(formData, 'responsibleUserId', FieldSettingType.DISABLED, true);\r\n            }\r\n        } else {\r\n            formSetting.isViewOnly = false;\r\n        }\r\n        if (isOpen) {\r\n            // setFieldSetting(supplierBasicData, 'name', FieldSettingType.INPUTBUTTON);\r\n            setFieldSetting(supplierBasicData, 'name', FieldSettingType.ISINFOBUTTONVISIBLE);\r\n        } else if (!isOpen) {\r\n            // setFieldSetting(supplierBasicData, 'name', FieldSettingType.INPUTBUTTON, true);\r\n            setFieldSetting(supplierBasicData, 'name', FieldSettingType.ISINFOBUTTONVISIBLE, true);\r\n        }\r\n\r\n    }, [isOpen, isEditablePage, hasEditPermission, formSetting, formData, isResponsibleUser])\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            await Promise.all([\r\n                getAllUser(),\r\n                getAllCountries(),\r\n                getAllGroupTypes(),\r\n                getAllTerritories(),\r\n                getAllSupplierType(),\r\n                getAllIncoterm(),\r\n            ]);\r\n\r\n            if (!isOpen) {\r\n                const modifyFormFields = removeFormFields(formData, ['responsibleUserId']);\r\n                setFormData(modifyFormFields);\r\n                setIsRemoveFields(true);\r\n                // setFieldSetting(formData, 'name', FieldSettingType.INPUTBUTTON, true);\r\n                // setFieldSetting(formData, 'name', FieldSettingType.ISPRIMARYBUTTONVISIBLE, true);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, [keyId, isOpen]);\r\n\r\n    useEffect(() => {\r\n        if (isValidateSupplierNameEmailWebsiteSucess && isValidateSupplierNameEmailWebsiteData) {\r\n            if (isValidateSupplierNameEmailWebsiteData && isValidateSupplierNameEmailWebsiteData.length > 0 && !supplierId > 0) {\r\n                setValidateCustomerSupplierData(isValidateSupplierNameEmailWebsiteData);\r\n                setValidateCustomerSupplierInfoModal(true);\r\n            } else {\r\n                setValidateCustomerSupplierInfoModal(false);\r\n                addSupplierCountine();\r\n            }\r\n        }\r\n    }, [isValidateSupplierNameEmailWebsiteSucess, isValidateSupplierNameEmailWebsiteData]);\r\n\r\n    useEffect(() => {\r\n        if (isOpen) {\r\n            if (supplierId > 0) {\r\n                getSupplierBasicInformationById(supplierId);\r\n                // setFieldSetting(formData, 'name', FieldSettingType.INPUTBUTTON);\r\n            }\r\n        }\r\n    }, [isOpen, supplierId, getSupplierBasicInformationById])\r\n\r\n    useEffect(() => {\r\n        if (isGetAllGroupTypesSucess && allGetAllGroupTypesData) {\r\n            setDropDownOptionField(allGetAllGroupTypesData, 'groupTypeId', 'type', supplierBasicData, 'groupTypeId');\r\n        }\r\n        if (isGetAllUserSucess && allGetAllUserData) {\r\n            const filterData = allGetAllUserData.filter((item) => {\r\n                return (item.roleName === null || !excludingRoles.map((role) => role.toLowerCase()).includes(item.roleName.toLowerCase()));\r\n            });\r\n            // Remove duplicates based on fullName\r\n            const uniqueData = Array.from(new Map(filterData.map((item) => [item.fullName, item])).values());\r\n            setDropDownOptionField(uniqueData, 'userId', 'fullName', supplierBasicData, 'responsibleUserId');\r\n        }\r\n        if (isGetAllCountriesSucess && allGetAllCountriesData) {\r\n            setDropDownOptionField(allGetAllCountriesData, 'countryId', 'name', supplierBasicData, 'countryId');\r\n        }\r\n        if (isGetAllTerritoriesSucess && allGetAllTerritoriesData) {\r\n            setDropDownOptionField(allGetAllTerritoriesData, 'territoryId', 'territory', supplierBasicData, 'territoryId');\r\n        }\r\n        if (isGetAllSupplierTypeSucess && allGetAllSupplierTypeData) {\r\n            setDropDownOptionField(allGetAllSupplierTypeData, 'supplierTypeId', 'type', supplierBasicData, 'supplierTypeId');\r\n        }\r\n        if (isGetAllIncotermSucess && allGetAllIncotermData) {\r\n            setDropDownOptionField(allGetAllIncotermData, 'incotermId', 'incotermName', supplierBasicData, 'incotermId');\r\n        }\r\n    }, [isGetAllGroupTypesSucess, allGetAllGroupTypesData, isGetAllUserSucess, allGetAllUserData, isGetAllCountriesSucess, allGetAllCountriesData,\r\n        isGetAllTerritoriesSucess, allGetAllTerritoriesData, isGetAllSupplierTypeSucess, allGetAllSupplierTypeData, isGetAllIncotermSucess, allGetAllIncotermData]);\r\n\r\n    useEffect(() => {\r\n        if (isGetSupplierBasicInformationById && GetSupplierBasicInformationByIdData && !isGetSupplierBasicInformationByIdFetching) {\r\n            if (isCustomerOrSupplierApprovedStatus(GetSupplierBasicInformationByIdData.statusId)) {\r\n                setFieldSetting(supplierBasicData, 'name', FieldSettingType.DISABLED, true);\r\n                setFieldSetting(formData, 'taxId', 'isDisabled', true);\r\n            } else {\r\n                setFieldSetting(supplierBasicData, 'name', FieldSettingType.DISABLED, false);\r\n                setFieldSetting(formData, 'taxId', 'isDisabled');\r\n            }\r\n            const newFrom = { ...supplierBasicData };\r\n            const { formFields } = getTaxIdMinMaxLength(GetSupplierBasicInformationByIdData.countryId, supplierBasicData.formFields, 'taxId');\r\n            newFrom.formFields = formFields;\r\n            newFrom.initialState = { ...GetSupplierBasicInformationByIdData };\r\n            newFrom.formFields = supplierBasicData.formFields.filter(field => field.dataField !== \"note\");\r\n            newFrom.formFields = newFrom.formFields.filter((field) => field.dataField !== 'attachment' && field.dataField !== '');\r\n            setFormData(newFrom);\r\n            setIsResponsibleUser(validateResponsibleUserId(GetSupplierBasicInformationByIdData.responsibleUserId, authState?.user?.userID));\r\n\r\n        }\r\n    }, [isGetSupplierBasicInformationById, GetSupplierBasicInformationByIdData, isGetSupplierBasicInformationByIdFetching]);\r\n\r\n    useEffect(() => {\r\n        if (isAddEditSupplierBasicInformationSuccess && isAddEditSupplierBasicInformationData) {\r\n            const { errorMessage, noteId, keyValue } = isAddEditSupplierBasicInformationData;\r\n            if (errorMessage.includes('exists')) {\r\n                ToastService.warning(errorMessage);\r\n                return;\r\n            }\r\n            setNoteId(noteId)\r\n            if (keyId > 0) {\r\n                getSupplierById();\r\n                ToastService.success(errorMessage);\r\n                onResetForm(supplierBasicData, setFormData);\r\n                onSidebarClose();\r\n            } else {\r\n                setSupplierId(keyValue)\r\n                ToastService.success(errorMessage);\r\n                moveNextPage();\r\n            }\r\n        }\r\n    }, [isAddEditSupplierBasicInformationSuccess, isAddEditSupplierBasicInformationData]);\r\n\r\n    useEffect(() => {\r\n        if (isSupplierNameExistSucess && isSupplierNameExistData) {\r\n            const { errorMessage } = isSupplierNameExistData;\r\n            if (errorMessage.includes('exists')) {\r\n                ToastService.warning(errorMessage);\r\n                return;\r\n            }\r\n            ToastService.info(errorMessage);\r\n        }\r\n    }, [isSupplierNameExistSucess, isSupplierNameExistData]);\r\n\r\n    //** Handle Function's */\r\n    const handleAddEditSupplier = async () => {\r\n        let data = basicDetailRef.current.getFormData();\r\n        if (!data) {\r\n            ToastService.warning('Please fill up all the required fields');\r\n            return;\r\n        }\r\n        if (!isOpen) {\r\n            let req = {\r\n                supplierName: data?.name,\r\n                website: data?.website,\r\n                emailAddress: data?.emailAddress\r\n            }\r\n            await validateSupplierNameEmailWebsite(req).unwrap();\r\n        } else {\r\n            addSupplierCountine();\r\n        }\r\n    };\r\n\r\n    const addSupplierCountine = () => {\r\n        let data = basicDetailRef.current.getFormData();\r\n        const getIdValue = (field) => {\r\n            return field && typeof field === \"object\" ? field.value : field;\r\n        }\r\n        const req = {\r\n            ...data,\r\n            groupTypeId: getIdValue(data.groupTypeId),\r\n            supplierTypeId: getIdValue(data.supplierTypeId),\r\n            territoryId: getIdValue(data.territoryId),\r\n            incotermId: getIdValue(data.incotermId),\r\n            countryId: getIdValue(data.countryId),\r\n            responsibleUserId: getIdValue(data.responsibleUserId) || 0,\r\n            supplierId: keyId || supplierId,\r\n            supplierNoteId: noteId || 0,\r\n            attachmentName: data.attachment ? data.attachment?.fileName : null,\r\n            base64File: data.attachment ? data.attachment?.base64Data : null,\r\n            storagePath: 'SupplierProfilePic'\r\n        };\r\n        if (!data.taxId) {\r\n            addEditSupplierBasicInformation(req);\r\n            return;\r\n        }\r\n        const { message: validateTaxIdMessage, minLength, maxLength } = getTaxIdMinMaxLength(req.countryId || 0, supplierBasicData.formFields, 'taxId');\r\n        if (data.taxId.length >= minLength || data.taxId.length <= maxLength) {\r\n            addEditSupplierBasicInformation(req);\r\n        } else {\r\n            ToastService.warning(validateTaxIdMessage);\r\n        }\r\n    }\r\n\r\n    const handleInputGroupButton = () => {\r\n        if (supplierName.trim() !== '') {\r\n            CheckSupplierNameExist({ name: supplierName.trim() });\r\n        }\r\n    };\r\n\r\n    const handleValidateTextId = (data, dataField) => {\r\n        if (dataField === 'countryId') {\r\n            const { formFields } = getTaxIdMinMaxLength(data.value, supplierBasicData.formFields, 'taxId');\r\n            const updatedForm = { ...formData };\r\n            updatedForm.formFields = formFields;\r\n            if (isOpen) {\r\n                updatedForm.formFields = supplierBasicData.formFields.filter(field => field.dataField !== \"note\" && field.dataField !== \"responsibleUserId\");\r\n            } else {\r\n                updatedForm.formFields = supplierBasicData.formFields.filter(field => field.dataField !== \"responsibleUserId\");\r\n            }\r\n            setFormData(updatedForm);\r\n        }\r\n    }\r\n\r\n    const handleInputFields = (data, dataField) => {\r\n        if (dataField === 'name') {\r\n            const newName = data.replace(/[.,]/g, '')\r\n            const trimName = newName.replace(/\\s+/g, ' ').trim();\r\n\r\n            setSupplierName(trimName);\r\n            basicDetailRef.current.updateFormFieldValue({\r\n                name: newName\r\n            });\r\n        }\r\n        if (dataField === 'website') {\r\n            const trimmedUrl = data.replace(/\\/$/, \"\");\r\n            const newUrl = trimmedUrl.replace(/^(https?:\\/\\/)?www\\./, '$1');\r\n            basicDetailRef.current.updateFormFieldValue({\r\n                website: newUrl\r\n            });\r\n        }\r\n    };\r\n\r\n    //** Use Imperative Handle */\r\n    useImperativeHandle(nextStepRef, () => ({\r\n        handleAddEditSupplier\r\n    }));\r\n\r\n    //** Form Handler */\r\n    const formInputHandler = {\r\n        INPUT_CHANGED: handleInputFields\r\n    }\r\n    const formActionHandler = {\r\n        DDL_CHANGED: handleValidateTextId\r\n    };\r\n\r\n\r\n    const handleExistingInfo = () => {\r\n        if (!supplierName || typeof supplierName !== 'string') {\r\n            ToastService.warning('Supplier name is invalid.');\r\n            return;\r\n        }\r\n        // const trimmedName = supplierName.trim();\r\n\r\n        if (supplierName.length < 3) {\r\n            ToastService.warning('Please enter at least three characters.');\r\n            return;\r\n        }\r\n\r\n        if (parentRef.current) {\r\n            parentRef.current.callChildFunction(supplierName);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"row basic-info-step\">\r\n                {!isGetSupplierBasicInformationByIdFetching && isRemoveFields ?\r\n                    <FormCreator\r\n                        config={formData}\r\n                        ref={basicDetailRef}\r\n                        {...formData}\r\n                        onActionChange={formActionHandler}\r\n                        onInputChange={formInputHandler}\r\n                        handleInputGroupButton={handleInputGroupButton}\r\n                        handleInputShowInfo={handleExistingInfo}\r\n                    />\r\n                    : <DataLoader />\r\n                }\r\n            </div>\r\n\r\n            {isOpen &&\r\n                <div className=\"col-md-12\">\r\n                    <div className=\"d-flex align-item-end justify-content-end\">\r\n                        <Buttons\r\n                            buttonTypeClassName=\"theme-button\"\r\n                            buttonText=\"Update\"\r\n                            onClick={handleAddEditSupplier}\r\n                            isLoading={isAddEditSupplierBasicInformationLoading}\r\n                            isDisable={isButtonDisable}\r\n                        />\r\n                        <Buttons\r\n                            buttonTypeClassName=\"dark-btn ml-5\"\r\n                            buttonText=\"Cancel\"\r\n                            onClick={onSidebarClose}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            }\r\n            {!isOpen &&\r\n                <ExistingCustomerSupplierInfo parentRef={parentRef} isOrderManage={false} isSupplier={true} getExistingInfoByName={useLazyGetSupplierDetailsBySupplierNameQuery} />\r\n            }\r\n            {validateCustomerSupplierInfoModal && isValidateSupplierNameEmailWebsiteSucess ?\r\n                <ValidateCustomerSupplierInfo\r\n                    isSupplier={true}\r\n                    isModalOpen={validateCustomerSupplierInfoModal}\r\n                    gridCnfiguration={validateNameEmailWebsiteGrid}\r\n                    gridData={validateCustomerSupplierData}\r\n                    isGridLoading={isLoading}\r\n                    onAdd={addSupplierCountine}\r\n                />\r\n                : null}\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nAddEditSupplierBasicDetail.propTypes = {\r\n    keyId: PropTypes.number,\r\n    getSupplierById: PropTypes.func,\r\n    isOpen: PropTypes.bool,\r\n    onSidebarClose: PropTypes.func,\r\n    isEditablePage: PropTypes.bool\r\n};\r\nexport default AddEditSupplierBasicDetail;","import { SuccessMessage } from \"../../../../../data/appMessages\";\r\nimport { FormFieldTypes } from \"../../../../../data/formFieldType\";\r\n\r\n// export const securityKeys = {\r\n//   ADD: securityKey.ADDCUSTOMER,\r\n//   EDIT: securityKey.EDITCUSTOMER,\r\n//   // DELETE: securityKey.DELETECUSTOMER\r\n//   // BLOCK: securityKey.BLOCKCUSTOMER\r\n//   // FREEZE: securityKey.FREEZECUSTOMER\r\n//   // UNFREEZE: securityKey.DISABLECUSTOMER\r\n//   // UNBLOCK: securityKey.DISABLECUSTOMER\r\n//   // ACTIVE: securityKey.ACTIVECUSTOMER\r\n// };\r\n\r\nexport const excludingRoles = ['Admin', 'manager'];\r\nexport const supplierBasicData = {\r\n  initialState: { name: \"\", groupTypeId: \"\", supplierTypeId: \"\", countryId: 233, territoryId: 2, emailAddress: \"\", website: \"\", note: \"\", taxId: \"\", dbaName: \"\", responsibleUserId: \"\", supplierNoteId: \"\", incotermId: 11 },\r\n  formFields: [\r\n    \r\n    {\r\n      id: \"attachment\",\r\n      lable: \"Supplier Logo\",\r\n      Field_Name: \"Attachment\",\r\n      fieldType: FormFieldTypes.IMAGE,\r\n      dataField: \"attachment\",\r\n      fieldSetting: {\r\n        placeholder: \"Upload Attachment\",\r\n        allowSpace: true,\r\n        isImageUpload: true,\r\n        isButtonVisible: true,\r\n        isCustomButtonVisible: false,\r\n        acceptedFiles: '.png , .jpg ',\r\n      },\r\n      style: {\r\n        containerCss: \"col-xxl-4 col-xl-4 col-md-4 col-4 col-4 mb-input mb-0 custom-file-upload-section customer-logo-sec\",\r\n      },\r\n    },\r\n    {\r\n      id: \"name\",\r\n      lable: \"Supplier Name \",\r\n      Field_Name: \"Supplier Name\",\r\n      fieldType: FormFieldTypes.INPUT,\r\n      dataField: \"name\",\r\n      fieldSetting: {\r\n        placeholder: \"Enter Supplier Name\",\r\n        allowSpace: true,\r\n        maxLength: 50,\r\n        exemptBoundarySpaces: true\r\n      },\r\n      validation: [{ type: \"require\" }, { type: \"uniqueName\" }],\r\n      style: {\r\n        containerCss: \"col-xxl-8 col-xl-8 col-md-8 col-12 mb-input\",\r\n      },\r\n      inputButtonGroupConfig: {\r\n        isPrimaryButtonVisible: false,\r\n        // primaryButtonText: 'Verify',\r\n        infoButtonConfig: {\r\n          isInfoButtonVisible: true,\r\n          infoButtonIcon: \"fa-search\",\r\n          infoButtonTooltip: \"Customer Information\"\r\n        }\r\n      }\r\n    },\r\n    {\r\n      id: \"dbaName\",\r\n      lable: \"Doing Business As Name \",\r\n      Field_Name: \"Doing Business As Name\",\r\n      fieldType: FormFieldTypes.INPUT,\r\n      dataField: \"dbaName\",\r\n      fieldSetting: {\r\n        placeholder: \"Doing Business As Name\",\r\n        allowSpace: true,\r\n        maxLength: 50,\r\n      },\r\n      // validation: [{ type: \"require\" }],\r\n      style: {\r\n        containerCss: \"col-xxl-6 col-xl-4 col-md-4 col-12 mb-input\",\r\n      },\r\n    },\r\n\r\n    {\r\n      id: \"taxId\",\r\n      lable: \"Tax Id \",\r\n      Field_Name: \"Tax Id\",\r\n      fieldType: FormFieldTypes.INPUT,\r\n      dataField: \"taxId\",\r\n      fieldSetting: {\r\n        placeholder: \"Tax Id\",\r\n        allowSpace: true,\r\n        minLength: 10,\r\n        maxLength: 10,\r\n      },\r\n      inputIcon: {\r\n        isIconShow: true,\r\n        faIcon: \"fa-info-circle\",\r\n        message: SuccessMessage.DefaultUSATaxId\r\n      },\r\n      style: {\r\n        containerCss: \"col-xxl-6 col-xl-4 col-md-4 col-12 mb-input\",\r\n      },\r\n    },\r\n    {\r\n      id: \"emailAddress\",\r\n      lable: \"Email \",\r\n      Field_Name: \"Email\",\r\n      fieldType: FormFieldTypes.INPUT,\r\n      dataField: \"emailAddress\",\r\n      fieldSetting: {\r\n        placeholder: \"Enter Email\",\r\n        allowSpace: false,\r\n        maxLength: 65,\r\n      },\r\n      validation: [{ type: \"require\" }, { type: \"email\" }],\r\n      style: {\r\n        containerCss: \"col-xxl-6 col-xl-6 col-md-6 col-12 mb-input\",\r\n      },\r\n    },\r\n    {\r\n      id: \"website\",\r\n      lable: \"Website \",\r\n      Field_Name: \"Website\",\r\n      fieldType: FormFieldTypes.INPUT,\r\n      dataField: \"website\",\r\n      fieldSetting: {\r\n        placeholder: \"https://www.xyz.com\",\r\n        allowSpace: false,\r\n        maxLength: 250,\r\n      },\r\n      validation: [{ type: \"require\" }, { type: \"website\" }],\r\n      style: {\r\n        containerCss: \"col-xxl-6 col-xl-6 col-md-6 col-12 mb-input\",\r\n      },\r\n    },\r\n\r\n    {\r\n      id: \"groupTypeId\",\r\n      lable: \"Group Type \",\r\n      Field_Name: \"Group Type\",\r\n      fieldType: FormFieldTypes.SELECT,\r\n      dataField: \"groupTypeId\",\r\n      fieldSetting: {\r\n        placeholder: \"Select Group Type\",\r\n        isEnableOnChange: true\r\n      },\r\n      validation: [{ type: \"require\" }],\r\n      style: {\r\n        containerCss: \"col-xxl-4 col-xl-4 col-md-4 col-12 mb-input\",\r\n      },\r\n    },\r\n    {\r\n      id: \"territoryId\",\r\n      lable: \"Territory \",\r\n      Field_Name: \"Territory\",\r\n      fieldType: FormFieldTypes.SELECT,\r\n      dataField: \"territoryId\",\r\n      fieldSetting: {\r\n        placeholder: \"Select Territory\",\r\n        isEnableOnChange: true\r\n      },\r\n      validation: [{ type: \"require\" }],\r\n      style: {\r\n        containerCss: \"col-xxl-4 col-xl-4 col-md-4 col-12 mb-input\",\r\n      },\r\n    },\r\n    {\r\n      id: \"countryId\",\r\n      lable: \"Country \",\r\n      Field_Name: \"Country\",\r\n      fieldType: FormFieldTypes.SELECT,\r\n      dataField: \"countryId\",\r\n      fieldSetting: {\r\n        placeholder: \"Select Country\",\r\n        isEnableOnChange: true\r\n      },\r\n      validation: [{ type: \"require\" }],\r\n      style: {\r\n        containerCss: \"col-xxl-4 col-xl-4 col-md-4 col-12 mb-input\",\r\n      },\r\n    },\r\n\r\n    {\r\n      id: \"supplierTypeId\",\r\n      lable: \"Supplier Type \",\r\n      Field_Name: \"Supplier Type\",\r\n      fieldType: FormFieldTypes.SELECT,\r\n      dataField: \"supplierTypeId\",\r\n      fieldSetting: {\r\n        placeholder: \"Select Supplier Type\",\r\n        isEnableOnChange: true\r\n      },\r\n      validation: [{ type: \"require\" }],\r\n      style: {\r\n        containerCss: \"col-xxl-6 col-xl-4 col-md-4 col-12 mb-input\",\r\n      },\r\n    },\r\n    {\r\n      id: \"incotermId\",\r\n      lable: \"Incoterm\",\r\n      Field_Name: \"Incoterm\",\r\n      fieldType: FormFieldTypes.SELECT,\r\n      dataField: \"incotermId\",\r\n      fieldSetting: {\r\n        placeholder: \"Select Incoterm\",\r\n        isEnableOnChange: true\r\n      },\r\n      validation: [{ type: \"require\" }],\r\n      style: {\r\n        containerCss: \"col-xxl-6 col-xl-4 col-md-4 col-12 mb-input\",\r\n      },\r\n    },\r\n    {\r\n      id: \"note\",\r\n      lable: \"Notes \",\r\n      Field_Name: \"Notes\",\r\n      fieldType: FormFieldTypes.CKEDITOR,\r\n      dataField: \"note\",\r\n      fieldSetting: {\r\n        placeholder: \"Enter Notes\",\r\n        maxLength: 1000,\r\n      },\r\n      style: {\r\n        containerCss: \"col-xxl-6 col-xl-6 col-md-12 col-12 mb-input mb-0\",\r\n      },\r\n    },\r\n    // {\r\n    //   id: \"responsibleUserId\",\r\n    //   lable: \"Responsible User \",\r\n    //   Field_Name: \"Responsible User \",\r\n    //   fieldType: FormFieldTypes.SELECT,\r\n    //   dataField: \"responsibleUserId\",\r\n    //   fieldSetting: {\r\n    //     placeholder: \"Select Responsible USer\",\r\n    //     allowSpace: true,\r\n    //   },\r\n    //   style: {\r\n    //     containerCss: \"col-xxl-6 col-xl-6 col-md-6 col-12 mb-input\",\r\n    //   },\r\n    // },\r\n  ],\r\n  formSetting: {\r\n    isViewOnly: false\r\n  }\r\n};\r\n","import { CustomerSupplierStatus } from \"../Enums/commonEnums\";\r\n\r\nexport const isCustomerOrSupplierApprovedStatus = (status) => {\r\n    // It's For Customer OR Supplier\r\n    return status === CustomerSupplierStatus.APPROVED;\r\n}","/**\r\n * Checks if a user ID is included in a comma-separated string of IDs.\r\n * @param {string} userIdsString - Comma-separated string of IDs.\r\n * @param {number} loginUserId - The login user ID to check for.\r\n * @returns {boolean} - Returns true if the login user ID is included in the string, otherwise false.\r\n */\r\nexport const validateResponsibleUserId = (userIdsString, loginUserId) => {\r\n    if (!userIdsString || !loginUserId) return false;\r\n\r\n    const idsArray = userIdsString.toString().split(',').map(id => id.trim());\r\n    const loginUserIdStr = loginUserId.toString();\r\n    return idsArray.includes(loginUserIdStr);\r\n}","export const getLabelClass = (value) => {\r\n    switch (value) {\r\n      case \"Active\":\r\n        return \"status-btn badge-gradient-success\";\r\n      case \"Open\":\r\n        return \"status-btn badge-gradient-info\";\r\n      case \"In Active\":\r\n        return \"status-btn badge-gradient-danger\";\r\n      case \"Pending\":\r\n        return \"status-btn badge-gradient-Pending\";\r\n      case \"In progress\":\r\n        return \"status-btn badge-gradient-theme\";\r\n      case \"Submitted\":\r\n        return \"status-btn badge-gradient-Submitted\";\r\n      case \"Approved\":\r\n        return \"status-btn badge-gradient-Approved\";\r\n      case \"Freeze\":\r\n        return \"status-btn badge-gradient-Frozen\";\r\n      case \"Block\":\r\n        return \"status-btn badge-gradient-Blocked\";\r\n      case \"Reject\":\r\n        return \"status-btn badge-gradient-reject\";\r\n      case \"Disable\":\r\n        return \"status-btn badge-gradient-disabled\";\r\n      default:\r\n        return \"status-btn badge-gradient-info\";\r\n    }\r\n  };"],"names":["basicInfoData","columns","name","fieldName","colType","GridColumnType","CUSTOM","colStyle","width","renderCustomCol","rowData","_jsx","_Fragment","children","matchPercentage","allowShort","LABLE","colSettings","valueField","getLableClass","getLabelClass","ACTION","defaultAction","allowEdit","allowDisable","OrderBasicInfoData","DATE","isUTC","format","textAlign","justifyContent","validateNameEmailWebsiteGrid","forwardRef","_ref","onAdd","isSupplier","onSidebarClose","isModalOpen","gridCnfiguration","gridData","isGridLoading","molGridRef","useRef","isOpen","setIsOpen","useState","actionHandler","EDIT","data","url","encryptUrlData","supplierId","customerId","window","open","SidebarModel","modalTitle","contentClass","onClose","sidebarClose","_jsxs","className","CardSection","FinalMolGrid","ref","configuration","dataSource","onActionChange","isLoading","Buttons","buttonTypeClassName","buttonText","onClick","onAddData","excludingRoles","customerbasicData","initialState","groupTypeId","countryId","territoryId","emailAddress","website","note","isSubCustomer","taxId","isBuyingForThirdParty","responsibleUserId","customerNoteId","incotermId","attachment","base64File","storagePath","formFields","id","lable","Field_Name","fieldType","FormFieldTypes","IMAGE","dataField","fieldSetting","placeholder","allowSpace","isImageUpload","isButtonVisible","isCustomButtonVisible","acceptedFiles","style","containerCss","INPUT","maxLength","exemptBoundarySpaces","validation","type","inputButtonGroupConfig","isPrimaryButtonVisible","infoButtonConfig","isInfoButtonVisible","infoButtonIcon","infoButtonTooltip","SELECT","isEnableOnChange","minLength","inputIcon","isIconShow","faIcon","message","SuccessMessage","DefaultUSATaxId","isDisabled","CHECKBOX","CKEDITOR","formSetting","isViewOnly","getTaxIdMinMaxLength","formFieldsId","formField","undefined","TaxId","replace","find","ExistingCustomerSupplierInfo","React","keyId","getSupplierById","isEditablePage","parentRef","basicDetailRef","authState","useSelector","state","auth","noteId","setNoteId","supplierBasicData","supplierName","setSupplierName","formData","setFormData","isResponsibleUser","setIsResponsibleUser","isButtonDisable","setIsButtonDisable","isRemoveFields","setIsRemoveFields","nextStepRef","setSupplierId","moveNextPage","useContext","AddSupplierContext","validateCustomerSupplierInfoModal","setValidateCustomerSupplierInfoModal","validateCustomerSupplierData","setValidateCustomerSupplierData","getAllUser","isSuccess","isGetAllUserSucess","allGetAllUserData","useLazyGetAllUserQuery","getAllCountries","isGetAllCountriesSucess","allGetAllCountriesData","useLazyGetAllCountriesQuery","getAllGroupTypes","isGetAllGroupTypesSucess","allGetAllGroupTypesData","useLazyGetAllGroupTypesQuery","getAllTerritories","isGetAllTerritoriesSucess","allGetAllTerritoriesData","useLazyGetAllTerritoriesQuery","getAllSupplierType","isGetAllSupplierTypeSucess","allGetAllSupplierTypeData","useLazyGetAllSupplierTypeQuery","CheckSupplierNameExist","isSupplierNameExistSucess","isSupplierNameExistData","useCheckSupplierNameExistMutation","getSupplierBasicInformationById","isFetching","isGetSupplierBasicInformationByIdFetching","isGetSupplierBasicInformationById","GetSupplierBasicInformationByIdData","useLazyGetSupplierBasicInformationByIdQuery","addEditSupplierBasicInformation","isAddEditSupplierBasicInformationLoading","isAddEditSupplierBasicInformationSuccess","isAddEditSupplierBasicInformationData","useAddEditSupplierBasicInformationMutation","getAllIncoterm","isGetAllIncotermSucess","allGetAllIncotermData","useLazyGetAllIncotermQuery","validateSupplierNameEmailWebsite","isValidateSupplierNameEmailWebsiteSucess","isValidateSupplierNameEmailWebsiteData","useGetSearchSuppliersDetailsByNameEmailWebsiteMutation","hasEditPermission","hasFunctionalPermission","securityKey","EDITBASICSUPPLIERDETAILS","useEffect","setFieldSetting","FieldSettingType","DISABLED","isEditable","ISINFOBUTTONVISIBLE","async","Promise","all","modifyFormFields","removeFormFields","fetchData","length","addSupplierCountine","setDropDownOptionField","filterData","filter","item","roleName","map","role","toLowerCase","includes","uniqueData","Array","from","Map","fullName","values","_authState$user","isCustomerOrSupplierApprovedStatus","statusId","newFrom","field","validateResponsibleUserId","user","userID","errorMessage","keyValue","ToastService","warning","success","onResetForm","info","handleAddEditSupplier","current","getFormData","req","unwrap","_data$attachment","_data$attachment2","getIdValue","value","supplierTypeId","supplierNoteId","attachmentName","fileName","base64Data","validateTaxIdMessage","useImperativeHandle","formInputHandler","INPUT_CHANGED","handleInputFields","newName","trimName","trim","updateFormFieldValue","newUrl","formActionHandler","DDL_CHANGED","handleValidateTextId","updatedForm","FormCreator","config","onInputChange","handleInputGroupButton","handleInputShowInfo","handleExistingInfo","callChildFunction","DataLoader","isDisable","isOrderManage","getExistingInfoByName","useLazyGetSupplierDetailsBySupplierNameQuery","ValidateCustomerSupplierInfo","dbaName","status","CustomerSupplierStatus","APPROVED","userIdsString","loginUserId","idsArray","toString","split","loginUserIdStr"],"sourceRoot":""}