{"version":3,"file":"static/js/9154.4b8fc989.chunk.js","mappings":"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","sources":["components/ui/centerModel/CenterModel.js","pages/order/feature/orderItemDetail/feature/ProductDetails/config/productList.data.js","pages/order/feature/orderItemDetail/feature/ProductDetails/ProductDetailsList.js","utils/Enums/APIEventEnums.js"],"sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./CenterModel.scss\";\r\nimport { Modal } from \"react-bootstrap\";\r\n\r\nconst CenterModel = ({ isApprovalValidate, showModal, handleToggleModal, children, ...props }) => {\r\n  return (\r\n    <Modal\r\n      className={`center-model-popup ${props.modelSizeClass}`}\r\n      show={showModal}\r\n      onHide={handleToggleModal}\r\n      keyboard={!isApprovalValidate}\r\n      backdrop={isApprovalValidate ? \"static\" : true}\r\n    >\r\n      <Modal.Header closeButton={!isApprovalValidate}>\r\n        <div className=\"model-title\">{props.modalTitle}</div>\r\n      </Modal.Header>\r\n      <Modal.Body>{children}</Modal.Body>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nCenterModel.propTypes = {\r\n  isApprovalValidate: PropTypes.bool,\r\n  showModal: PropTypes.bool.isRequired,\r\n  handleToggleModal: PropTypes.func.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n  modelSizeClass: PropTypes.string,\r\n  modalTitle: PropTypes.string\r\n};\r\nexport default CenterModel;\r\n","import { FormFieldTypes } from \"../../../../../../../data/formFieldType\";\r\nimport { GridColumnType } from \"../../../../../../../components/FinalMolGrid/libs/data/gridColumnType\";\r\n\r\nexport const productDetailsList = {\r\n  initialState: {\r\n    productSearch: \"\",\r\n    attachment: \"\",\r\n    base64File: \"\",\r\n    storagePath: \"\"\r\n  },\r\n\r\n  formFields: [\r\n    {\r\n      id: \"productSearch\",\r\n      lable: \"Product Search \",\r\n      Field_Name: \"Product Search \",\r\n      fieldType: FormFieldTypes.INPUT,\r\n      dataField: \"productSearch\",\r\n      fieldSetting: {\r\n        placeholder: \"Enter Product Search\",\r\n        allowSpace: true,\r\n        maxLength: 50,\r\n        exemptBoundarySpaces: true,\r\n      },\r\n      // validation: [{ type: \"require\" }, { type: \"uniqueName\" }],\r\n      style: {\r\n        containerCss: \"col-xxl-12 col-xl-12 col-md-12 col-12 mb-input relative\",\r\n      },\r\n      inputButtonGroupConfig: {\r\n        isPrimaryButtonVisible: true,\r\n        primaryButtonText: 'Search'\r\n      }\r\n    },\r\n    {\r\n      id: \"attachment\",\r\n      lable: \"Attachment \",\r\n      Field_Name: \"Attachment\",\r\n      fieldType: FormFieldTypes.FILE,\r\n      dataField: \"attachment\",\r\n      fieldSetting: {\r\n        placeholder: \"Upload Attachment\",\r\n        allowSpace: true,\r\n        isButtonVisible: false,\r\n        isCustomButtonVisible: true,\r\n        acceptedFiles: \".pdf , .doc , .docx \",\r\n      },\r\n      // validation: [{ type: \"require\" }],\r\n      style: {\r\n        containerCss:\r\n          \"col-xxl-12 col-xl-12 col-md-12 col-12 col-12 mb-input mb-0 custom-file-upload-section order-attachment\",\r\n      },\r\n    },\r\n  ],\r\n};\r\n\r\nexport const productListConfig = {\r\n  columns: [\r\n    {\r\n      name: \"select\",\r\n      colType: GridColumnType.RADIO,\r\n      allowShort: false,\r\n      colStyle: {\r\n        width: \"5%\",\r\n        textAlign: \"center\",\r\n      },\r\n    },\r\n    {\r\n      name: \"Product Name\",\r\n      fieldName: \"ProductName\",\r\n      colStyle: {\r\n        width: \"35%\",\r\n        textAlign: \"center\",\r\n      },\r\n    },\r\n    {\r\n      name: \"CatalogId\",\r\n      fieldName: \"CatalogId\",\r\n      colStyle: {\r\n        width: \"20%\",\r\n        textAlign: \"center\",\r\n      },\r\n    },\r\n    {\r\n      name: \"CASNumber\",\r\n      fieldName: \"CASNumber\",\r\n      colStyle: {\r\n        width: \"20%\",\r\n        textAlign: \"center\",\r\n      },\r\n    },\r\n    {\r\n      name: \"MDLNumber\",\r\n      fieldName: \"MDLNumber\",\r\n      colStyle: {\r\n        width: \"20%\",\r\n        textAlign: \"center\",\r\n      },\r\n    },\r\n  ],\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { useContext, useEffect, useRef, useState } from \"react\";\r\n//** Lib's */\r\nimport { ErrorMessage } from \"../../../../../../data/appMessages\";\r\nimport { EventName } from \"../../../../../../utils/Enums/APIEventEnums\";\r\nimport FormCreator from \"../../../../../../components/Forms/FormCreator\";\r\nimport CenterModel from \"../../../../../../components/ui/centerModel/CenterModel\";\r\nimport {\r\n  productDetailsList,\r\n  productListConfig,\r\n} from \"./config/productList.data\";\r\n//** Service's */\r\nimport ToastService from \"../../../../../../services/toastService/ToastService\";\r\nimport { useThirdPartyAPICallMutation } from \"../../../../../../app/services/thirdPartyAPI\";\r\nimport FinalMolGrid from \"../../../../../../components/FinalMolGrid/FinalMolGrid\";\r\nimport AddOrderContext from \"../../../../../../utils/Order/AddOrderContext\";\r\n\r\nconst ProductDetailsList = ({ onhandleProductDetailsListData, isDocumentData }) => {\r\n  // const ref = useRef();\r\n  const molGridRef = useRef();\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [productSearch, setProductSearch] = useState(\"\");\r\n  // const [selectedProduct, setSelectedProduct] = useState();\r\n  const [productDetailList, setProductDetailList] = useState([]);\r\n  const { setProductId, documentRef } = useContext(AddOrderContext);\r\n\r\n  const [\r\n    getThirdPartyApiResponse,\r\n    {\r\n      isLoading: isApiResponseLoading,\r\n      isSuccess: isApiResponseSucess,\r\n      data: isApiResponseData,\r\n    },\r\n  ] = useThirdPartyAPICallMutation();\r\n\r\n  useEffect(() => {\r\n    if (isApiResponseSucess && isApiResponseData) {\r\n      if (isApiResponseData.isSuccess) {\r\n        const responseData = JSON.parse(isApiResponseData.data);\r\n        let productDetail = responseData?.data;\r\n        setProductDetailList(productDetail);\r\n      } else if (!isApiResponseData.isSuccess) {\r\n        ToastService.warning(isApiResponseData.message);\r\n      } else {\r\n        ToastService.warning(ErrorMessage.DefaultMessage);\r\n      }\r\n    }\r\n  }, [isApiResponseSucess, isApiResponseData]);\r\n\r\n  const handleToggleCenterModal = () => {\r\n    setShowModal(!showModal);\r\n  };\r\n\r\n  const handleInputGroupButton = () => {\r\n    if (productSearch.trim() !== \"\") {\r\n      if (productSearch.length > 3) {\r\n        setShowModal(true);\r\n        let dynamicParameters = {\r\n          searchText: productSearch,\r\n        };\r\n        let request = {\r\n          eventName: EventName.AURUMPRODUCTSEARCH,\r\n          isDynamicParameter: true,\r\n          parameters: JSON.stringify(dynamicParameters),\r\n        };\r\n        getThirdPartyApiResponse(request);\r\n      } else {\r\n        ToastService.warning(ErrorMessage.SearchWarningMessage);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleInputFields = (data, dataField) => {\r\n    if (dataField === \"productSearch\") {\r\n      setProductSearch(data.trim());\r\n    }\r\n  };\r\n\r\n  const handleKeyPress = (event) => {\r\n    if (event.key === \"Enter\") {\r\n      event.preventDefault();\r\n      handleInputGroupButton();\r\n    }\r\n  };\r\n\r\n  const handleRowSelect = (rowIndex, rowData) => {\r\n    setProductId(rowIndex.ProductId)\r\n    setShowModal(false);\r\n  };\r\n\r\n  const handleColumnsChange = (fieldName, rowData, rowIndex) => {\r\n    let newGridData = [...productDetailList];\r\n    newGridData[rowIndex] = { ...productDetailList[rowIndex], ...rowData };\r\n    setProductDetailList(newGridData);\r\n  };\r\n\r\n  //** Form Handler */\r\n  const formInputHandler = {\r\n    INPUT_CHANGED: handleInputFields,\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   if (isDocumentData) {\r\n  //     const data = ref.current.getFormData();\r\n  //     if (data) {\r\n  //       let req = {\r\n  //         documentName: data.attachment.fileName,\r\n  //         base64File: data.attachment.base64Data,\r\n  //       }\r\n  //       onhandleProductDetailsListData(req)\r\n  //     }\r\n  //   }\r\n  // }, [isDocumentData])\r\n\r\n  // const onFormStateChange = (data) => {\r\n  //   if (data) {\r\n  //     let req = {\r\n  //       documentName: data.attachment.fileName,\r\n  //       base64File: data.attachment.base64Data,\r\n  //     }\r\n  //     onhandleProductDetailsListData(req)\r\n  //   }\r\n  // };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"col-xl-6 col-2xl-6 col-lg-12 col-12\">\r\n        <form onKeyPress={handleKeyPress}>\r\n          <FormCreator\r\n            config={productDetailsList}\r\n            ref={documentRef}\r\n            onInputChange={formInputHandler}\r\n            handleInputGroupButton={handleInputGroupButton}\r\n          />\r\n        </form>\r\n        <CenterModel\r\n          showModal={showModal}\r\n          handleToggleModal={handleToggleCenterModal}\r\n          modalTitle=\"Product Details\"\r\n          modelSizeClass=\"w-80\"\r\n        >\r\n\r\n          <div className=\"product-details-hight\">\r\n            <div className=\"radio-grid\">\r\n              <FinalMolGrid\r\n                ref={molGridRef}\r\n                dataSource={productDetailList}\r\n                configuration={productListConfig}\r\n                allowPagination={false}\r\n                isLoading={isApiResponseLoading}\r\n                onRowSelect={handleRowSelect}\r\n                onColumnChange={handleColumnsChange}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CenterModel>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductDetailsList;\r\n","export const EventName = {\r\n    AURUMPRODUCTSEARCH: \"Aurum Product Search\",\r\n    AURUMPRODUCTDETAILS: \"Aurum Product Details\",\r\n    AURUMPRODUCTPRICELIST: \"Aurum Product Price List\"\r\n}"],"names":["_ref","isApprovalValidate","showModal","handleToggleModal","children","props","_jsxs","Modal","className","modelSizeClass","show","onHide","keyboard","backdrop","_jsx","Header","closeButton","modalTitle","Body","productDetailsList","initialState","productSearch","attachment","base64File","storagePath","formFields","id","lable","Field_Name","fieldType","FormFieldTypes","INPUT","dataField","fieldSetting","placeholder","allowSpace","maxLength","exemptBoundarySpaces","style","containerCss","inputButtonGroupConfig","isPrimaryButtonVisible","primaryButtonText","FILE","isButtonVisible","isCustomButtonVisible","acceptedFiles","productListConfig","columns","name","colType","GridColumnType","RADIO","allowShort","colStyle","width","textAlign","fieldName","onhandleProductDetailsListData","isDocumentData","molGridRef","useRef","setShowModal","useState","setProductSearch","productDetailList","setProductDetailList","setProductId","documentRef","useContext","AddOrderContext","getThirdPartyApiResponse","isLoading","isApiResponseLoading","isSuccess","isApiResponseSucess","data","isApiResponseData","useThirdPartyAPICallMutation","useEffect","responseData","JSON","parse","productDetail","ToastService","warning","ErrorMessage","DefaultMessage","message","handleInputGroupButton","trim","length","dynamicParameters","searchText","request","eventName","EventName","AURUMPRODUCTSEARCH","isDynamicParameter","parameters","stringify","SearchWarningMessage","formInputHandler","INPUT_CHANGED","handleInputFields","_Fragment","onKeyPress","event","key","preventDefault","FormCreator","config","ref","onInputChange","CenterModel","handleToggleCenterModal","FinalMolGrid","dataSource","configuration","allowPagination","onRowSelect","handleRowSelect","rowIndex","rowData","ProductId","onColumnChange","handleColumnsChange","newGridData","AURUMPRODUCTDETAILS","AURUMPRODUCTPRICELIST"],"sourceRoot":""}