{"version":3,"file":"static/js/8829.febf4e74.chunk.js","mappings":"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","sources":["common/features/component/Document/Config/DocuementsData.js","components/ui/centerModel/CenterModel.js","pages/mytask/config/RejectReason.data.js","common/features/component/Base64FileView/Base64FileViewer.js","utils/CommonUtils/CommonUtilsMethods.js","pages/mytask/feature/TaskDetail.js","pages/mytask/MyTask.js","utils/Enums/ApprovalFunctionalities.js","utils/FirstSecLetter/FirstSecondLetter.js","utils/StatusColors/StatusColors.js","utils/TransformData/TransformAPIData.js"],"sourcesContent":["import { AppIcons } from \"../../../../../data/appIcons\";\r\nimport { FormFieldTypes } from \"../../../../../data/formFieldType\";\r\nimport { GridColumnType } from \"../../../../../data/gridColumnType\";\r\n\r\nexport const DocumentFormData = {\r\n  name: \"Document Form\",\r\n  initialState: {\r\n    name: \"\",\r\n    documentTypeId: \"\",\r\n    supplierId: \"\",\r\n    customerId: \"\",\r\n    attachment: \"\",\r\n    base64File: \"\",\r\n    storagePath: \"\"\r\n  },\r\n  formFields: [\r\n    {\r\n      id: \"documentTypeId\",\r\n      lable: \"Document Type \",\r\n      Field_Name: \"Document Type\",\r\n      fieldType: FormFieldTypes.SELECT,\r\n      fieldType: FormFieldTypes.EDITABLEDROPDOWN,\r\n      dataField: \"documentTypeId\",\r\n      fieldSetting: {\r\n        placeholder: \"Select Document Type\",\r\n        isEnableOnChange: true,\r\n        options: []\r\n      },\r\n      validation: [{ type: \"require\" }],\r\n      style: {\r\n        containerCss: \"col-xxl-6 col-xl-12 col-md-6 col-12 mb-input\",\r\n      },\r\n    },\r\n    {\r\n      id: \"name\",\r\n      lable: \"Document Name \",\r\n      Field_Name: \"Document Name\",\r\n      fieldType: FormFieldTypes.INPUT,\r\n      dataField: \"name\",\r\n      fieldSetting: {\r\n        placeholder: \"Enter Document Name\",\r\n        allowSpace: true,\r\n        maxLength: 50,\r\n        isDisable: true\r\n      },\r\n      validation: [{ type: \"require\" }],\r\n      style: {\r\n        containerCss: \"col-xxl-6 col-xl-12 col-md-6 col-12 mb-input\",\r\n      },\r\n    },\r\n    {\r\n      id: \"attachment\",\r\n      lable: \"Attachment \",\r\n      Field_Name: \"Attachment\",\r\n      fieldType: FormFieldTypes.FILE,\r\n      dataField: \"attachment\",\r\n      fieldSetting: {\r\n        placeholder: \"Upload Attachment\",\r\n        allowSpace: true,\r\n        isButtonVisible: false,\r\n        isCustomButtonVisible: true,\r\n        acceptedFiles: '.pdf , .docx ',\r\n      },\r\n      validation: [{ type: \"require\" }],\r\n      style: {\r\n        containerCss: \"col-xxl-12 col-xl-12 col-md-12 col-12 col-12 mb-input mb-0 custom-file-upload-section\",\r\n      },\r\n\r\n    },\r\n\r\n  ],\r\n};\r\n\r\n\r\n\r\nexport const DocumentGridConfig = {\r\n  columns: [\r\n    {\r\n      name: \"Document Type\",\r\n      fieldName: \"documentType\",\r\n      // allowShort: true,\r\n    },\r\n    {\r\n      name: \"Document Name\",\r\n      fieldName: \"documentName\",\r\n      // allowShort: true,\r\n    },\r\n\r\n    {\r\n      name: \"Action\",\r\n      colType: GridColumnType.ACTION,\r\n      defaultAction: {\r\n        allowEdit: true,\r\n        allowDelete: true,\r\n      },\r\n\r\n    },\r\n  ],\r\n};\r\n\r\n\r\nexport const DocumentTypes = [\r\n  { value: 1, label: \"Tax or Registration document\" },\r\n  { value: 2, label: \"Customer details form\" },\r\n  { value: 3, label: \"Our submitted forms\" }\r\n];\r\n\r\nexport const FileTypeIcons = [\r\n  {\r\n    type: 'pdf',\r\n    icon: AppIcons.PdfIcon\r\n  },\r\n  {\r\n    type: 'doc',\r\n    icon: AppIcons.DocIcon\r\n  },\r\n  {\r\n    type: 'docx',\r\n    icon: AppIcons.DocIcon\r\n  },\r\n  {\r\n    type: 'xlsx',\r\n    icon: AppIcons.XlsIcon\r\n  },\r\n  {\r\n    type: 'xls',\r\n    icon: AppIcons.XlsIcon\r\n  },\r\n  {\r\n    type: 'ppt',\r\n    icon: AppIcons.PptIcon\r\n  },\r\n  {\r\n    type: 'zip',\r\n    icon: AppIcons.ZipIcon\r\n  },\r\n  {\r\n    type: 'csv',\r\n    icon: AppIcons.CsvIcon\r\n  }\r\n]\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./CenterModel.scss\";\r\nimport { Modal } from \"react-bootstrap\";\r\n\r\nconst CenterModel = ({ isApprovalValidate, showModal, handleToggleModal, children, ...props }) => {\r\n  return (\r\n    <Modal\r\n      className={`center-model-popup ${props.modelSizeClass}`}\r\n      show={showModal}\r\n      onHide={handleToggleModal}\r\n      keyboard={!isApprovalValidate}\r\n      backdrop={isApprovalValidate ? \"static\" : true}\r\n    >\r\n      <Modal.Header closeButton={!isApprovalValidate}>\r\n        <div className=\"model-title\">{props.modalTitle}</div>\r\n      </Modal.Header>\r\n      <Modal.Body>{children}</Modal.Body>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nCenterModel.propTypes = {\r\n  isApprovalValidate: PropTypes.bool,\r\n  showModal: PropTypes.bool.isRequired,\r\n  handleToggleModal: PropTypes.func.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n  modelSizeClass: PropTypes.string,\r\n  modalTitle: PropTypes.string\r\n};\r\nexport default CenterModel;\r\n","import { FormFieldTypes } from \"../../../data/formFieldType\";\r\n\r\nexport const addResonData = {\r\n    // name: \"Shipping Form\",\r\n    initialState: {\r\n        rejectReason: \"\"\r\n    },\r\n    formFields: [\r\n        {\r\n            id: \"rejectReason\",\r\n            lable: \"Rejection Reason :\",\r\n            Field_Name: \"Rejection Reason \",\r\n            fieldType: FormFieldTypes.TEXTAREA,\r\n            dataField: \"rejectReason\",\r\n            fieldSetting: {\r\n                placeholder: \"please enter Rejection Reason\",\r\n                allowSpace: true,\r\n            },\r\n            validation: [{ type: \"require\" }],\r\n            style: {\r\n                containerCss: \"col-xxl-12 col-xl-12 col-md-12 mb-2\",\r\n            },\r\n        },\r\n    ],\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { forwardRef, useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport FileViewer from \"react-file-viewer\";\r\nimport SidebarModel from \"../../../../components/ui/sidebarModel/SidebarModel\";\r\nimport { useDownloadApprovalRequestDocumentMutation } from \"../../../../app/services/documentAPI\";\r\nimport Image from \"../../../../components/image/Image\";\r\nimport Iconify from \"../../../../components/ui/iconify/Iconify\";\r\nimport formatDate from \"../../../../lib/formatDate\";\r\nimport NoRecordFound from \"../../../../components/ui/noRecordFound/NoRecordFound\";\r\nimport DataLoader from \"../../../../components/ui/dataLoader/DataLoader\";\r\nimport { getFileTypeIcon } from \"../../../../utils/TransformData/TransformAPIData\";\r\n\r\nconst Base64FileViewer = forwardRef(({ isLoading, documentData }) => {\r\n  const [getFileType, setGetFileType] = useState();\r\n  const [documentList, setDocumentList] = useState([]);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [selectedDocument, setSelectedDocument] = useState(null);\r\n\r\n  const [\r\n    Downalod,\r\n    {\r\n      isFetching: isDownalodFetching,\r\n      isSuccess: isDownalodSucess,\r\n      data: isDownalodData,\r\n    },\r\n  ] = useDownloadApprovalRequestDocumentMutation();\r\n\r\n  useEffect(() => {\r\n    if (!isDownalodFetching && isDownalodSucess && isDownalodData) {\r\n      const fileData = isDownalodData.fileData;\r\n      const blob = new Blob([fileData], { type: fileData.type });\r\n      const fileURL = URL.createObjectURL(blob);\r\n      setSelectedDocument(fileURL);\r\n      setIsModalOpen(true);\r\n      setGetFileType(determineFileType(isDownalodData.fileName));\r\n    }\r\n  }, [isDownalodFetching, isDownalodSucess, isDownalodData]);\r\n\r\n  useEffect(() => {\r\n    if (documentData) {\r\n      let parsedData = JSON.parse(documentData);\r\n      const modifyData =\r\n        parsedData.DocumentInfoList &&\r\n        parsedData.DocumentInfoList.map((data) => ({\r\n          ...data,\r\n          DocumentIcon: getFileTypeIcon(data.Attachment),\r\n        }));\r\n      setDocumentList(modifyData);\r\n      // Detect file types\r\n      const detectedFileTypes = new Set();\r\n      parsedData.DocumentInfoList.forEach((item) => {\r\n        const fileType = determineFileType(item.Attachment);\r\n        if ([\"pdf\", \"csv\", \"docx\", \"xlsx\"].includes(fileType)) {\r\n          detectedFileTypes.add(fileType);\r\n        }\r\n      });\r\n      // setGetFileType(Array.from(detectedFileTypes));\r\n    }\r\n  }, [documentData]);\r\n\r\n  const handleDocumentAction = (base64Data, fileName) => {\r\n    const parts = base64Data.split(\",\");\r\n    let request = {\r\n      base64FileData: parts.length > 1 ? parts[1] : base64Data,\r\n      fileName: fileName,\r\n    };\r\n    Downalod(request);\r\n  };\r\n\r\n  const determineFileType = (fileName) => {\r\n    const extension = fileName?.split(\".\").pop().toLowerCase();\r\n    switch (extension) {\r\n      case \"pdf\":\r\n        return \"pdf\";\r\n      case \"docx\":\r\n        return \"docx\";\r\n      case \"ppt\":\r\n      case \"pptx\":\r\n        return \"pptx\";\r\n      case \"xlsx\":\r\n        return \"xlsx\";\r\n      case \"csv\":\r\n        return \"csv\";\r\n      case \"xls\":\r\n        return \"xls\";\r\n      case \"doc\":\r\n        return \"doc\";\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  const handleToggleModal = () => {\r\n    setIsModalOpen(false);\r\n    setSelectedDocument(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"document-list-sec\">\r\n      <div className=\"document-listing\">\r\n        <div className=\"row\">\r\n          {!isLoading ? (\r\n            documentList.length > 0 ? (\r\n              documentList.map((data) => (\r\n                <div\r\n                  className=\"col-xl-6 col-lg-6 col-md-4 col-6\"\r\n                  key={data.customerDocumentId}\r\n                >\r\n                  <div className=\"documents\">\r\n                    <div className=\"left-icons\">\r\n                      <Image\r\n                        imagePath={data.DocumentIcon}\r\n                        alt=\"Document Icon\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"right-desc\">\r\n                      <div className=\"doc-details\">\r\n                        <div className=\"document-typename\">{data.type}</div>\r\n                        <div className=\"document-name\">{data.Name}</div>\r\n                        <div className=\"document-type\">{data.Attachment}</div>\r\n                        <div className=\"document-type\">\r\n                          {formatDate(data.createdAt, \"MM/DD/YYYY hh:mm A\")}\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"document-action\">\r\n                        {[\"pdf\", \"csv\", \"docx\", \"xlsx\"].includes(\r\n                          determineFileType(data.Attachment)\r\n                        ) && (\r\n                          <span\r\n                            className=\"action-icon\"\r\n                            onClick={() =>\r\n                              handleDocumentAction(data.Base64File, data.Name)\r\n                            }\r\n                          >\r\n                            <Iconify icon=\"lets-icons:view-light\" />\r\n                          </span>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))\r\n            ) : (\r\n              <NoRecordFound />\r\n            )\r\n          ) : (\r\n            <DataLoader />\r\n          )}\r\n        </div>\r\n      </div>\r\n      <SidebarModel\r\n        isOpen={isModalOpen}\r\n        contentClass=\"content-65\"\r\n        modalTitle=\"File Preview\"\r\n        onClose={handleToggleModal}\r\n      >\r\n        <div className=\"model-height-fix doc-view\">\r\n          {selectedDocument && getFileType ? (\r\n            getFileType === \"pdf\" ? (\r\n              <div className=\"pdf-iframe\">\r\n                <iframe\r\n                  src={selectedDocument}\r\n                  title=\"PDF Preview\"\r\n                  style={{ width: \"100%\", height: \"200%\" }}\r\n                />\r\n              </div>\r\n            ) : (\r\n              <FileViewer\r\n                fileType={getFileType}\r\n                filePath={selectedDocument}\r\n                onError={(error) => console.error(\"Error:\", error)}\r\n              />\r\n            )\r\n          ) : null}\r\n        </div>\r\n      </SidebarModel>\r\n\r\n      {/* <SidebarModel\r\n                isOpen={isModalOpen}\r\n                contentClass=\"content-65\"\r\n                modalTitle=\"File Preview\"\r\n                onClose={handleToggleModal}>\r\n                <div className=\"model-hight-fix\">\r\n                    {selectedDocument && (\r\n                        <FileViewer\r\n                            fileType={getFileType}\r\n                            filePath={selectedDocument}\r\n                            onError={(error) => console.error(\"Error:\", error)}\r\n                        />\r\n                    )}\r\n                </div>\r\n            </SidebarModel> */}\r\n    </div>\r\n  );\r\n});\r\n\r\nBase64FileViewer.propTypes = {\r\n  documentData: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Base64FileViewer;\r\n","export const getDropdownLabelName = (apiResponseData, valueField, labelField, selectedId) => {\r\n    if (apiResponseData && selectedId && valueField && labelField) {\r\n        // Map the data to the required format\r\n        const mappedData = apiResponseData.map((item) => ({\r\n            value: item[valueField],\r\n            label: item[labelField]\r\n        }));\r\n\r\n        // Find the matching entry based on selectedId\r\n        const labelName = mappedData.find(data => Number(data.value) === Number(selectedId));\r\n        if (labelName) {\r\n            return labelName.label; // Return the label field value\r\n        }\r\n    }\r\n    return null;\r\n}\r\n\r\n\r\nexport const removeIdSuffix = (fieldName) => {\r\n    if (fieldName.toLowerCase().endsWith('id')) {\r\n        return fieldName.slice(0, -2); // Remove the last 2 characters (\"Id\")\r\n    }\r\n    return fieldName;\r\n};","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { AppIcons } from \"../../../data/appIcons\";\r\nimport Image from \"../../../components/image/Image\";\r\nimport formatDate from \"../../../lib/formatDate\";\r\nimport NoRecordFound from \"../../../components/ui/noRecordFound/NoRecordFound\";\r\nimport { getLabelClass } from \"../../../utils/StatusColors/StatusColors\";\r\nimport { FirstSecondLetter } from \"../../../utils/FirstSecLetter/FirstSecondLetter\";\r\nimport { encryptUrlData } from \"../../../services/CryptoService\";\r\nimport DataLoader from \"../../../components/ui/dataLoader/DataLoader\";\r\nimport Iconify from \"../../../components/ui/iconify/Iconify\";\r\nimport { useUpdateApprovalRequestsStatusMutation } from \"../../../app/services/ApprovalAPI\";\r\nimport ToastService from \"../../../services/toastService/ToastService\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport {\r\n  MyTaskFieldNames,\r\n  MyTaskKeyNames,\r\n  MyTaskStatus,\r\n} from \"../../../utils/Enums/commonEnums\";\r\nimport Buttons from \"../../../components/ui/button/Buttons\";\r\nimport FormCreator from \"../../../components/Forms/FormCreator\";\r\nimport CenterModel from \"../../../components/ui/centerModel/CenterModel\";\r\nimport { addResonData } from \"../config/RejectReason.data\";\r\nimport Base64FileViewer from \"../../../common/features/component/Base64FileView/Base64FileViewer\";\r\nimport { FunctionalitiesName } from \"../../../utils/Enums/ApprovalFunctionalities\";\r\nimport { useLazyGetCustomersBasicInformationByIdQuery } from \"../../../app/services/basicdetailAPI\";\r\nimport { useLazyGetSupplierBasicInformationByIdQuery } from \"../../../app/services/supplierAPI\";\r\nimport {\r\n  useLazyGetAllPaymentMethodQuery,\r\n  useLazyGetAllPaymentTermsQuery,\r\n} from \"../../../app/services/customerSettingsAPI\";\r\nimport { getDropdownLabelName } from \"../../../utils/CommonUtils/CommonUtilsMethods\";\r\nimport SwalAlert from \"../../../services/swalService/SwalService\";\r\n\r\nconst parseJson = (jsonStr) => {\r\n  try {\r\n    return JSON.parse(jsonStr);\r\n  } catch (error) {\r\n    console.error(\"Invalid JSON:\", error);\r\n    return {};\r\n  }\r\n};\r\n\r\nconst getFieldDifference = (oldJsonStr, newJsonStr, fieldName) => {\r\n  const oldValues = parseJson(oldJsonStr);\r\n  const newValues = parseJson(newJsonStr);\r\n\r\n  // Convert field names to lowercase for case-insensitive comparison\r\n  const fieldNameLower = fieldName?.toLowerCase();\r\n\r\n  const findValue = (values, fieldName) => {\r\n    for (const key in values) {\r\n      if (key.toLowerCase() === fieldName) {\r\n        return values[key];\r\n      }\r\n    }\r\n    return \"N/A\";\r\n  };\r\n\r\n  const oldValue = findValue(oldValues, fieldNameLower);\r\n  const newValue = findValue(newValues, fieldNameLower);\r\n\r\n  return { oldValue, newValue };\r\n};\r\n\r\n// Function to filter out keys that end with \"Id\"\r\n// const filterKeysWithId = (obj) => {\r\n//   const filteredObj = {};\r\n//   for (const [key, value] of Object.entries(obj)) {\r\n//     if (!key.toLowerCase().endsWith('id')) {\r\n//       filteredObj[key] = value;\r\n//     }\r\n//   }\r\n//   return filteredObj;\r\n// };\r\n\r\nconst filterKeysWithId = (obj) => {\r\n  if (Array.isArray(obj)) {\r\n    return obj.map((item) => filterKeysWithId(item));\r\n  } else if (typeof obj === \"object\" && obj !== null) {\r\n    const filteredObj = {};\r\n    for (const [key, value] of Object.entries(obj)) {\r\n      if (!key.toLowerCase().endsWith(\"id\")) {\r\n        filteredObj[key] = filterKeysWithId(value);\r\n      }\r\n    }\r\n    return filteredObj;\r\n  }\r\n  return obj;\r\n};\r\n\r\nconst formatBoolean = (value) => (value ? \"True\" : \"False\");\r\n\r\nconst TaskDetail = ({\r\n  approvalRequestId,\r\n  approvedData,\r\n  isEventByIdLoading,\r\n  approvalRequest,\r\n  tabId,\r\n}) => {\r\n  // const navigate = useNavigate();\r\n  const ref = useRef();\r\n  const [customerId, setCustomerId] = useState(0);\r\n  const [supplierId, setSupplierId] = useState(0);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [oldFieldValue, setOldFieldValue] = useState();\r\n  const [newFieldValue, setNewFieldValue] = useState();\r\n  const [customerData, setCustomerData] = useState({});\r\n  const [supplierData, setSupplierData] = useState({});\r\n  const [showRedirectButton, setShowRedirectButton] = useState(false);\r\n  const [isModelOpen, setIsModelOpen] = useState(false);\r\n  const [valueTypes, setValueTypes] = useState(\"\");\r\n  const [\r\n    updateApprovalRequest,\r\n    {\r\n      isLoading: isUpdateLoading,\r\n      isSuccess: isUpdateSuccess,\r\n      data: isUpdateData,\r\n    },\r\n  ] = useUpdateApprovalRequestsStatusMutation();\r\n\r\n  const [\r\n    getSupplierInfoById,\r\n    {\r\n      isFetching: isGetSupplierFetching,\r\n      isSuccess: isGetSupplierSuccess,\r\n      data: isGetSupplierData,\r\n    },\r\n  ] = useLazyGetSupplierBasicInformationByIdQuery();\r\n  const [\r\n    getCustomersInfoById,\r\n    {\r\n      isFetching: isGetCustomerFetching,\r\n      isSuccess: isGetCustomerSuccess,\r\n      data: isGetCustomerData,\r\n    },\r\n  ] = useLazyGetCustomersBasicInformationByIdQuery();\r\n\r\n  //** API Call's For Setting Data */\r\n  const [getAllPaymentTerms, { data: isGetAllPaymentTermsData }] =\r\n    useLazyGetAllPaymentTermsQuery();\r\n  const [getAllPaymentMethod, { data: isGetAllPaymentMethodData }] =\r\n    useLazyGetAllPaymentMethodQuery();\r\n\r\n  const { confirm } = SwalAlert();\r\n\r\n  useEffect(() => {\r\n    if (isUpdateSuccess && isUpdateData) {\r\n      setShowModal(false);\r\n      ToastService.success(isUpdateData.errorMessage);\r\n      approvalRequest(approvalRequestId);\r\n    }\r\n  }, [isUpdateSuccess, isUpdateData]);\r\n\r\n  // Effect for handling customer data fetch\r\n  useEffect(() => {\r\n    if (customerId) {\r\n      getCustomersInfoById(customerId);\r\n    }\r\n  }, [customerId, getCustomersInfoById]);\r\n\r\n  // Effect for handling supplier data fetch\r\n  useEffect(() => {\r\n    if (supplierId) {\r\n      getSupplierInfoById(supplierId);\r\n    }\r\n  }, [supplierId, getSupplierInfoById]);\r\n\r\n  useEffect(() => {\r\n    if (!isGetCustomerFetching && isGetCustomerSuccess && isGetCustomerData) {\r\n      setCustomerData(isGetCustomerData);\r\n    }\r\n  }, [isGetCustomerFetching, isGetCustomerSuccess, isGetCustomerData]);\r\n\r\n  useEffect(() => {\r\n    if (!isGetSupplierFetching && isGetSupplierSuccess && isGetSupplierData) {\r\n      setSupplierData(isGetSupplierData);\r\n    }\r\n  }, [isGetSupplierFetching, isGetSupplierSuccess, isGetSupplierData]);\r\n\r\n  useEffect(() => {\r\n    if (approvedData) {\r\n      getAllPaymentTerms();\r\n      getAllPaymentMethod();\r\n\r\n      const { oldValue: oldFieldValue, newValue: newFieldValue } =\r\n        getFieldDifference(\r\n          approvedData.oldValue,\r\n          approvedData.newValue,\r\n          approvedData.fieldName\r\n        );\r\n      const newValues = parseJson(approvedData.newValue);\r\n      setOldFieldValue(oldFieldValue);\r\n      setNewFieldValue(newFieldValue);\r\n      const findKey = (obj, keySubstring) => {\r\n        return Object.keys(obj).find((key) =>\r\n          key.toLowerCase().includes(keySubstring.toLowerCase())\r\n        );\r\n      };\r\n\r\n      // Check for the presence of customerId or supplierId keys\r\n      const customerIdKey = findKey(newValues, \"customerid\");\r\n      const supplierIdKey = findKey(newValues, \"supplierid\");\r\n\r\n      // Retrieve the corresponding values\r\n      const customerId = customerIdKey ? newValues[customerIdKey] : null;\r\n      const supplierId = supplierIdKey ? newValues[supplierIdKey] : null;\r\n      // Determine if the redirect button should be shown\r\n      const showRedirectButton = !!customerId || !!supplierId;\r\n      setCustomerId(customerId);\r\n      setSupplierId(supplierId);\r\n      setShowRedirectButton(showRedirectButton);\r\n    } else if (!approvedData) {\r\n      setOldFieldValue(null);\r\n      setNewFieldValue(null);\r\n      setCustomerId(null);\r\n      setSupplierId(null);\r\n      setShowRedirectButton(null);\r\n    }\r\n  }, [approvedData]);\r\n\r\n  const handleRedirectClick = () => {\r\n    if (customerId) {\r\n      window.open(`/CustomerDetails/${encryptUrlData(customerId)}`, \"_blank\");\r\n    } else if (supplierId) {\r\n      window.open(`/SupplierDetails/${encryptUrlData(supplierId)}`, \"_blank\");\r\n    }\r\n  };\r\n\r\n  const handleApprovalRequest = () => {\r\n    confirm(\r\n      \"Confirmation?\",\r\n      \"Would you like to approve this request?\",\r\n      \"Yes\",\r\n      \"Cancel\"\r\n    ).then((confirmed) => {\r\n      if (confirmed) {\r\n        approvalStatus(MyTaskStatus.Accept);\r\n      }\r\n    });\r\n  };\r\n  //approvalStatus(MyTaskStatus.Accept);\r\n  //}\r\n\r\n  const handleRejectRequest = () => {\r\n    approvalStatus(MyTaskStatus.Reject);\r\n  };\r\n\r\n  const approvalStatus = (status) => {\r\n    if (status === \"Accept\") {\r\n      let request = {\r\n        status: status,\r\n        approvalRequestId: approvalRequestId,\r\n      };\r\n      updateApprovalRequest(request);\r\n    } else {\r\n      let data = ref.current.getFormData();\r\n      if (data) {\r\n        let request = {\r\n          status: status,\r\n          approvalRequestId: approvalRequestId,\r\n          rejectReason: data.rejectReason,\r\n        };\r\n        updateApprovalRequest(request);\r\n        setShowModal(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleToggleModal = () => {\r\n    setShowModal(!showModal);\r\n  };\r\n\r\n  const renderValue = (value) => {\r\n    if (Array.isArray(value)) {\r\n      return (\r\n        <ul className=\"pl-0 mt-1\">\r\n          {value.map((item, index) => (\r\n            <li key={index} className=\"list-style\">\r\n              {renderValue(item)}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      );\r\n    } else if (typeof value === \"object\" && value !== null) {\r\n      return (\r\n        <ul className=\"pl-1 mt-1 border-dashed\">\r\n          {Object.entries(value).map(([subKey, subValue]) => (\r\n            <li key={subKey} className=\"list-style\">\r\n              <span className=\"value-label\">{subKey}:</span>\r\n              <span className=\"value-data ml-2\">{renderValue(subValue)}</span>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      );\r\n    } else if (typeof value === \"boolean\") {\r\n      // Handle booleans\r\n      return formatBoolean(value);\r\n    } else {\r\n      // Handle other values\r\n      return value !== null ? value?.toString() : \"N/A\";\r\n    }\r\n  };\r\n\r\n  const renderLableName = (fieldName, value) => {\r\n    switch (fieldName.toLowerCase()) {\r\n      case MyTaskFieldNames.PAYMENTMETHODID.toLowerCase():\r\n        return getDropdownLabelName(\r\n          isGetAllPaymentMethodData,\r\n          \"paymentMethodId\",\r\n          \"method\",\r\n          value\r\n        );\r\n      case MyTaskFieldNames.PAYMENTTERMID.toLowerCase():\r\n        return getDropdownLabelName(\r\n          isGetAllPaymentTermsData,\r\n          \"paymentTermId\",\r\n          \"paymentTerm\",\r\n          value\r\n        );\r\n      default:\r\n        return value;\r\n    }\r\n  };\r\n\r\n  const renderKeyName = (fieldName) => {\r\n    switch (fieldName.toLowerCase()) {\r\n      case MyTaskFieldNames.PAYMENTMETHODID.toLowerCase():\r\n        return MyTaskKeyNames.PAYMENTMETHODID;\r\n      case MyTaskFieldNames.PAYMENTTERMID.toLowerCase():\r\n        return MyTaskKeyNames.PAYMENTTERMID;\r\n      default:\r\n        return fieldName;\r\n    }\r\n  };\r\n\r\n  const handlebtnClick = (valueType) => {\r\n    setIsModelOpen(true);\r\n    setValueTypes(valueType);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setIsModelOpen(false);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {(!isEventByIdLoading && !isUpdateLoading) ||\r\n        isGetSupplierFetching ||\r\n        isGetCustomerFetching ? (\r\n        <div className=\"task-detail\">\r\n          {approvedData ? (\r\n            <>\r\n              <div className=\"task-head\">\r\n                <div className=\"d-flex align-items-center\">\r\n                  <span className=\"profile-icon\">\r\n                    {FirstSecondLetter(approvedData.requestedByUserName)}\r\n                  </span>\r\n                  <div className=\"title\">\r\n                    <h6 className=\"\">{approvedData.eventName}</h6>\r\n                    <span className=\"sub-title\">\r\n                      Generated by <b>{approvedData.requestedByUserName}</b> on\r\n                      <b className=\"date ml-1\">\r\n                        {approvedData.requestedDate\r\n                          ? formatDate(\r\n                            approvedData.requestedDate,\r\n                            \"MM/DD/YYYY hh:mm A\"\r\n                          )\r\n                          : \"No Date\"}\r\n                      </b>\r\n                      {/* <b>Requested By:</b>  */}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n                <div>\r\n                  {/* <div className=\"date mb-2\">\r\n                    {approvedData.requestedDate\r\n                      ? formatDate(approvedData.requestedDate, \"MM/DD/YYYY hh:mm A\")\r\n                      : \"No Date\"}\r\n                  </div> */}\r\n                  {showRedirectButton && approvedData?.moduleName && (\r\n                    <div\r\n                      className=\"view-customer\"\r\n                      onClick={handleRedirectClick}\r\n                    >\r\n                      <Image\r\n                        imagePath={AppIcons.Iicon}\r\n                        altText=\"View Customer Icon\"\r\n                      />\r\n                      <span style={{ textDecoration: \"underline\" }}>\r\n                        {approvedData?.moduleName ?? \"Unknown Module\"}\r\n                        &nbsp;Details\r\n                      </span>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div className=\"customer-information\">\r\n                {customerId && customerData ? (\r\n                  <div className=\"row mb-3\">\r\n                    <div className=\"col-md-5\">\r\n                      <span className=\"info-label fw-bold\">\r\n                        Customer Name :{\" \"}\r\n                      </span>\r\n                      <span className=\"info-value ml-2\">\r\n                        {customerData?.name}\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                      <span className=\"info-label fw-bold\">Email: </span>\r\n                      <span className=\"info-value ml-2\">\r\n                        {customerData?.emailAddress}\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"col-md-3\">\r\n                      <span className=\"info-label fw-bold\">Country : </span>\r\n                      <span className=\"info-value ml-2\">\r\n                        {customerData?.countryName}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                ) : null}\r\n                {supplierData && supplierId ? (\r\n                  <div className=\"row mb-3\">\r\n                    <div className=\"col-md-5\">\r\n                      <span className=\"info-label fw-bold\">\r\n                        Supplier Name :{\" \"}\r\n                      </span>\r\n                      <span className=\"info-value ml-2\">\r\n                        {supplierData?.name}\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                      <span className=\"info-label fw-bold\">Email: </span>\r\n                      <span className=\"info-value ml-2\">\r\n                        {supplierData?.emailAddress}\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"col-md-3\">\r\n                      <span className=\"info-label fw-bold\">Country : </span>\r\n                      <span className=\"info-value ml-2\">\r\n                        {supplierData?.countryName}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                ) : null}\r\n                {!approvedData.isFunctional && (\r\n                  <div className=\"info-row\">\r\n                    <span className=\"info-label\">Field Name : </span>\r\n                    <span className=\"info-value ml-2\">\r\n                      {renderKeyName(approvedData.fieldName)}\r\n                    </span>\r\n                  </div>\r\n                )}\r\n                <div className=\"info-row\">\r\n                  <div>\r\n                    <span className=\"info-label\">Status : </span>\r\n                    <span\r\n                      className={`ml-2 ${getLabelClass(approvedData.status)}`}\r\n                    >\r\n                      {approvedData.status}\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"d-flex\">\r\n                    {approvedData?.eventName !==\r\n                      FunctionalitiesName.UPLOADCUSTOMERDOCUMENT ? (\r\n                      <>\r\n                        &nbsp;{\" \"}\r\n                        <span\r\n                          className=\"btn theme-button position-relative\"\r\n                          onClick={() => handlebtnClick(\"old Value\")}\r\n                        >\r\n                          Old Value\r\n                        </span>{\" \"}\r\n                        &nbsp;&nbsp;\r\n                        <span\r\n                          className=\"btn theme-button position-relative\"\r\n                          onClick={() => handlebtnClick(\"new Value\")}\r\n                        >\r\n                          New Value\r\n                        </span>\r\n                      </>\r\n                    ) : null}\r\n                    {isModelOpen ? (\r\n                      <div className=\"customer-task-model\">\r\n                        <div className=\"customer-card-top-sec\">\r\n                          <div className=\"detail-card\">\r\n                            <div classname=\"detail-item\">\r\n                              {valueTypes === \"old Value\" &&\r\n                                approvedData.oldValue ? (\r\n                                <div\r\n                                  className=\"html-render mb-0\"\r\n                                  dangerouslySetInnerHTML={{\r\n                                    __html: approvedData.oldValue,\r\n                                  }}\r\n                                ></div>\r\n                              ) : valueTypes === \"new Value\" &&\r\n                                approvedData.newValue ? (\r\n                                <div\r\n                                  className=\"html-render mb-0\"\r\n                                  dangerouslySetInnerHTML={{\r\n                                    __html: approvedData.newValue,\r\n                                  }}\r\n                                ></div>\r\n                              ) : (\r\n                                <div className=\"no-value\">\r\n                                  No {valueTypes} available\r\n                                </div>\r\n                              )}\r\n                            </div>\r\n\r\n                            <div className=\"btn-item\">\r\n                              <button\r\n                                type=\"button\"\r\n                                className=\"btn dark-btn ml-5 mt-2\"\r\n                                onClick={handleClose}\r\n                              >\r\n                                Cancel\r\n                              </button>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    ) : null}\r\n                  </div>\r\n                </div>\r\n\r\n                {approvedData.rejectReason && (\r\n                  <div className=\"info-row\">\r\n                    <span className=\"info-label\">Rejection Reason : </span>\r\n                    <span className=\"info-value ml-2\">\r\n                      {approvedData.rejectReason}\r\n                    </span>\r\n                  </div>\r\n                )}\r\n              </div>\r\n              {approvedData.isFunctional ? (\r\n                <div className=\"value-comparison\">\r\n                  {approvedData?.eventName ===\r\n                    FunctionalitiesName.UPLOADCUSTOMERDOCUMENT ? (\r\n                    <Base64FileViewer\r\n                      documentData={approvedData.newValue}\r\n                      isLoading={isEventByIdLoading}\r\n                    />\r\n                  ) : (\r\n                    <React.Fragment>\r\n                      {approvedData?.eventName\r\n                        .toLowerCase()\r\n                        .includes(\"update\") && (\r\n                          <div className=\"value-block w-100\">\r\n                            <span className=\"value-title\">Old Value</span>\r\n\r\n                            {approvedData.oldValueTemplate ? (\r\n                              <div\r\n                                className=\"html-render mb-0\"\r\n                                dangerouslySetInnerHTML={{\r\n                                  __html: approvedData.oldValueTemplate,\r\n                                }}\r\n                              ></div>\r\n                            ) : (\r\n                              <>\r\n                                {approvedData.oldValue &&\r\n                                  Object.entries(\r\n                                    filterKeysWithId(\r\n                                      parseJson(approvedData.oldValue)\r\n                                    )\r\n                                  ).length > 0 ? (\r\n                                  <ul className=\"value-content pl-0\">\r\n                                    {Object.entries(\r\n                                      filterKeysWithId(\r\n                                        parseJson(approvedData.oldValue)\r\n                                      )\r\n                                    ).map(([key, value]) => (\r\n                                      <li key={key}>\r\n                                        <span className=\"value-label\">\r\n                                          {key}:\r\n                                        </span>\r\n                                        <span className=\"value-data ml-2\">\r\n                                          {renderValue(value)}\r\n                                        </span>\r\n                                      </li>\r\n                                    ))}\r\n                                  </ul>\r\n                                ) : (\r\n                                  <div className=\"no-value\">\r\n                                    No old value available\r\n                                  </div>\r\n                                )}\r\n                              </>\r\n                            )}\r\n                          </div>\r\n                        )}\r\n                      <div className=\"value-block w-100\">\r\n                        <span className=\"value-title\">New Value</span>\r\n\r\n                        {approvedData.newValueTemplate ? (\r\n                          <div className=\"html-render mb-0\"\r\n                            dangerouslySetInnerHTML={{ __html: approvedData.newValueTemplate }} ></div>\r\n                        ) : (\r\n                          <>\r\n                            {Object.entries(\r\n                              filterKeysWithId(parseJson(approvedData.newValue))\r\n                            ).length > 0 ? (\r\n                              <ul className=\"value-content pl-0\">\r\n                                {Object.entries(\r\n                                  filterKeysWithId(\r\n                                    parseJson(approvedData.newValue)\r\n                                  )\r\n                                ).map(([key, value]) => (\r\n                                  <li key={key}>\r\n                                    <span className=\"value-label\">{key}:</span>\r\n                                    <span className=\"value-data ml-2\">\r\n                                      {renderValue(value)}\r\n                                    </span>\r\n                                  </li>\r\n                                ))}\r\n                              </ul>\r\n                            ) : (\r\n                              <div className=\"no-value\">\r\n                                No new value available\r\n                              </div>\r\n                            )}\r\n                          </>\r\n                        )}\r\n                      </div>\r\n                    </React.Fragment>\r\n                  )}\r\n                </div>\r\n              ) : (\r\n                <div className=\"value-comparison value-btn-card\">\r\n                  <div className=\"value-block\">\r\n                    <span className=\"value-title\">Old Value</span>\r\n\r\n                    {approvedData.oldValueTemplate ? (\r\n                      <div\r\n                        className=\"html-render mb-0\"\r\n                        dangerouslySetInnerHTML={{\r\n                          __html: approvedData.oldValueTemplate,\r\n                        }}\r\n                      ></div>\r\n                    ) : (\r\n                      <>\r\n                        {approvedData.fieldName && oldFieldValue !== \"N/A\" ? (\r\n                          <div className=\"value-content\">\r\n                            <span className=\"value-label\">\r\n                              {renderKeyName(approvedData.fieldName)} :{\" \"}\r\n                            </span>\r\n                            <span className=\"value-data\">\r\n                              {/* {renderValue(oldFieldValue)} */}\r\n                              {renderLableName(\r\n                                approvedData.fieldName,\r\n                                renderValue(oldFieldValue)\r\n                              )}\r\n                            </span>\r\n                          </div>\r\n                        ) : (\r\n                          <div className=\"no-value\">No old value available</div>\r\n                        )}\r\n                      </>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"value-block\">\r\n                    <span className=\"value-title\">New Value</span>\r\n\r\n                    {approvedData.newValueTemplate ? (\r\n                      <div\r\n                        className=\"html-render mb-0\"\r\n                        dangerouslySetInnerHTML={{\r\n                          __html: approvedData.newValueTemplate,\r\n                        }}\r\n                      ></div>\r\n                    ) : (\r\n                      <>\r\n                        {approvedData.fieldName && newFieldValue !== \"N/A\" ? (\r\n                          <div className=\"value-content\">\r\n                            <span className=\"value-label\">\r\n                              {renderKeyName(approvedData.fieldName)} :{\" \"}\r\n                            </span>\r\n                            <span className=\"value-data\">\r\n                              {/* {renderValue(newFieldValue)} */}\r\n                              {renderLableName(\r\n                                approvedData.fieldName,\r\n                                renderValue(newFieldValue)\r\n                              )}\r\n                            </span>\r\n                          </div>\r\n                        ) : (\r\n                          <div className=\"no-value\">No new value available</div>\r\n                        )}\r\n                      </>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              )}\r\n              {tabId !== 1 && approvedData.status !== \"Reject\" ? (\r\n                <div className=\"task-footer mt-3\">\r\n                  <Button className=\"reject-btn\" onClick={handleToggleModal}>\r\n                    {/* <Image imagePath={AppIcons.CloseIcon} altText=\"Reject Icon\" /> */}\r\n                    <Iconify icon=\"gg:close-o\" className=\"mr-1\" />\r\n                    Reject\r\n                  </Button>\r\n                  <Button\r\n                    className=\"accept-btn\"\r\n                    onClick={handleApprovalRequest}\r\n                  >\r\n                    <Image\r\n                      imagePath={AppIcons.RightTickIcon}\r\n                      altText=\"Accept Icon\"\r\n                    />\r\n                    Accept\r\n                  </Button>\r\n                </div>\r\n              ) : null}\r\n              <CenterModel\r\n                showModal={showModal}\r\n                handleToggleModal={handleToggleModal}\r\n                modalTitle=\"Add Rejection Reason\"\r\n                modelSizeClass=\"w-40\"\r\n              >\r\n                <div className=\"row  phone-numer-card\">\r\n                  <div className=\"col-md-12 add-edit-phoneForm\">\r\n                    <div className=\"row vertical-form\">\r\n                      <FormCreator\r\n                        config={addResonData}\r\n                        ref={ref}\r\n                        {...addResonData}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-md-12 mt-2\">\r\n                    <div className=\"d-flex align-item-center justify-content-end\">\r\n                      <Buttons\r\n                        buttonTypeClassName=\"theme-button\"\r\n                        // buttonText={`${isEdit ? \"Update\" : \"Add\"}`}\r\n                        buttonText=\"Add\"\r\n                        onClick={handleRejectRequest}\r\n                      />\r\n                      <Buttons\r\n                        buttonTypeClassName=\"dark-btn ml-5\"\r\n                        buttonText=\"Cancel\"\r\n                        onClick={handleToggleModal}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </CenterModel>\r\n            </>\r\n          ) : (\r\n            <NoRecordFound />\r\n          )}\r\n        </div>\r\n      ) : (\r\n        <DataLoader />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\nTaskDetail.propTypes = {\r\n  approvedData: PropTypes.shape({\r\n    requestedByUserName: PropTypes.string,\r\n    functionalityName: PropTypes.string,\r\n    requestedDate: PropTypes.string,\r\n    fieldName: PropTypes.string,\r\n    status: PropTypes.string,\r\n    oldValue: PropTypes.string,\r\n    newValue: PropTypes.string,\r\n  }),\r\n  isFetching: PropTypes.bool.isRequired,\r\n};\r\nexport default TaskDetail;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState } from \"react\";\r\n//** Lib's */\r\nimport \"./MyTask.scss\";\r\nimport TaskDetail from \"./feature/TaskDetail\";\r\nimport RenderTabs from \"../../components/ui/tabs/RenderTabs\";\r\nimport { MyTaskStatus } from \"../../utils/Enums/commonEnums\";\r\nimport CardSection from \"../../components/ui/card/CardSection\";\r\nimport { getAuthProps } from \"../../lib/authenticationLibrary\";\r\n//** Service's */\r\nimport { useLazyGetApprovalRequestsByApprovalRequestIdQuery } from \"../../app/services/ApprovalAPI\";\r\nimport { useLazyGetAllFunctionalityEventByModuleIdQuery } from \"../../app/services/configurationAPI\";\r\nimport { useLazyGetAllModulesWithPendingRequestCountQuery } from \"../../app/services/commonAPI\";\r\n// import {\r\n//   useLazyGetAllFunctionalityEventByModuleIdQuery,\r\n//   useLazyGetAllModulesQuery,\r\n// } from \"../../app/services/configurationAPI\";\r\n\r\n//** Compoent's */\r\nconst PendingTask = React.lazy(() => import(\"./feature/PendingTask\"));\r\nconst ArchiveTask = React.lazy(() => import(\"./feature/ArchiveTask\"));\r\n\r\nconst MyTask = () => {\r\n  const authData = getAuthProps();\r\n  const roleId = authData.roles.roleId;\r\n  const [tabId, setTabId] = useState(0);\r\n  const [moduleList, setModuleList] = useState([]);\r\n  const [eventList, setEventList] = useState([]);\r\n  const [isApproval, setIsApproval] = useState(false);\r\n  const [approvedData, setApprovedData] = useState(null);\r\n  const [approvalRequestId, setApprovalRequestId] = useState(0);\r\n  const [\r\n    getApprovalRequestsByApprovalRequestId,\r\n    {\r\n      isFetching: isGetApprovalRequestsByApprovalRequestIdFetching,\r\n      isSuccess: isGetApprovalRequestsByApprovalRequestIdSuccess,\r\n      data: isGetApprovalRequestsByApprovalRequestIdData,\r\n    },\r\n  ] = useLazyGetApprovalRequestsByApprovalRequestIdQuery();\r\n\r\n\r\n  const [\r\n    getEventsByModuleId,\r\n    { isSuccess: isGetAllEventsSucess, data: isGetAllEventsData },\r\n  ] = useLazyGetAllFunctionalityEventByModuleIdQuery();\r\n\r\n  const handleGetPendingId = (data) => {\r\n    getApprovalRequestsByApprovalRequestId(data);\r\n    setApprovalRequestId(data);\r\n  };\r\n\r\n  const handleRestEventDetail = () => {\r\n    setApprovalRequestId(0);\r\n    setApprovedData(null);\r\n  };\r\n\r\n  const handleGetArchiveId = (data) => {\r\n    getApprovalRequestsByApprovalRequestId(data);\r\n    setApprovalRequestId(data);\r\n  };\r\n\r\n  const handleSetTab = (data) => {\r\n    setTabId(data);\r\n    setApprovedData(null);\r\n  };\r\n\r\n  const approvalRequest = (data) => {\r\n    setApprovedData(null);\r\n    setIsApproval(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    moduleList.length > 0 && getEventsByModuleId(moduleList[0].moduleId);\r\n  }, [moduleList]);\r\n\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    if (isGetAllEventsSucess && isGetAllEventsData) {\r\n      const modifyEventList = [\r\n        {\r\n          value: 0, // Special value for select all\r\n          label: \"Select All\",\r\n          isChecked: false,\r\n        },\r\n        ...isGetAllEventsData.map((data) => ({\r\n          value: data.functionalityEventId,\r\n          label: data.eventName,\r\n          isChecked: false,\r\n        })),\r\n      ];\r\n      setEventList(modifyEventList);\r\n    }\r\n  }, [isGetAllEventsSucess, isGetAllEventsData]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      !isGetApprovalRequestsByApprovalRequestIdFetching &&\r\n      isGetApprovalRequestsByApprovalRequestIdSuccess &&\r\n      isGetApprovalRequestsByApprovalRequestIdData\r\n    ) {\r\n      setApprovedData(isGetApprovalRequestsByApprovalRequestIdData);\r\n\r\n    }\r\n  }, [\r\n    isGetApprovalRequestsByApprovalRequestIdFetching,\r\n    isGetApprovalRequestsByApprovalRequestIdSuccess,\r\n    isGetApprovalRequestsByApprovalRequestIdData,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    let lastScrollTop = 0;\r\n\r\n    const handleScroll = () => {\r\n      const currentScrollTop =\r\n        window.pageYOffset || document.documentElement.scrollTop;\r\n\r\n      if (currentScrollTop > lastScrollTop) {\r\n        console.log(\"Scrolling down\");\r\n      } else if (currentScrollTop < lastScrollTop) {\r\n        console.log(\"Scrolling up\");\r\n      }\r\n\r\n      lastScrollTop = currentScrollTop <= 0 ? 0 : currentScrollTop;\r\n    };\r\n\r\n    window.addEventListener(\"scroll\", handleScroll);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", handleScroll);\r\n    };\r\n  }, []);\r\n\r\n  const mainTabs = [\r\n    {\r\n      sMenuItemCaption: \"Pending\",\r\n      // icon: \"fa fa-check-circle-o\",\r\n      component: (\r\n        <>\r\n          <PendingTask\r\n            isApproval={isApproval}\r\n            Pending={MyTaskStatus.Pending}\r\n            onGetById={handleGetPendingId}\r\n            onTabChange={handleSetTab}\r\n            setModuleList={setModuleList}\r\n            roleId={roleId}\r\n            moduleList={moduleList}\r\n            eventList={eventList}\r\n            setIsApproval={setIsApproval}\r\n            handleRestEventDetail={handleRestEventDetail}\r\n          />\r\n        </>\r\n      ),\r\n    },\r\n    {\r\n      sMenuItemCaption: \"Archive\",\r\n      // icon: \"fa fa-file-archive-o\",\r\n      component: (\r\n        <div className=\"\">\r\n          <ArchiveTask\r\n            Accept={MyTaskStatus.Accept}\r\n            onGetById={handleGetArchiveId}\r\n            roleId={roleId}\r\n            moduleList={moduleList}\r\n            eventList={eventList}\r\n            setModuleList={setModuleList}\r\n            handleRestEventDetail={handleRestEventDetail}\r\n          />\r\n        </div>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <div className=\"mytask-section\">\r\n        <div className=\"row\">\r\n          <div className=\"col-xxl-5 col-xl-5 col-md-5 col-12 task-tab\">\r\n            <div className=\"task-title tab-section-desc\">\r\n              <div className=\"filter-model-sec main-customer-grid\">\r\n                <CardSection\r\n                // cardTitle=\"Other Information\"\r\n                >\r\n                  <RenderTabs tabs={mainTabs} onTabClick={handleSetTab} />\r\n                </CardSection>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-xxl-7 col-xl-7 col-md-7 col-12 \">\r\n            <div className=\"right-desc\">\r\n              <CardSection>\r\n                <TaskDetail\r\n                  approvedData={approvedData}\r\n                  approvalRequest={approvalRequest}\r\n                  approvalRequestId={approvalRequestId}\r\n                  isEventByIdLoading={\r\n                    isGetApprovalRequestsByApprovalRequestIdFetching\r\n                  }\r\n                  tabId={tabId}\r\n                />\r\n              </CardSection>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MyTask;\r\n","export const FunctionalitiesName = {\r\n    CUSTOMERBASICINFOUPDATE: \"Customer Basic info update\",\r\n    CUSTOMERADDADDRESS: \"Customer Add Address\",\r\n    CUSTOMERUPDATEADDRESS: \"Customer Update Address\",\r\n    CUSTOMERADDCONTACT: \"Customer Add Contact\",\r\n    CUSTOMERUPDATECONTACT: \"Customer Update Contact\",\r\n    CUSTOMERADDUPDATEFINANCIALSETTING: \"Customer Update Financial Setting\",\r\n    SUPPLIERBASICINFOUPDATE: \"Supplier Basic info update\",\r\n    SUPPLIERADDADDRESS: \"Supplier Add Address\",\r\n    SUPPLIERUPDATEADDRESS: \"Supplier Update Address\",\r\n    SUPPLIERADDCONTACT: \"Supplier Add Contact\",\r\n    SUPPLIERUPDATECONTACT: \"Supplier Update Contact\",\r\n    SUPPLIERADDUPDATEFINANCIALSETTING: \"Supplier Add/Update Financial Setting\",\r\n\r\n\r\n    //** This key's is not used  */\r\n    ADDCUSTOMER: \"Add Customer\",\r\n    UPDATESUPPLIER: \"Update Supplier\",\r\n    ADDSUPPLIER: \"Add Supplier\",\r\n    ADDADDRESS: \"Add Address\",\r\n    ADDBILLINGADDRESS: \"Add Billing Address\",\r\n\r\n\r\n    CUSTOMERUPDATE: \"Customer Update\",\r\n    // Address\r\n    ADDCUSTOMERBILLINGADDRESS: \"Add Customer Billing Address\",\r\n    UPDATECUSTOMERBILLINGADDRESS: \"Update Customer Billing Address\",\r\n    ADDCUSTOMERSHIPPINGADDRESS: \"Add Customer Shipping Address\",\r\n    UPDATECUSTOMERSHIPPINGADDRESS: \"Update Customer Shipping Address\",\r\n    // Contact\r\n    ADDCUSTOMERINVOICEFOLLOWUPCONTACT: \"Add Customer Invoice Follow Up Contact\",\r\n    UPDATECUSTOMERINVOICEFOLLOWUPCONTACT: \"Update Customer Invoice Follow Up Contact\",\r\n    ADDCUSTOMERINVOICESUBMISSIONCONTACT: \"Add Customer Invoice Submission Contact\",\r\n    UPDATECUSTOMERINVOICESUBMISSIONCONTACT: \"Update Customer Invoice Submission Contact\",\r\n    // Setting\r\n    ADDCUSTOMERFINANCIALSETTING: \"Add Customer Financial Setting\",\r\n    UPDATECUSTOMERFINANCIALSETTING: \"Update Customer Financial Setting\",\r\n    UPDATECUSTOMERSHIPPINGSETTING:\"Update Customer Shipping Setting\",\r\n    // Document\r\n    UPLOADCUSTOMERDOCUMENT: \"Upload Customer Document\"\r\n\r\n}","export const FirstSecondLetter = (text) => {\r\n  if (!text) return '?'; // Fallback if text is empty\r\n\r\n  // Split text into words\r\n  const words = text.split(' ');\r\n\r\n  // Extract the first letter of the first word and the first letter of the second word\r\n  const firstLetter = words[0] ? words[0][0] : ''; // First letter of the first word\r\n  const secondLetter = words[1] ? words[1][0] : ''; // First letter of the second word\r\n\r\n  // Combine and ensure the result is uppercase\r\n  return (firstLetter + secondLetter).toUpperCase();\r\n};","export const getLabelClass = (value) => {\r\n    switch (value) {\r\n      case \"Active\":\r\n        return \"status-btn badge-gradient-success\";\r\n      case \"Open\":\r\n        return \"status-btn badge-gradient-info\";\r\n      case \"In Active\":\r\n        return \"status-btn badge-gradient-danger\";\r\n      case \"Pending\":\r\n        return \"status-btn badge-gradient-Pending\";\r\n      case \"In progress\":\r\n        return \"status-btn badge-gradient-theme\";\r\n      case \"Submitted\":\r\n        return \"status-btn badge-gradient-Submitted\";\r\n      case \"Approved\":\r\n        return \"status-btn badge-gradient-Approved\";\r\n      case \"Freeze\":\r\n        return \"status-btn badge-gradient-Frozen\";\r\n      case \"Block\":\r\n        return \"status-btn badge-gradient-Blocked\";\r\n      case \"Reject\":\r\n        return \"status-btn badge-gradient-reject\";\r\n      case \"Disable\":\r\n        return \"status-btn badge-gradient-disabled\";\r\n      default:\r\n        return \"status-btn badge-gradient-info\";\r\n    }\r\n  };","import formatDate from \"../../lib/formatDate\";\r\nimport { FileTypeIcons } from \"../../common/features/component/Document/Config/DocuementsData\";\r\n\r\nexport const modifyContactType = (apiResponseData) => {\r\n  const allType = {\r\n    id: 0,\r\n    type: \"All\", // It's used for all the types\r\n    isForSuppliers: true,\r\n    isForCustomers: true,\r\n    contactTypeId: \"\",\r\n  };\r\n  return [allType, ...apiResponseData];\r\n};\r\n\r\nexport const getDropDownId = (id, isEdit) => {\r\n  if (isEdit) {\r\n    return id && typeof id === \"object\" ? String(id.value) : String(id);\r\n  } else {\r\n    return Array.isArray(id) ? id.map(String).join(\",\") : id && typeof id === \"object\" ? String(id.value) : String(id);;\r\n  }\r\n};\r\n\r\nexport const modifyAddressType = (apiResponseData) => {\r\n  const allType = {\r\n    id: 0,\r\n    type: \"All\", // It's used for all the types\r\n    isForSuppliers: true,\r\n    isForCustomers: true,\r\n    addressTypeId: \"\",\r\n  };\r\n  return [allType, ...apiResponseData];\r\n};\r\n\r\nexport const modifyPhoneNumberData = (phoneDataArray) => {\r\n  const noPrimaryFound = phoneDataArray.every(data => !data.isPrimary);\r\n  const newArray = phoneDataArray.map((phoneData, index) => ({\r\n    ...phoneData,\r\n    extension: phoneData.extension === \"-\" ? 0 : phoneData.extension,\r\n    isPrimary: noPrimaryFound && index === 0 ? true : phoneData.isPrimary,\r\n  }));\r\n  return newArray;\r\n};\r\n\r\nexport const modifyEmailAddressData = (emailDataArray) => {\r\n  const noPrimaryFound = emailDataArray.every(data => !data.isPrimary);\r\n  const newArray = emailDataArray.map((emailData, index) => ({\r\n    ...emailData,\r\n    isPrimary: noPrimaryFound && index === 0 ? true : emailData.isPrimary\r\n  }));\r\n  return newArray;\r\n};\r\n\r\nexport const modifyTimeLineData = (timelineData) => {\r\n  const newArray = timelineData.map((data) => ({\r\n    ...data,\r\n    description:\r\n      data.description +\r\n      \" by \" +\r\n      data.name +\r\n      \" on \" +\r\n      formatDate(data.changedAt, \"MM/DD/YYYY hh:mm A\"),\r\n  }));\r\n  return newArray;\r\n};  \r\n\r\nexport const getFileTypeIcon = (filename) => {\r\n  const parts = filename?.split(\".\");\r\n  const fileType = parts?.length > 1 ? parts[parts.length - 1] : \"\";\r\n  return getIconForFileType(fileType);\r\n};\r\n\r\nconst getIconForFileType = (fileType) => {\r\n  const fileTypeIcon = FileTypeIcons.find((icon) => icon.type === fileType);\r\n  return fileTypeIcon ? fileTypeIcon.icon : null;\r\n};\r\n\r\nexport const documentTransformData = (data) => {\r\n\r\n\r\n  return data.reduce((acc, item) => {\r\n    const {\r\n      type,\r\n      attachment,\r\n      customerDocumentId,\r\n      customerId,\r\n      documentTypeId,\r\n      name,\r\n      createdAt,\r\n      isArchive,\r\n    } = item;\r\n\r\n    // Extract the file type and get the file icon basde on the file type\r\n    const documentIcon = getFileTypeIcon(attachment);\r\n\r\n    const transformedItem = {\r\n      attachment,\r\n      customerDocumentId,\r\n      customerId,\r\n      documentTypeId,\r\n      name,\r\n      documentIcon,\r\n      createdAt,\r\n      isArchive,\r\n      type\r\n    };\r\n\r\n    if (!acc[type]) {\r\n      acc[type] = [];\r\n    }\r\n\r\n    acc[type].push(transformedItem);\r\n    return acc;\r\n  }, {});\r\n};\r\n\r\nexport const supplierDocumentTransformData = (data) => {\r\n  return data.reduce((acc, item) => {\r\n    const {\r\n      type,\r\n      attachment,\r\n      supplierDocumentId,\r\n      supplierId,\r\n      documentTypeId,\r\n      name,\r\n      createdAt,\r\n      isArchive\r\n    } = item;\r\n\r\n    // Extract the file type and get the file icon basde on the file type\r\n    const documentIcon = getFileTypeIcon(attachment);\r\n\r\n    const transformedItem = {\r\n      attachment,\r\n      supplierDocumentId,\r\n      supplierId,\r\n      documentTypeId,\r\n      name,\r\n      documentIcon,\r\n      createdAt,\r\n      isArchive\r\n    };\r\n\r\n    if (!acc[type]) {\r\n      acc[type] = [];\r\n    }\r\n\r\n    acc[type].push(transformedItem);\r\n    return acc;\r\n  }, {});\r\n};\r\n"],"names":["DocumentFormData","name","initialState","documentTypeId","supplierId","customerId","attachment","base64File","storagePath","formFields","id","lable","Field_Name","fieldType","FormFieldTypes","SELECT","EDITABLEDROPDOWN","dataField","fieldSetting","placeholder","isEnableOnChange","options","validation","type","style","containerCss","INPUT","allowSpace","maxLength","isDisable","FILE","isButtonVisible","isCustomButtonVisible","acceptedFiles","FileTypeIcons","GridColumnType","ACTION","icon","AppIcons","PdfIcon","DocIcon","XlsIcon","PptIcon","ZipIcon","CsvIcon","_ref","isApprovalValidate","showModal","handleToggleModal","children","props","_jsxs","Modal","className","modelSizeClass","show","onHide","keyboard","backdrop","_jsx","Header","closeButton","modalTitle","Body","addResonData","rejectReason","TEXTAREA","forwardRef","isLoading","documentData","getFileType","setGetFileType","useState","documentList","setDocumentList","isModalOpen","setIsModalOpen","selectedDocument","setSelectedDocument","Downalod","isFetching","isDownalodFetching","isSuccess","isDownalodSucess","data","isDownalodData","useDownloadApprovalRequestDocumentMutation","useEffect","fileData","blob","Blob","fileURL","URL","createObjectURL","determineFileType","fileName","parsedData","JSON","parse","modifyData","DocumentInfoList","map","DocumentIcon","getFileTypeIcon","Attachment","detectedFileTypes","Set","forEach","item","fileType","includes","add","split","pop","toLowerCase","DataLoader","length","Image","imagePath","alt","Name","formatDate","createdAt","onClick","handleDocumentAction","base64Data","parts","request","base64FileData","Base64File","Iconify","customerDocumentId","NoRecordFound","SidebarModel","isOpen","contentClass","onClose","src","title","width","height","FileViewer","filePath","onError","error","console","getDropdownLabelName","apiResponseData","valueField","labelField","selectedId","labelName","value","label","find","Number","parseJson","jsonStr","filterKeysWithId","obj","Array","isArray","filteredObj","key","Object","entries","endsWith","_approvedData$moduleN","approvalRequestId","approvedData","isEventByIdLoading","approvalRequest","tabId","ref","useRef","setCustomerId","setSupplierId","setShowModal","oldFieldValue","setOldFieldValue","newFieldValue","setNewFieldValue","customerData","setCustomerData","supplierData","setSupplierData","showRedirectButton","setShowRedirectButton","isModelOpen","setIsModelOpen","valueTypes","setValueTypes","updateApprovalRequest","isUpdateLoading","isUpdateSuccess","isUpdateData","useUpdateApprovalRequestsStatusMutation","getSupplierInfoById","isGetSupplierFetching","isGetSupplierSuccess","isGetSupplierData","useLazyGetSupplierBasicInformationByIdQuery","getCustomersInfoById","isGetCustomerFetching","isGetCustomerSuccess","isGetCustomerData","useLazyGetCustomersBasicInformationByIdQuery","getAllPaymentTerms","isGetAllPaymentTermsData","useLazyGetAllPaymentTermsQuery","getAllPaymentMethod","isGetAllPaymentMethodData","useLazyGetAllPaymentMethodQuery","confirm","SwalAlert","ToastService","success","errorMessage","oldValue","newValue","getFieldDifference","oldJsonStr","newJsonStr","fieldName","oldValues","newValues","fieldNameLower","findValue","values","findKey","keySubstring","keys","customerIdKey","supplierIdKey","approvalStatus","status","current","getFormData","renderValue","index","_ref2","subKey","subValue","formatBoolean","toString","renderLableName","MyTaskFieldNames","PAYMENTMETHODID","PAYMENTTERMID","renderKeyName","MyTaskKeyNames","handlebtnClick","valueType","React","_Fragment","FirstSecondLetter","requestedByUserName","eventName","requestedDate","moduleName","handleRedirectClick","window","open","encryptUrlData","Iicon","altText","textDecoration","emailAddress","countryName","isFunctional","getLabelClass","FunctionalitiesName","UPLOADCUSTOMERDOCUMENT","classname","dangerouslySetInnerHTML","__html","handleClose","Base64FileViewer","oldValueTemplate","_ref3","newValueTemplate","_ref4","Button","handleApprovalRequest","then","confirmed","MyTaskStatus","Accept","RightTickIcon","CenterModel","FormCreator","config","Buttons","buttonTypeClassName","buttonText","handleRejectRequest","Reject","PendingTask","ArchiveTask","MyTask","roleId","getAuthProps","roles","setTabId","moduleList","setModuleList","eventList","setEventList","isApproval","setIsApproval","setApprovedData","setApprovalRequestId","getApprovalRequestsByApprovalRequestId","isGetApprovalRequestsByApprovalRequestIdFetching","isGetApprovalRequestsByApprovalRequestIdSuccess","isGetApprovalRequestsByApprovalRequestIdData","useLazyGetApprovalRequestsByApprovalRequestIdQuery","getEventsByModuleId","isGetAllEventsSucess","isGetAllEventsData","useLazyGetAllFunctionalityEventByModuleIdQuery","handleRestEventDetail","handleSetTab","moduleId","modifyEventList","isChecked","functionalityEventId","lastScrollTop","handleScroll","currentScrollTop","pageYOffset","document","documentElement","scrollTop","log","addEventListener","removeEventListener","mainTabs","sMenuItemCaption","component","Pending","onGetById","onTabChange","CardSection","RenderTabs","tabs","onTabClick","TaskDetail","CUSTOMERBASICINFOUPDATE","CUSTOMERADDADDRESS","CUSTOMERUPDATEADDRESS","CUSTOMERADDCONTACT","CUSTOMERUPDATECONTACT","CUSTOMERADDUPDATEFINANCIALSETTING","SUPPLIERBASICINFOUPDATE","SUPPLIERADDADDRESS","SUPPLIERUPDATEADDRESS","SUPPLIERADDCONTACT","SUPPLIERUPDATECONTACT","SUPPLIERADDUPDATEFINANCIALSETTING","ADDCUSTOMER","UPDATESUPPLIER","ADDSUPPLIER","ADDADDRESS","ADDBILLINGADDRESS","CUSTOMERUPDATE","ADDCUSTOMERBILLINGADDRESS","UPDATECUSTOMERBILLINGADDRESS","ADDCUSTOMERSHIPPINGADDRESS","UPDATECUSTOMERSHIPPINGADDRESS","ADDCUSTOMERINVOICEFOLLOWUPCONTACT","UPDATECUSTOMERINVOICEFOLLOWUPCONTACT","ADDCUSTOMERINVOICESUBMISSIONCONTACT","UPDATECUSTOMERINVOICESUBMISSIONCONTACT","ADDCUSTOMERFINANCIALSETTING","UPDATECUSTOMERFINANCIALSETTING","UPDATECUSTOMERSHIPPINGSETTING","text","words","toUpperCase","modifyContactType","isForSuppliers","isForCustomers","contactTypeId","getDropDownId","isEdit","String","join","modifyAddressType","addressTypeId","modifyPhoneNumberData","phoneDataArray","noPrimaryFound","every","isPrimary","phoneData","extension","modifyEmailAddressData","emailDataArray","emailData","modifyTimeLineData","timelineData","description","changedAt","filename","getIconForFileType","fileTypeIcon","documentTransformData","reduce","acc","isArchive","transformedItem","documentIcon","push","supplierDocumentTransformData","supplierDocumentId"],"sourceRoot":""}