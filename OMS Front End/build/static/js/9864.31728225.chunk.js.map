{"version":3,"file":"static/js/9864.31728225.chunk.js","mappings":"kKAGA,MAAMA,EAAaC,EAAAA,MAAW,IAAM,iCAE9BC,EAAQD,EAAAA,MAAW,IAAM,0CACzBE,EAAiBF,EAAAA,MAAW,IAAM,0CA4FxC,EAzF6BG,IAatB,IAbuB,UAC1BC,EAAS,KACTC,EAAI,SACJC,EAAQ,aACRC,EAAY,UACZC,EAAS,YACTC,EAAW,aACXC,EAAY,MACZC,EAAK,YACLC,EAAW,cACXC,EAAa,WACbC,KACGC,GACNZ,EAsBG,OACIa,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACIF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,yBAAwBD,SAAA,EACnCF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,GAAED,SAAA,EACbE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,mBAAkBD,SAC5Bd,GAA2B,KAAdA,IACVgB,EAAAA,EAAAA,KAACnB,EAAK,CAACG,UAAWA,EAAWU,WAAYA,MAGhDC,EAAgBM,cACbD,EAAAA,EAAAA,KAAA,OAAKD,UAAU,gBAAeD,UAC1BE,EAAAA,EAAAA,KAAA,MAAAF,SAAKH,EAAgBM,iBAEvB,OAEVD,EAAAA,EAAAA,KAACrB,EAAU,CACPuB,MAAOlB,EACPmB,GAAIlB,EACJmB,SAAUd,EACVL,KAAMA,EACNI,YAAaA,EACbU,UAAU,mBACVb,SA3CUmB,IAClBnB,GACAA,EAASE,EAAWiB,EACxB,EAyCYC,OAtCaC,KACrBpB,GACAA,EAAaC,EACjB,EAoCYoB,WAAsB,OAAXhB,QAAW,IAAXA,OAAW,EAAXA,EAAaiB,cAA6B,OAAfd,QAAe,IAAfA,OAAe,EAAfA,EAAiBa,aAA0B,OAAbf,QAAa,IAAbA,OAAa,EAAbA,EAAee,cAC/Eb,QAGZK,EAAAA,EAAAA,KAAClB,EAAc,CAACS,MAAOA,GAAS,OACjC,C","sources":["components/Forms/formField/FormDatePickerField.js"],"sourcesContent":["import React from \"react\";\r\nimport PropTypes from 'prop-types'; \r\nimport \"react-datepicker/dist/react-datepicker.css\"; // Import the DatePicker CSS\r\nconst DatePicker = React.lazy(() => import('../../ui/inputs/datePicker/DatePicker'));\r\n\r\nconst Label = React.lazy(() => import('../../ui/label/Label'));\r\nconst ValidationText = React.lazy(() => import('../../ui/inputs/validation/ValidationText.js'))\r\n\r\n\r\nconst FormDatePickerFields = ({\r\n    labelName,\r\n    name,\r\n    onChange,\r\n    onValidation,\r\n    dataField,\r\n    placeholder,\r\n    selectedDate,\r\n    error,\r\n    formSetting,\r\n    overRideProps,\r\n    isRequired,\r\n    ...datePickerProps\r\n}) => {\r\n    const handleDateChange = (date) => {\r\n        if (onChange) {\r\n            onChange(dataField, date);\r\n        }\r\n    };\r\n\r\n    const handleDatePickerBlur = () => {\r\n        if (onValidation) {\r\n            onValidation(dataField)\r\n        }\r\n\r\n        // if (onValidation) {\r\n        //     if (!selectedDate && error) {\r\n        //         onValidation(dataField, error);\r\n        //     }\r\n        //     else {\r\n        //         onValidation(dataField, \"\");\r\n        //     }\r\n        // }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"date-picker-label-part\">\r\n                <div className=\"\">\r\n                    <div className=\"input-label-part\">\r\n                        {labelName && labelName !== \"\" && (\r\n                            <Label labelName={labelName} isRequired={isRequired}  />\r\n                        )}\r\n                    </div>\r\n                    {datePickerProps.hasMainTitle ?\r\n                        <div className=\"section-title\">\r\n                            <h5>{datePickerProps.hasMainTitle}</h5>\r\n                        </div>\r\n                        : \"\"}\r\n                </div>\r\n                <DatePicker\r\n                    label={labelName}\r\n                    id={name}\r\n                    selected={selectedDate}\r\n                    name={name}\r\n                    placeholder={placeholder}\r\n                    className=\"datepicker-field\"\r\n                    onChange={handleDateChange}\r\n                    onBlur={handleDatePickerBlur}\r\n                    isDisable={formSetting?.isViewOnly || datePickerProps?.isDisable || overRideProps?.isDisable}\r\n                    {...datePickerProps}\r\n                />\r\n            </div>\r\n            <ValidationText error={error || \"\"} />\r\n        </>\r\n    );\r\n};\r\nFormDatePickerFields.propTypes = {\r\n    labelName: PropTypes.string,\r\n    name: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func,\r\n    onValidation: PropTypes.func,\r\n    dataField: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string,\r\n    selectedDate: PropTypes.oneOfType([\r\n        PropTypes.instanceOf(Date),\r\n        PropTypes.string\r\n    ]),\r\n    error: PropTypes.string,\r\n    formSetting: PropTypes.shape({\r\n        isViewOnly: PropTypes.bool,\r\n    }),\r\n    overRideProps: PropTypes.shape({\r\n        isDisable: PropTypes.bool,\r\n    }),\r\n    isRequired: PropTypes.bool,\r\n    datePickerProps: PropTypes.object, \r\n};\r\n\r\nexport default FormDatePickerFields;\r\n"],"names":["DatePicker","React","Label","ValidationText","_ref","labelName","name","onChange","onValidation","dataField","placeholder","selectedDate","error","formSetting","overRideProps","isRequired","datePickerProps","_jsxs","_Fragment","children","className","_jsx","hasMainTitle","label","id","selected","date","onBlur","handleDatePickerBlur","isDisable","isViewOnly"],"sourceRoot":""}