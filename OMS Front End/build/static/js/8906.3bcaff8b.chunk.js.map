{"version":3,"file":"static/js/8906.3bcaff8b.chunk.js","mappings":"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","sources":["common/features/component/CustomerSupplierListConfig/CustomerSupplierListConfig.data.js","pages/supplierDetails/supplierGrid/feature/supplierList/Suppliers.js","utils/ContextAPIs/Supplier/SupplierListContext.js","utils/StatusColors/StatusColors.js"],"sourcesContent":["import { GridColumnType } from \"../../../../data/gridColumnType\";\r\nimport {\r\n  ListShowCustomer,\r\n  ListSupplier,\r\n} from \"../../../../utils/Enums/commonEnums\";\r\nimport { getLabelClass } from \"../../../../utils/StatusColors/StatusColors\";\r\n\r\nexport const AllCustomerGridConfig = {\r\n  columns: [\r\n    {\r\n      id: ListShowCustomer.value,\r\n      name: \"Customer Name\",\r\n      fieldName: \"name\",\r\n      colStyle: {\r\n        width: \"35%\",\r\n      },\r\n      allowShort: true,\r\n    },\r\n    {\r\n      id: ListSupplier.value,\r\n      name: \"Supplier Name\",\r\n      fieldName: \"name\",\r\n      colStyle: {\r\n        width: \"35%\",\r\n      },\r\n      allowShort: true,\r\n    },\r\n    {\r\n      name: \"Tax Id\",\r\n      fieldName: \"taxId\",\r\n      colStyle: {\r\n        width: \"25%\",\r\n      },\r\n      allowShort: true,\r\n    },\r\n    {\r\n      name: \"Status\",\r\n      colStyle: {\r\n        width: \"25%\",\r\n      },\r\n      fieldName: \"status\",\r\n      allowShort: true,\r\n      colType: GridColumnType.LABLE,\r\n      colSettings: {\r\n        valueField: \"status\",\r\n        getLableClass: getLabelClass,\r\n      },\r\n    },\r\n    // {\r\n    //   name: \"Progress\",\r\n    //   fieldName: \"progress\",\r\n    //   colType: GridColumnType.PROGRESS,\r\n\r\n    // },\r\n    {\r\n      name: \"Action\",\r\n      colType: GridColumnType.ACTION,\r\n      colStyle: {\r\n        width: \"15%\",\r\n      },\r\n      defaultAction: {\r\n        allowEdit: true,\r\n      },\r\n      customAction: [\r\n        {\r\n          name: \"ALLOWDISABLE\",\r\n          iconName: \"la:user-slash\",\r\n          title: \"Disable\",\r\n          className: \"disable-icon\",\r\n        },\r\n        {\r\n          name: \"ALLOWFREEZE\",\r\n          iconName: \"material-symbols:lock-outline\",\r\n          title: \"Freeze\",\r\n          className: \"freeze-icon\",\r\n        },\r\n        {\r\n          name: \"ALLOWBLOCKED\",\r\n          iconName: \"akar-icons:block\",\r\n          title: \"Blocked\",\r\n          className: \"block-icon\",\r\n        },\r\n        {\r\n          name: \"ALLOREJECT\",\r\n          iconName: \"carbon:close-outline\",\r\n          title: \"Reject\",\r\n          className: \"reject-icon\",\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n};\r\n\r\nexport const PendingCustomerGridConfig = {\r\n  columns: [\r\n    {\r\n      id: ListShowCustomer.value,\r\n      name: \"Customer Name\",\r\n      fieldName: \"name\",\r\n      colStyle: {\r\n        width: \"35%\",\r\n      },\r\n      allowShort: true,\r\n    },\r\n    {\r\n      id: ListSupplier.value,\r\n      name: \"Supplier Name\",\r\n      fieldName: \"name\",\r\n      colStyle: {\r\n        width: \"35%\",\r\n      },\r\n    },\r\n    {\r\n      name: \"Tax Id\",\r\n      fieldName: \"taxId\",\r\n      colStyle: {\r\n        width: \"20%\",\r\n      },\r\n      allowShort: true,\r\n    },\r\n    {\r\n      name: \"Web Site\",\r\n      fieldName: \"website\",\r\n      colStyle: {\r\n        width: \"30%\",\r\n      },\r\n      allowShort: true,\r\n    },\r\n    // {\r\n    //   name: \"Progress\",\r\n    //   fieldName: \"progress\",\r\n    //   colType: GridColumnType.PROGRESS,\r\n\r\n    // },\r\n    {\r\n      name: \"Action\",\r\n      colStyle: {\r\n        width: \"15%\",\r\n      },\r\n      colType: GridColumnType.ACTION,\r\n      defaultAction: {\r\n        allowEdit: true,\r\n        // isDisabled: true,\r\n      },\r\n      customAction: [\r\n        {\r\n          name: \"ALLOWDISABLE\",\r\n          iconName: \"la:user-slash\",\r\n          title: \"Disable\",\r\n          className: \"disable-icon\",\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n};\r\n\r\nexport const SubmittedCustomerGridConfig = {\r\n  columns: [\r\n    {\r\n      id: ListShowCustomer.value,\r\n      name: \"Customer Name\",\r\n      fieldName: \"name\",\r\n      colStyle: {\r\n        width: \"35%\",\r\n      },\r\n      allowShort: true,\r\n    },\r\n    {\r\n      id: ListSupplier.value,\r\n      name: \"Supplier Name\",\r\n      fieldName: \"name\",\r\n      colStyle: {\r\n        width: \"35%\",\r\n      },\r\n    },\r\n    {\r\n      name: \"Tax Id\",\r\n      fieldName: \"taxId\",\r\n      colStyle: {\r\n        width: \"15%\",\r\n      },\r\n      allowShort: true,\r\n    },\r\n    {\r\n      name: \"Web Site\",\r\n      fieldName: \"website\",\r\n      colStyle: {\r\n        width: \"25%\",\r\n      },\r\n      allowShort: true,\r\n    },\r\n    {\r\n      name: \"Approve\",\r\n      colStyle: {\r\n        width: \"10%\",\r\n      },\r\n      allowShort: false,\r\n      colType: GridColumnType.CHECKBOX,\r\n      colSettings: {\r\n        allowCheckbox: true,\r\n        isDisabled: false\r\n      },\r\n    },\r\n    {\r\n      name: \"Action\",\r\n      colStyle: {\r\n        width: \"15%\",\r\n      },\r\n      colType: GridColumnType.ACTION,\r\n      defaultAction: {\r\n        allowEdit: true,\r\n        // isDisabled: true,\r\n      },\r\n      customAction: [\r\n        {\r\n          name: \"ALLOWDISABLE\",\r\n          iconName: \"la:user-slash\",\r\n          title: \"Disable\",\r\n          className: \"disable-icon\",\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n};\r\n\r\nexport const ApprovedCustomerGridConfig = {\r\n  columns: [\r\n    {\r\n      id: ListShowCustomer.value,\r\n      name: \"Customer Name\",\r\n      fieldName: \"name\",\r\n      colStyle: {\r\n        width: \"70%\",\r\n      },\r\n      allowShort: true,\r\n    },\r\n    {\r\n      id: ListSupplier.value,\r\n      name: \"Supplier Name\",\r\n      fieldName: \"name\",\r\n      colStyle: {\r\n        width: \"70%\",\r\n      },\r\n    },\r\n    {\r\n      name: \"Tax Id\",\r\n      colStyle: {\r\n        width: \"15%\",\r\n      },\r\n      fieldName: \"taxId\",\r\n      allowShort: true,\r\n    },\r\n    {\r\n      name: \"Action\",\r\n      colStyle: {\r\n        width: \"15%\",\r\n      },\r\n      colType: GridColumnType.ACTION,\r\n      defaultAction: {\r\n        allowEdit: true,\r\n      },\r\n      customAction: [\r\n        {\r\n          name: \"ALLOWDISABLE\",\r\n          iconName: \"la:user-slash\",\r\n          title: \"Disable\",\r\n          className: \"disable-icon\",\r\n        },\r\n        {\r\n          name: \"ALLOWFREEZE\",\r\n          iconName: \"material-symbols:lock-outline\",\r\n          title: \"Freeze\",\r\n          className: \"freeze-icon\",\r\n        },\r\n        {\r\n          name: \"ALLOWBLOCKED\",\r\n          iconName: \"akar-icons:block\",\r\n          title: \"Blocked\",\r\n          className: \"block-icon\",\r\n        },\r\n        {\r\n          name: \"ALLOREJECT\",\r\n          iconName: \"carbon:close-outline\",\r\n          title: \"Reject\",\r\n          className: \"reject-icon\",\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n};\r\n\r\nexport const RejectedCustomerGridConfig = {\r\n  columns: [\r\n    {\r\n      id: ListShowCustomer.value,\r\n      name: \"Customer Name\",\r\n      fieldName: \"name\",\r\n      colStyle: {\r\n        width: \"70%\",\r\n      },\r\n      allowShort: true,\r\n    },\r\n    {\r\n      id: ListSupplier.value,\r\n      name: \"Supplier Name\",\r\n      fieldName: \"name\",\r\n      colStyle: {\r\n        width: \"70%\",\r\n      },\r\n      allowShort: true,\r\n    },\r\n    {\r\n      name: \"Reason\",\r\n      fieldName: \"inActiveReason\",\r\n      colStyle: {\r\n        width: \"15%\",\r\n      },\r\n      allowShort: true,\r\n    },\r\n    {\r\n      name: \"Action\",\r\n      colStyle: {\r\n        width: \"15%\",\r\n      },\r\n      colType: GridColumnType.ACTION,\r\n      defaultAction: {\r\n        allowEdit: true,\r\n      },\r\n    },\r\n  ],\r\n};\r\n\r\nexport const AllInActiveCustomerGridConfig = {\r\n  columns: [\r\n    {\r\n      id: ListShowCustomer.value,\r\n      name: \"Customer Name\",\r\n      fieldName: \"name\",\r\n      allowShort: true,\r\n      colStyle: {\r\n        width: \"35%\",\r\n      },\r\n    },\r\n    {\r\n      id: ListSupplier.value,\r\n      name: \"Supplier Name\",\r\n      fieldName: \"name\",\r\n      colStyle: {\r\n        width: \"35%\",\r\n      },\r\n      allowShort: true,\r\n    },\r\n    {\r\n      name: \"Reason\",\r\n      fieldName: \"inActiveReason\",\r\n      colStyle: {\r\n        width: \"25%\",\r\n      },\r\n      allowShort: true,\r\n    },\r\n    {\r\n      name: \"Date\",\r\n      colStyle: {\r\n        width: \"25%\",\r\n      },\r\n      fieldName: \"updatedAt\",\r\n      colType: GridColumnType.DATE,\r\n      colSettings: {\r\n        isUTC: true,\r\n        format: \"MM/DD/YYYY hh:mm A \",\r\n      },\r\n    },\r\n    {\r\n      name: \"Status\",\r\n      colStyle: {\r\n        width: \"15%\",\r\n      },\r\n      fieldName: \"status\",\r\n      allowShort: false,\r\n      colType: GridColumnType.LABLE,\r\n      colSettings: {\r\n        valueField: \"status\",\r\n        getLableClass: getLabelClass,\r\n      },\r\n    },\r\n  ],\r\n};\r\n\r\nexport const FreezedInActiveCustomerGridConfig = {\r\n  columns: [\r\n    {\r\n      id: ListShowCustomer.value,\r\n      name: \"Customer Name\",\r\n      fieldName: \"name\",\r\n      colStyle: {\r\n        width: \"25%\",\r\n      },\r\n      allowShort: true,\r\n    },\r\n    {\r\n      id: ListSupplier.value,\r\n      name: \"Supplier Name\",\r\n      fieldName: \"name\",\r\n      colStyle: {\r\n        width: \"25%\",\r\n      },\r\n      allowShort: true,\r\n    },\r\n    {\r\n      name: \"Reason\",\r\n      fieldName: \"inActiveReason\",\r\n      colStyle: {\r\n        width: \"25%\",\r\n      },\r\n      allowShort: true,\r\n    },\r\n    {\r\n      name: \"Date\",\r\n      colStyle: {\r\n        width: \"25%\",\r\n      },\r\n      fieldName: \"updatedAt\",\r\n      colType: GridColumnType.DATE,\r\n      colSettings: {\r\n        isUTC: true,\r\n        format: \"MM/DD/YYYY hh:mm A \",\r\n      },\r\n    },\r\n    {\r\n      name: \"Action\",\r\n      colStyle: {\r\n        width: \"25%\",\r\n      },\r\n      colType: GridColumnType.ACTION,\r\n      defaultAction: {\r\n        allowEdit: true,\r\n        allowDelete: false,\r\n        // allowUnfreeze: true,\r\n      },\r\n      customAction: [\r\n        {\r\n          name: \"ALLOWFREEZE\",\r\n          iconName: \"basil:unlock-outline\",\r\n          title: \"Un-Freeze\",\r\n          className: \"un-lock-icon\",\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n};\r\n\r\nexport const BlockedInActiveCustomerGridConfig = {\r\n  columns: [\r\n    {\r\n      id: ListShowCustomer.value,\r\n      name: \"Customer Name\",\r\n      fieldName: \"name\",\r\n      colStyle: {\r\n        width: \"25%\",\r\n      },\r\n      allowShort: true,\r\n    },\r\n    {\r\n      id: ListSupplier.value,\r\n      name: \"Supplier Name\",\r\n      fieldName: \"name\",\r\n      colStyle: {\r\n        width: \"25%\",\r\n      },\r\n      allowShort: true,\r\n    },\r\n    {\r\n      name: \"Reason\",\r\n      colStyle: {\r\n        width: \"25%\",\r\n      },\r\n      fieldName: \"inActiveReason\",\r\n      allowShort: true,\r\n    },\r\n    {\r\n      name: \"Date\",\r\n      colStyle: {\r\n        width: \"25%\",\r\n      },\r\n      fieldName: \"updatedAt\",\r\n      colType: GridColumnType.DATE,\r\n      colSettings: {\r\n        isUTC: true,\r\n        format: \"MM/DD/YYYY hh:mm A \",\r\n      },\r\n    },\r\n    {\r\n      name: \"Action\",\r\n      colStyle: {\r\n        width: \"25%\",\r\n      },\r\n      colType: GridColumnType.ACTION,\r\n      defaultAction: {\r\n        allowEdit: true,\r\n        // allowDelete: false,\r\n        // allowUnfreeze: false,\r\n        // allowUnblocked: true,\r\n      },\r\n      customAction: [\r\n        {\r\n          name: \"ALLOWUNBLOCKED\",\r\n          title: \"UnBlock\",\r\n          iconName: \"gg:unblock\",\r\n          className: \"un-block-icon\",\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n};\r\n\r\nexport const DisabledInActiveCustomerGridConfig = {\r\n  columns: [\r\n    {\r\n      id: ListShowCustomer.value,\r\n      name: \"Customer Name\",\r\n      fieldName: \"name\",\r\n      colStyle: {\r\n        width: \"35%\",\r\n      },\r\n      allowShort: true,\r\n    },\r\n    {\r\n      id: ListSupplier.value,\r\n      name: \"Supplier Name\",\r\n      fieldName: \"name\",\r\n      colStyle: {\r\n        width: \"35%\",\r\n      },\r\n      allowShort: true,\r\n    },\r\n    {\r\n      name: \"Reason\",\r\n      colStyle: {\r\n        width: \"35%\",\r\n      },\r\n      fieldName: \"inActiveReason\",\r\n      allowShort: true,\r\n    },\r\n    {\r\n      name: \"Date\",\r\n      colStyle: {\r\n        width: \"35%\",\r\n      },\r\n      fieldName: \"updatedAt\",\r\n      colType: GridColumnType.DATE,\r\n      colSettings: {\r\n        isUTC: true,\r\n        format: \"MM/DD/YYYY hh:mm A \",\r\n      },\r\n    },\r\n  ],\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\n//** Lib's */\r\nimport { ErrorMessage } from \"../../../../../data/appMessages\";\r\nimport { ListShowCustomer } from \"../../../../../utils/Enums/commonEnums\";\r\nimport useDebounce from \"../../../../../app/customHooks/useDebouce\";\r\nimport CardSection from \"../../../../../components/ui/card/CardSection\";\r\nimport { StatusEnums, StatusValue } from \"../../../../../utils/Enums/StatusEnums\";\r\nimport SupplierListContext from '../../../../../utils/ContextAPIs/Supplier/SupplierListContext'\r\nimport { AddSupplierContextProvider } from \"../../../../../utils/ContextAPIs/Supplier/AddSupplierContext\";\r\n\r\n//** Service's */\r\nimport ToastService from \"../../../../../services/toastService/ToastService\";\r\nimport { AllCustomerGridConfig, ApprovedCustomerGridConfig, PendingCustomerGridConfig, RejectedCustomerGridConfig, SubmittedCustomerGridConfig } from \"../../../../../common/features/component/CustomerSupplierListConfig/CustomerSupplierListConfig.data\";\r\n//** Component's */\r\nconst SupplierList = React.lazy(() => import(\"./feature/SupplierList\"));\r\nconst InActiveSupplierTab = React.lazy(() => import(\"../InActiveTabs/InActiveSupplierTab\"));\r\n\r\nconst Suppliers = () => {\r\n  const [activeTab, setActiveTab] = useState(\"0\");\r\n  const supplierListRef = useRef();\r\n  const [search, setSearch] = useState(\"\");\r\n  const [allManageData, setAllManageData] = useState(AllCustomerGridConfig);\r\n  const [pendingManageData, setPendingManageData] = useState(PendingCustomerGridConfig);\r\n  const [submittedManageData, setSubmittedManageData] = useState(SubmittedCustomerGridConfig);\r\n  const [approvedManageData, setApprovedManageData] = useState(ApprovedCustomerGridConfig);\r\n  const [rejectedCManageData, setRejectedCManageData] = useState(RejectedCustomerGridConfig);\r\n  const [selectedDrpvalues, setSelectedDrpvalues] = useState(\"\")\r\n  const [selectedStatusOptions, setSelectedStatusOptions] = useState(\"\");\r\n  const [statusOptions, setStatusOptions] = useState([]);\r\n  const [shouldRerenderFormCreator, setShouldRerenderFormCreator] = useState(false);\r\n\r\n  const debouncedSearch = useDebounce(search, 300);\r\n  const handleTabClick = (tabIndex) => {\r\n    setActiveTab(tabIndex.toString());\r\n  };\r\n\r\n  const getListApi = () => {\r\n    if (supplierListRef.current) {\r\n      supplierListRef.current.getListApi();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setSearch(\"\");\r\n    setSelectedDrpvalues(\"\");\r\n    const updateManageData = () => {\r\n      switch (activeTab) {\r\n        case \"0\":\r\n          setAllManageData({\r\n            ...AllCustomerGridConfig,\r\n            columns: AllCustomerGridConfig.columns.filter(column => column.id !== ListShowCustomer.value)\r\n          });\r\n          break;\r\n        case \"1\":\r\n          setPendingManageData({\r\n            ...PendingCustomerGridConfig,\r\n            columns: PendingCustomerGridConfig.columns.filter(column => column.id !== ListShowCustomer.value)\r\n          });\r\n          break;\r\n        case \"2\":\r\n          setSubmittedManageData({\r\n            ...SubmittedCustomerGridConfig,\r\n            columns: SubmittedCustomerGridConfig.columns.filter(column => column.id !== ListShowCustomer.value)\r\n          });\r\n          break;\r\n        case \"3\":\r\n          setApprovedManageData({\r\n            ...ApprovedCustomerGridConfig,\r\n            columns: ApprovedCustomerGridConfig.columns.filter(column => column.id !== ListShowCustomer.value)\r\n          });\r\n          break;\r\n        case \"4\":\r\n          setAllManageData({\r\n            columns: []\r\n          });\r\n          break;\r\n        case \"5\":\r\n          setRejectedCManageData({\r\n            ...RejectedCustomerGridConfig,\r\n            columns: RejectedCustomerGridConfig.columns.filter(column => column.id !== ListShowCustomer.value)\r\n          });\r\n          break;\r\n        default:\r\n          setAllManageData(AllCustomerGridConfig);\r\n      }\r\n    };\r\n\r\n    updateManageData(); // Initial update based on activeTab\r\n    getListApi(); // Fetch data based on activeTab (if needed)\r\n  }, [activeTab]);\r\n\r\n  const handleSearch = () => {\r\n    if (search.length >= 3 || selectedDrpvalues.length > 0) {\r\n      getListApi();\r\n    } else {\r\n      ToastService.warning(ErrorMessage.CommonErrorMessage)\r\n    }\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n   \r\n    setSearch(event.target.value.trim());\r\n  \r\n  };\r\n  const handleKeyPress=(event)=>{\r\n    \r\n    if (event.key === \"Enter\") {\r\n      handleSearch();\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (StatusValue) {\r\n      const statusListData = StatusValue.map((item) => ({\r\n        value: item.value,\r\n        label: item.label,\r\n      }));\r\n      setStatusOptions(statusListData);\r\n    }\r\n  }, [StatusValue]);\r\n\r\n  const handleChangeDropdown = (selectedOptions) => {\r\n    const selectedValues = selectedOptions.map(option => option.value);\r\n    if (selectedValues.length > 0) {\r\n      setSelectedDrpvalues(selectedValues);\r\n      setSelectedStatusOptions(selectedValues);\r\n    } else {\r\n      setSelectedDrpvalues(\"\");\r\n      setSelectedStatusOptions(\"\");\r\n    }\r\n  };\r\n\r\n  const handleClear = () => {\r\n    setSelectedDrpvalues(\"\");\r\n    setSelectedStatusOptions(\"\");\r\n    setSearch(\"\");\r\n    setShouldRerenderFormCreator((prevState) => !prevState);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (debouncedSearch === \"\" && selectedDrpvalues === \"\") {\r\n      getListApi();\r\n    }\r\n  }, [debouncedSearch, selectedDrpvalues]);\r\n\r\n  const tabs = [\r\n    {\r\n      sMenuItemCaption: \"ALL\",\r\n      component: (\r\n        <div className=\"mt-2 customer-list-all\">\r\n          <SupplierList statusId={selectedDrpvalues} configFile={allManageData}\r\n            search={debouncedSearch}\r\n            handleChange={handleChange}\r\n            statusOptions={statusOptions}\r\n            selectedStatusOptions={selectedStatusOptions}\r\n            handleChangeDropdown={handleChangeDropdown}\r\n            selectedDrpvalues={selectedDrpvalues}\r\n            searchStatusFilter={true}\r\n            handleSearch={handleSearch}\r\n            handleClear={handleClear}\r\n            shouldRerenderFormCreator={shouldRerenderFormCreator}\r\n            handleKeyPress={handleKeyPress}\r\n          />\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      sMenuItemCaption: \"PENDING\",\r\n      component: (\r\n        <div className=\"mt-2 customer-list-all\">\r\n          <SupplierList statusId={StatusEnums.Pending} configFile={pendingManageData}\r\n            search={debouncedSearch}\r\n            handleChange={handleChange}\r\n            statusOptions={statusOptions}\r\n            selectedStatusOptions={selectedStatusOptions}\r\n            handleChangeDropdown={handleChangeDropdown}\r\n            selectedDrpvalues={selectedDrpvalues}\r\n            searchStatusFilter={false}\r\n            handleSearch={handleSearch}\r\n            handleClear={handleClear}\r\n            shouldRerenderFormCreator={shouldRerenderFormCreator}\r\n            handleKeyPress={handleKeyPress}\r\n          />\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      sMenuItemCaption: \"SUBMITTED\",\r\n      component: (\r\n        <div className=\"mt-2 customer-list-submitted customer-list-all\">\r\n          <SupplierList statusId={StatusEnums.Submitted} configFile={submittedManageData}\r\n            search={debouncedSearch}\r\n            handleChange={handleChange}\r\n            statusOptions={statusOptions}\r\n            selectedStatusOptions={selectedStatusOptions}\r\n            handleChangeDropdown={handleChangeDropdown}\r\n            selectedDrpvalues={selectedDrpvalues}\r\n            searchStatusFilter={false}\r\n            handleSearch={handleSearch}\r\n            handleClear={handleClear}\r\n            shouldRerenderFormCreator={shouldRerenderFormCreator}\r\n            handleKeyPress={handleKeyPress}\r\n\r\n          />\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      sMenuItemCaption: \"APPROVED\",\r\n      component: (\r\n        <div className=\"mt-2 customer-list-all\">\r\n          <SupplierList statusId={StatusEnums.Approved} configFile={approvedManageData}\r\n            search={debouncedSearch}\r\n            handleChange={handleChange}\r\n            statusOptions={statusOptions}\r\n            selectedStatusOptions={selectedStatusOptions}\r\n            handleChangeDropdown={handleChangeDropdown}\r\n            selectedDrpvalues={selectedDrpvalues}\r\n            searchStatusFilter={false}\r\n            handleSearch={handleSearch}\r\n            handleClear={handleClear}\r\n            shouldRerenderFormCreator={shouldRerenderFormCreator}\r\n            handleKeyPress={handleKeyPress}\r\n\r\n          />\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      sMenuItemCaption: \"INACTIVE\",\r\n      component: (\r\n        <div className=\"mt-2 inactive-list-sec\">\r\n          <InActiveSupplierTab statusId={[StatusEnums.Freeze, StatusEnums.Block, StatusEnums.Disable]} />\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      sMenuItemCaption: \"REJECTED\",\r\n      component: (\r\n        <div className=\"mt-2 customer-list-all\">\r\n          <SupplierList statusId={StatusEnums.Reject} configFile={rejectedCManageData}\r\n            search={debouncedSearch}\r\n            handleChange={handleChange}\r\n            statusOptions={statusOptions}\r\n            selectedStatusOptions={selectedStatusOptions}\r\n            handleChangeDropdown={handleChangeDropdown}\r\n            selectedDrpvalues={selectedDrpvalues}\r\n            searchStatusFilter={false}\r\n            handleSearch={handleSearch}\r\n            handleClear={handleClear}\r\n            shouldRerenderFormCreator={shouldRerenderFormCreator}\r\n            handleKeyPress={handleKeyPress}\r\n\r\n          />\r\n        </div>\r\n      ),\r\n    },\r\n  ];\r\n  return (\r\n    <>\r\n      <AddSupplierContextProvider>\r\n        <SupplierListContext.Provider value={{ supplierListRef }}>\r\n          <div className=\"main-customer-grid\">\r\n            <div className=\"row\">\r\n              <div className=\"col-xxl-12 col-xl-12 col-md-12 col-12 other-info-tab main-tab-header\">\r\n                <CardSection\r\n                // cardTitle=\"Other Information\"\r\n                >\r\n                  <>\r\n                    {tabs && tabs.length > 0 &&\r\n                      <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                          <div className=\"tab-section mb-0\">\r\n                            <div className=\"tab-header\">\r\n                              {tabs && tabs.map((tab, index) => (\r\n                                <button\r\n                                  key={index}\r\n                                  className={activeTab === index.toString() ? \"active\" : \"\"}\r\n                                  onClick={() => handleTabClick(index, tab.sPage)}\r\n                                >\r\n                                  {tab.sMenuItemCaption}\r\n                                </button>\r\n                              ))}\r\n                            </div>\r\n                            {activeTab !== -1 && tabs[activeTab].component && (\r\n                              <div className=\"tab-content\">\r\n                                <div className=\"tab-body-section\">\r\n                                  {tabs[activeTab].component}\r\n                                </div>\r\n                              </div>\r\n                            )}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    }\r\n                  </>\r\n                </CardSection>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </SupplierListContext.Provider>\r\n      </AddSupplierContextProvider>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Suppliers;\r\n","import { createContext } from 'react';\r\n\r\nconst SupplierListContext = createContext();\r\n\r\nexport default SupplierListContext;","export const getLabelClass = (value) => {\r\n    switch (value) {\r\n      case \"Active\":\r\n        return \"status-btn badge-gradient-success\";\r\n      case \"Open\":\r\n        return \"status-btn badge-gradient-info\";\r\n      case \"In Active\":\r\n        return \"status-btn badge-gradient-danger\";\r\n      case \"Pending\":\r\n        return \"status-btn badge-gradient-Pending\";\r\n      case \"In progress\":\r\n        return \"status-btn badge-gradient-theme\";\r\n      case \"Submitted\":\r\n        return \"status-btn badge-gradient-Submitted\";\r\n      case \"Approved\":\r\n        return \"status-btn badge-gradient-Approved\";\r\n      case \"Freeze\":\r\n        return \"status-btn badge-gradient-Frozen\";\r\n      case \"Block\":\r\n        return \"status-btn badge-gradient-Blocked\";\r\n      case \"Reject\":\r\n        return \"status-btn badge-gradient-reject\";\r\n      case \"Disable\":\r\n        return \"status-btn badge-gradient-disabled\";\r\n      default:\r\n        return \"status-btn badge-gradient-info\";\r\n    }\r\n  };"],"names":["AllCustomerGridConfig","columns","id","ListShowCustomer","value","name","fieldName","colStyle","width","allowShort","ListSupplier","colType","GridColumnType","LABLE","colSettings","valueField","getLableClass","getLabelClass","ACTION","defaultAction","allowEdit","customAction","iconName","title","className","PendingCustomerGridConfig","SubmittedCustomerGridConfig","CHECKBOX","allowCheckbox","isDisabled","ApprovedCustomerGridConfig","RejectedCustomerGridConfig","AllInActiveCustomerGridConfig","DATE","isUTC","format","FreezedInActiveCustomerGridConfig","allowDelete","BlockedInActiveCustomerGridConfig","DisabledInActiveCustomerGridConfig","SupplierList","React","InActiveSupplierTab","Suppliers","activeTab","setActiveTab","useState","supplierListRef","useRef","search","setSearch","allManageData","setAllManageData","pendingManageData","setPendingManageData","submittedManageData","setSubmittedManageData","approvedManageData","setApprovedManageData","rejectedCManageData","setRejectedCManageData","selectedDrpvalues","setSelectedDrpvalues","selectedStatusOptions","setSelectedStatusOptions","statusOptions","setStatusOptions","shouldRerenderFormCreator","setShouldRerenderFormCreator","debouncedSearch","useDebounce","getListApi","current","useEffect","updateManageData","filter","column","handleSearch","length","ToastService","warning","ErrorMessage","CommonErrorMessage","handleChange","event","target","trim","handleKeyPress","key","StatusValue","statusListData","map","item","label","handleChangeDropdown","selectedOptions","selectedValues","option","handleClear","prevState","tabs","sMenuItemCaption","component","_jsx","children","statusId","configFile","searchStatusFilter","StatusEnums","Pending","Submitted","Approved","Freeze","Block","Disable","Reject","_Fragment","AddSupplierContextProvider","SupplierListContext","Provider","CardSection","_jsxs","tab","index","toString","onClick","handleTabClick","tabIndex","sPage","createContext"],"sourceRoot":""}