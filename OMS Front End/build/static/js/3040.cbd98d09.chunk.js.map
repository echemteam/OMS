{"version":3,"file":"static/js/3040.cbd98d09.chunk.js","mappings":"uLAOA,MAAMA,EAAcC,EAAAA,MAAW,IAAM,kCAE/BC,EAAsB,CAC1BC,IAAKC,EAAAA,EAAYC,mBACjBC,KAAMF,EAAAA,EAAYG,qBAqCpB,EAlC8BC,IAA2D,IAA1D,eAAEC,EAAc,mBAAEC,EAAkB,aAAEC,GAAcH,EAEjF,MAAM,WAAEI,EAAU,kBAAEC,EAAiB,2BAAEC,IAA+BC,EAAAA,EAAAA,YAAWC,EAAAA,GAMjF,OAKEC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oBAAmBC,UAChCF,EAAAA,EAAAA,KAACjB,EAAW,CACVoB,YAAY,EACZX,eAAgBA,EAChBY,MAAOT,GAAc,EACrBF,mBAAoBA,EACpBY,kBAAmBC,EAAAA,GACnBC,uBAAwBC,EAAAA,GACxBC,YAAcb,EAA0C,KAAtBX,EAClCyB,eAAgBC,EAAAA,GAChBjB,aAAcA,EACdkB,mBApBqBA,KACzBf,EAA2BF,EAAW,KAqBhC,C","sources":["pages/supplierDetails/feature/supplierContactDetail/SupplierContactDetail.js"],"sourcesContent":["import React, { useContext } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { securityKey } from \"../../../../data/SecurityKey\";\r\nimport AddSupplierContext from \"../../../../utils/ContextAPIs/Supplier/AddSupplierContext\";\r\n//** Service */\r\nimport { useAddEditContactMutation, useLazyGetContactBySupplierIdQuery, useLazyGetSupllierContactByContactQuery, } from \"../../../../app/services/contactAPI\";\r\n//** Component's */\r\nconst ContactGrid = React.lazy(() => import(\"../../../../common/features/component/Contact/ContactGrid\"));\r\n\r\nconst supplierSecurityKey = {\r\n  ADD: securityKey.ADDSUPPLIERCONTACT,\r\n  EDIT: securityKey.EDITSUPPLIERCONTACT,\r\n};\r\n\r\nconst SupplierContactDetail = ({ isEditablePage, isSearchFilterShow, contryIdCode }) => {\r\n\r\n  const { supplierId, isResponsibleUser, getSupplierCompletionCount } = useContext(AddSupplierContext);\r\n\r\n  const getCompletionCount = () => {\r\n    getSupplierCompletionCount(supplierId);\r\n  }\r\n\r\n  return (\r\n    /**\r\n      * This component displays an ContactGrid for the supplier module.\r\n      * This hook dynamically sets the API call based on the module (customer or supplier).\r\n    */\r\n    <div className=\"supplier-contacts\">\r\n      <ContactGrid\r\n        isSupplier={true}\r\n        isEditablePage={isEditablePage}\r\n        keyId={supplierId || 0}\r\n        isSearchFilterShow={isSearchFilterShow}\r\n        getContactByKeyId={useLazyGetContactBySupplierIdQuery}\r\n        addEditContactMutation={useAddEditContactMutation}\r\n        SecurityKey={!isResponsibleUser ? supplierSecurityKey : null}\r\n        getContactById={useLazyGetSupllierContactByContactQuery}\r\n        contryIdCode={contryIdCode}\r\n        getCompletionCount={getCompletionCount}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nSupplierContactDetail.propTypes = {\r\n  isEditablePage: PropTypes.bool.isRequired,\r\n  isSearchFilterShow: PropTypes.bool.isRequired,\r\n};\r\nexport default SupplierContactDetail;\r\n"],"names":["ContactGrid","React","supplierSecurityKey","ADD","securityKey","ADDSUPPLIERCONTACT","EDIT","EDITSUPPLIERCONTACT","_ref","isEditablePage","isSearchFilterShow","contryIdCode","supplierId","isResponsibleUser","getSupplierCompletionCount","useContext","AddSupplierContext","_jsx","className","children","isSupplier","keyId","getContactByKeyId","useLazyGetContactBySupplierIdQuery","addEditContactMutation","useAddEditContactMutation","SecurityKey","getContactById","useLazyGetSupllierContactByContactQuery","getCompletionCount"],"sourceRoot":""}