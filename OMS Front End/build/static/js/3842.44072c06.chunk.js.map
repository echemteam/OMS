{"version":3,"file":"static/js/3842.44072c06.chunk.js","mappings":"6KAMA,MAAMA,EAAiBC,EAAAA,MAAW,IAChC,kCAEIC,EAAqBD,EAAAA,MAAW,IACpC,qEAEIE,EAAmBF,EAAAA,MAAW,IAClC,kCAEIG,EAAsBH,EAAAA,MAAW,IACrC,kCAoIF,EAjIwBI,IAA+B,IAA9B,qBAAEC,GAAsBD,EAC/C,MAAM,UAAEE,EAAS,QAAEC,EAAO,YAAEC,IAAgBC,EAAAA,EAAAA,YAAWC,EAAAA,IAEhDC,EAAWC,IAAgBC,EAAAA,EAAAA,UAAS,KACpCC,EAAgBC,IAAqBF,EAAAA,EAAAA,WAAS,IAC9CG,EAAiBC,IAAsBJ,EAAAA,EAAAA,WAAS,IAChDK,EAAmBC,IAAwBN,EAAAA,EAAAA,UAAS,KACpDO,EAA+BC,IAAoCR,EAAAA,EAAAA,UAAS,KAC5ES,EAAwBC,IAA6BV,EAAAA,EAAAA,UAAS,CAAEW,aAAc,GAAIC,WAAY,MA2DrGC,EAAAA,EAAAA,qBAAoBnB,GAAS,MAC3BoB,mBAIF,MAAMA,EAAeC,UAAa,IAADC,EAAAC,EAAAC,EAAAC,EAC/B,MAAMC,EAAiBb,EAA8Bc,KAAIC,IAAI,CAC3DC,UAAWD,EAAKE,WAAa,EAC7BC,UAAWH,EAAKI,OAAS,GACzBC,UAAWL,EAAKM,OAAS,GACzBC,aAAcP,EAAKQ,aAAe,GAClCC,YAAa,IAAIC,KAAKV,EAAKS,cAAgB,IAAIC,KAC/CC,YAAa,IAAID,KAAKV,EAAKW,cAAgB,IAAID,KAC/CE,cAAeZ,EAAKY,eAAiB,GACrCC,kBAAmBb,EAAKa,mBAAqB,EAC7CC,kBAAmBd,EAAKc,mBAAqB,EAC7CC,qBAAsBf,EAAKe,sBAAwB,EACnDC,SAAUC,OAAOjB,EAAKkB,WAAa,EACnCC,SAAUF,OAAOjB,EAAKoB,OAAS,EAC/BC,KAAMrB,EAAKsB,MAAQ,EACnBC,cAAevB,EAAKwB,OAAS,EAC7BC,gBAAiBzB,EAAKyB,iBAAmB,EACzCC,cAAe1B,EAAK0B,eAAiB,EACrCC,gBAAiB3B,EAAK2B,iBAAmB,EACzCC,kBAAmB5B,EAAK4B,mBAAqB,EAC7CC,sBAAuB7B,EAAK6B,uBAAyB,GACrDC,WAAY9B,EAAK8B,YAAc,GAC/BC,KAAM/B,EAAKgC,WAAa,GACxBC,SAAUjC,EAAKiC,UAAY,MAEvBC,EAAe7D,EAAY8D,QAAQC,cACnCC,EAAc,CAClBvC,iBACAwC,cAAe,EACfC,WAAY,GACZC,KAAM,GACNC,YAAa,EACbpD,aAA0B,OAAZ6C,QAAY,IAAZA,GAAwB,QAAZxC,EAAZwC,EAAcQ,kBAAU,IAAAhD,GAAxBA,EAA0BiD,SAAuB,OAAZT,QAAY,IAAZA,GAAwB,QAAZvC,EAAZuC,EAAcQ,kBAAU,IAAA/C,OAAZ,EAAZA,EAA0BgD,SAAW,GACxFC,aAAc,EACdtD,WAAwB,OAAZ4C,QAAY,IAAZA,GAAwB,QAAZtC,EAAZsC,EAAcQ,kBAAU,IAAA9C,GAAxBA,EAA0BiD,WAAyB,OAAZX,QAAY,IAAZA,GAAwB,QAAZrC,EAAZqC,EAAcQ,kBAAU,IAAA7C,OAAZ,EAAZA,EAA0BgD,WAAa,GAC1FC,YAAa,SAEf5E,EAAqBmE,GACrBzD,GAAkB,EAAK,EAGzB,OACEmE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKC,SAAA,EAClBC,EAAAA,EAAAA,KAACpF,EAAkB,CAACqF,+BApDcC,IACpChE,EAA0BgE,EAAK,EAmDqDzE,eAAgBA,KAClGuE,EAAAA,EAAAA,KAAA,OAAKF,UAAU,sCAAqCC,UAClDC,EAAAA,EAAAA,KAAClF,EAAmB,CAACG,UAAWA,EAAWkF,oBA9DdC,IACjCtE,EAAqBsE,EAAY,EA6D8DxE,mBAAoBA,OAEjHoE,EAAAA,EAAAA,KAAA,OAAKF,UAAU,SAAQC,UACrBC,EAAAA,EAAAA,KAACnF,EAAgB,CAACI,UAAWA,EAAWoF,kBA9GfC,IAC7B,MAAMC,EAAYC,MAAMC,QAAQH,GAAoBA,EAAmB,CAACA,GAClEI,EAAe,IAAIpF,GACzBoF,EAAaC,QAAQJ,GACrBhF,EAAamF,EAAa,EA0G4D/E,gBAAiBA,OAErGqE,EAAAA,EAAAA,KAAA,OAAKF,UAAU,cAAaC,UAC1BC,EAAAA,EAAAA,KAACtF,EAAc,CAACY,UAAWA,EAAWO,kBAAmBA,EAAmB+E,sCAhErCV,IAC3ClE,EAAiCkE,EAAK,QAiEhC,C","sources":["pages/order/feature/orderItemDetail/OrderItemDetail.js"],"sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useContext, useImperativeHandle, useState } from \"react\";\r\nimport AddOrderContext from \"../../../../utils/Order/AddOrderContext\";\r\nimport SwalAlert from \"../../../../services/swalService/SwalService\";\r\n\r\n//** Component's */\r\nconst OrderItemsList = React.lazy(() =>\r\n  import(\"./feature/OrderItemDetails/OrderItemsList\")\r\n);\r\nconst ProductDetailsList = React.lazy(() =>\r\n  import(\"./feature/ProductDetails/ProductDetailsList\")\r\n);\r\nconst ProductPriceList = React.lazy(() =>\r\n  import(\"./feature/ProductPriceDetails/ProductPriceList\")\r\n);\r\nconst VerifyProductDetail = React.lazy(() =>\r\n  import(\"./feature/VerifyProductInfo/VerifyProductDetail\")\r\n);\r\n\r\nconst OrderItemDetail = ({ onhandleAddOrderData }) => {\r\n  const { productId, itemRef, documentRef } = useContext(AddOrderContext);\r\n\r\n  const [priceList, setPriceList] = useState([]);\r\n  const [isDocumentData, setIsDocumentData] = useState(false);\r\n  const [isVerifyProduct, setIsVerifyProduct] = useState(false);\r\n  const [verifyProductData, setVerifyProductData] = useState([]);\r\n  const [priceListAndVerifyProductData, setPriceListAndVerifyProductData] = useState([])\r\n  const [productDetailsListData, setProductDetailsListData] = useState({ documentName: \"\", base64File: \"\" });\r\n\r\n  const handlePriceListUpdate = (updatedPriceList) => {\r\n    const listToAdd = Array.isArray(updatedPriceList) ? updatedPriceList : [updatedPriceList];\r\n    const newPriceList = [...priceList];\r\n    newPriceList.push(...listToAdd);\r\n    setPriceList(newPriceList);\r\n  };\r\n\r\n  //** This Code for the duplicates size found  */\r\n  // const handlePriceListUpdate = (updatedPriceList) => {\r\n  //   const listToAdd = Array.isArray(updatedPriceList) ? updatedPriceList : [updatedPriceList];\r\n  //   const newPriceList = [...priceList];\r\n  //   // Check for duplicates\r\n  //   const duplicates = listToAdd.filter(itemToAdd =>\r\n  //     newPriceList.some(existingItem =>\r\n  //       existingItem.Size === itemToAdd.Size && existingItem.Unit === itemToAdd.Unit && existingItem.Price === itemToAdd.Price\r\n  //     )\r\n  //   );\r\n  //   if (duplicates.length > 0) {\r\n  //     confirm(\r\n  //       \"Duplicate items found?\",\r\n  //       \"Are you sure you want to add the same package size and unit\",\r\n  //       \"Yes\",\r\n  //       \"Cancel\"\r\n  //     ).then((confirmed) => {\r\n  //       if (confirmed) {\r\n  //         duplicates.forEach(itemToAdd => {\r\n  //           const index = newPriceList.findIndex(existingItem =>\r\n  //             existingItem.Size === itemToAdd.Size && existingItem.Unit === itemToAdd.Unit && existingItem.Price === itemToAdd.Price\r\n  //           );\r\n  //           if (index !== -1) {\r\n  //             newPriceList[index].Package = (newPriceList[index].Package || 1) * (itemToAdd.Package || 1);\r\n  //           }\r\n  //         });\r\n  //         setPriceList(newPriceList);\r\n  //         ToastService.success(SuccessMessage.Add_Success.replace(\"{0}\", \"Order Item\"));\r\n  //       }\r\n  //     });\r\n  //   } else {\r\n  //     newPriceList.push(...listToAdd);\r\n  //     setPriceList(newPriceList);\r\n  //     ToastService.success(SuccessMessage.Add_Success.replace(\"{0}\", \"Order Item\"));\r\n  //   }\r\n\r\n  // };\r\n\r\n  const handleVerifyProductDetail = (productlist) => {\r\n    setVerifyProductData(productlist);\r\n  };\r\n\r\n  const handlePriceListAndVerifyProductData = (data) => {\r\n    setPriceListAndVerifyProductData(data);\r\n  };\r\n\r\n  const handleProductDetailsListData = (data) => {\r\n    setProductDetailsListData(data);\r\n  };\r\n\r\n  useImperativeHandle(itemRef, () => ({\r\n    AddOrderItem,\r\n  }));\r\n\r\n\r\n  const AddOrderItem = async () => {\r\n    const orderItemsList = priceListAndVerifyProductData.map(item => ({\r\n      catalogId: item.CatalogId || 0,\r\n      casNumber: item.CASNo || \"\",\r\n      mdlNumber: item.MDLNo || \"\",\r\n      chemicalName: item.ProductName || \"\",\r\n      requestDate: new Date(item.requestDate) || new Date(),\r\n      promiseDate: new Date(item.promiseDate) || new Date(),\r\n      orderPriority: item.orderPriority || \"\",\r\n      referenceEntityId: item.referenceEntityId || 0,\r\n      orderItemStatusId: item.orderItemStatusId || 0,\r\n      orderItemSubStatusId: item.orderItemSubStatusId || 0,\r\n      quantity: Number(item.Quantity) || 0,\r\n      packSize: Number(item.Size) || 0,\r\n      unit: item.Unit || 0,\r\n      itemUnitPrice: item.Price || 0,\r\n      poItemUnitPrice: item.poItemUnitPrice || 0,\r\n      subTotalPrice: item.subTotalPrice || 0,\r\n      subTotalPOPrice: item.subTotalPOPrice || 0,\r\n      orderDisputTypeId: item.orderDisputTypeId || 0,\r\n      orderTimeCancelReason: item.orderTimeCancelReason || \"\",\r\n      entityType: item.entityType || \"\",\r\n      note: item.orderNote || \"\",\r\n      entityId: item.entityId || 0,\r\n    }));\r\n    const documentData = documentRef.current.getFormData();\r\n    const requestBody = {\r\n      orderItemsList, // the array of items\r\n      orderChargeId: 0,\r\n      chargeType: \"\",\r\n      name: \"\",\r\n      orderItemId: 0,\r\n      documentName: documentData?.attachment?.fileName ? documentData?.attachment?.fileName : \"\",\r\n      documentType: 0,\r\n      base64File: documentData?.attachment?.base64Data ? documentData?.attachment?.base64Data : \"\",\r\n      storagePath: \"Order\",\r\n    };\r\n    onhandleAddOrderData(requestBody)\r\n    setIsDocumentData(true)\r\n  }\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <ProductDetailsList onhandleProductDetailsListData={handleProductDetailsListData} isDocumentData={isDocumentData} />\r\n      <div className=\"col-xl-6 col-2xl-6 col-lg-12 col-12\">\r\n        <VerifyProductDetail productId={productId} onVerifyProductList={handleVerifyProductDetail} setIsVerifyProduct={setIsVerifyProduct} />\r\n      </div>\r\n      <div className=\"col-12\">\r\n        <ProductPriceList productId={productId} onPriceListUpdate={handlePriceListUpdate} isVerifyProduct={isVerifyProduct} />\r\n      </div>\r\n      <div className=\"col-12 mt-3\">\r\n        <OrderItemsList priceList={priceList} verifyProductData={verifyProductData} onHandlePriceListAndVerifyProductData={handlePriceListAndVerifyProductData} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrderItemDetail;\r\n"],"names":["OrderItemsList","React","ProductDetailsList","ProductPriceList","VerifyProductDetail","_ref","onhandleAddOrderData","productId","itemRef","documentRef","useContext","AddOrderContext","priceList","setPriceList","useState","isDocumentData","setIsDocumentData","isVerifyProduct","setIsVerifyProduct","verifyProductData","setVerifyProductData","priceListAndVerifyProductData","setPriceListAndVerifyProductData","productDetailsListData","setProductDetailsListData","documentName","base64File","useImperativeHandle","AddOrderItem","async","_documentData$attachm","_documentData$attachm2","_documentData$attachm3","_documentData$attachm4","orderItemsList","map","item","catalogId","CatalogId","casNumber","CASNo","mdlNumber","MDLNo","chemicalName","ProductName","requestDate","Date","promiseDate","orderPriority","referenceEntityId","orderItemStatusId","orderItemSubStatusId","quantity","Number","Quantity","packSize","Size","unit","Unit","itemUnitPrice","Price","poItemUnitPrice","subTotalPrice","subTotalPOPrice","orderDisputTypeId","orderTimeCancelReason","entityType","note","orderNote","entityId","documentData","current","getFormData","requestBody","orderChargeId","chargeType","name","orderItemId","attachment","fileName","documentType","base64Data","storagePath","_jsxs","className","children","_jsx","onhandleProductDetailsListData","data","onVerifyProductList","productlist","onPriceListUpdate","updatedPriceList","listToAdd","Array","isArray","newPriceList","push","onHandlePriceListAndVerifyProductData"],"sourceRoot":""}