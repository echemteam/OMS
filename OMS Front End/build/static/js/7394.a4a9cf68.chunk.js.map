{"version":3,"file":"static/js/7394.a4a9cf68.chunk.js","mappings":"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","sources":["pages/configuration/functionalConfiguration/features/functionalConfigurationList/manageResponsibleUsers/config/ManageResponsibleUsers.data.js","pages/configuration/functionalConfiguration/features/functionalConfigurationList/manageResponsibleUsers/feature/AddEditManageResponsibleUser.js","pages/configuration/functionalConfiguration/features/functionalConfigurationList/manageResponsibleUsers/feature/ManageResponsibleUserList.js","pages/configuration/functionalConfiguration/features/functionalConfigurationList/manageResponsibleUsers/ManageResponsibleUsers.js","pages/configuration/functionalConfiguration/features/functionalConfigurationList/functionalConfigurationViewTabs/FunctionalConfigurationViewTabs.js","pages/configuration/functionalConfiguration/features/functionalConfigurationList/functionalConfigurationViewDetail/FunctionalConfigurationViewDetail.js","pages/configuration/functionalConfiguration/features/functionalConfigurationList/viewFunctionalEvents/config/ViewFunctionalEvents.data.js","pages/configuration/functionalConfiguration/features/functionalConfigurationList/viewFunctionalEvents/ViewFunctionalEvents.js","pages/customerDetail/feature/customerBasicDetail/config/CustomerBasicDetail.data.js","utils/StatusColors/StatusColors.js"],"sourcesContent":["import { FormFieldTypes } from \"../../../../../../../data/formFieldType\";\r\nimport { GridColumnType } from \"../../../../../../../data/gridColumnType\";\r\n\r\nexport const AddEditResponsibleData = {\r\n    // name: \"Email From\"\r\n    initialState: { responsibleUserId: \"\" },\r\n    formFields: [\r\n        {\r\n            id: \"responsibleUserId\",\r\n            lable: \"Responsible User \",\r\n            Field_Name: \"Responsible User\",\r\n            fieldType: FormFieldTypes.SELECT,\r\n            dataField: \"responsibleUserId\",\r\n            fieldSetting: {\r\n                placeholder: \"Select Responsible User\",\r\n                isEnableOnChange: true,\r\n                isDisabled: false,\r\n            },\r\n            style: {\r\n                containerCss: \"col-xxl-12 col-xl-12 col-md-12 col-12 mb-input\",\r\n            },\r\n            validation: [{ type: \"require\" }],\r\n        },\r\n    ],\r\n    formSetting: {\r\n        isViewOnly: false\r\n    }\r\n};\r\n\r\nexport const manageResponsibleUsersData = {\r\n    columns: [\r\n        {\r\n            name: \"functionality Name\",\r\n            fieldName: \"functionalityName\",\r\n            colStyle: {\r\n                width: \"40%\",\r\n            },\r\n            allowShort: true,\r\n        },\r\n        {\r\n            name: \"responsible User Name\",\r\n            fieldName: \"responsibleUserName\",\r\n            colStyle: {\r\n                width: \"40%\",\r\n            },\r\n            allowShort: true,\r\n        },\r\n        {\r\n            name: \"Action\",\r\n            colStyle: {\r\n                width: \"20%\",\r\n            },\r\n            colType: GridColumnType.ACTION,\r\n            defaultAction: {\r\n                allowDelete: true,\r\n            },\r\n        },\r\n    ],\r\n};","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useRef, useState } from 'react'\r\nimport { AddEditResponsibleData } from '../config/ManageResponsibleUsers.data';\r\nimport FormCreator from '../../../../../../../components/Forms/FormCreator';\r\nimport Buttons from '../../../../../../../components/ui/button/Buttons';\r\nimport { useLazyGetAllUserQuery } from '../../../../../../../app/services/commonAPI';\r\nimport { excludingRoles } from '../../../../../../customerDetail/feature/customerBasicDetail/config/CustomerBasicDetail.data';\r\nimport { setDropDownOptionField } from '../../../../../../../utils/FormFields/FieldsSetting/SetFieldSetting';\r\nimport { useAddFunctionalitiesResponsiblesUserMutation } from '../../../../../../../app/services/configurationAPI';\r\nimport { onResetForm } from '../../../../../../../utils/FormFields/ResetForm/handleResetForm';\r\nimport ToastService from '../../../../../../../services/toastService/ToastService';\r\n\r\nconst AddEditManageResponsibleUser = (props) => {\r\n  const responsibleRef = useRef();\r\n  const [responsibleData, setResponsibleData] = useState(AddEditResponsibleData);\r\n\r\n  const [getAllUser, { isSuccess: isGetAllUserSucess, data: allGetAllUserData }] = useLazyGetAllUserQuery();\r\n  const [addFunctionalitiesResponsiblesUser, { isLoading: isAddFunctionalitiesResponsiblesUserLoading, isSuccess: isAddFunctionalitiesResponsiblesUserSuccess, data: allAddFunctionalitiesResponsiblesUserData, },] = useAddFunctionalitiesResponsiblesUserMutation();\r\n\r\n  useEffect(() => {\r\n    getAllUser()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (isGetAllUserSucess && allGetAllUserData) {\r\n      const filterData = allGetAllUserData.filter((item) => {\r\n        return (item.roleName === null || !excludingRoles.map((role) => role.toLowerCase()).includes(item.roleName.toLowerCase()));\r\n      });\r\n      // Remove duplicates based on fullName\r\n      const uniqueData = Array.from(new Map(filterData.map((item) => [item.fullName, item])).values());\r\n      setDropDownOptionField(uniqueData, 'userId', 'fullName', AddEditResponsibleData, 'responsibleUserId');\r\n    }\r\n  }, [isGetAllUserSucess, allGetAllUserData]);\r\n\r\n  useEffect(() => {\r\n    if (isAddFunctionalitiesResponsiblesUserSuccess && allAddFunctionalitiesResponsiblesUserData) {\r\n      if (allAddFunctionalitiesResponsiblesUserData.errorMessage.includes(\"exists\")) {\r\n        ToastService.warning(allAddFunctionalitiesResponsiblesUserData.errorMessage);\r\n        handleResetAndClose();\r\n        return;\r\n      }\r\n      ToastService.success(allAddFunctionalitiesResponsiblesUserData.errorMessage);\r\n      handleResetAndClose();\r\n      props.onGetData()\r\n    }\r\n  }, [isAddFunctionalitiesResponsiblesUserSuccess, allAddFunctionalitiesResponsiblesUserData]);\r\n\r\n  const handleAddEditResponsibleUser = () => {\r\n    const formData = responsibleRef.current.getFormData();\r\n    if (formData) {\r\n      let request = {\r\n        ...formData,\r\n        functionalityId: props.functionalityId ? props.functionalityId : 0,\r\n        responsibleUserId: formData.responsibleUserId && typeof formData.responsibleUserId === \"object\" ? formData.responsibleUserId.value : formData.responsibleUserId\r\n      };\r\n      addFunctionalitiesResponsiblesUser(request);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    onResetForm(responsibleData, setResponsibleData, null);\r\n  }, [props.isOpen])\r\n\r\n\r\n  const handleResetAndClose = () => {\r\n    onResetForm(responsibleData, setResponsibleData, null);\r\n    props.onClose();\r\n  };\r\n\r\n  return (\r\n    <div className=\"row mt-2 add-address-form\">\r\n      <FormCreator\r\n        config={responsibleData}\r\n        ref={responsibleRef}\r\n      />\r\n      <div className=\"col-md-12 mt-2\">\r\n        <div className=\"d-flex align-item-end justify-content-end\">\r\n          <Buttons\r\n            buttonTypeClassName=\"theme-button\"\r\n            buttonText=\"Save\"\r\n            onClick={handleAddEditResponsibleUser}\r\n            isLoading={isAddFunctionalitiesResponsiblesUserLoading}\r\n          />\r\n          <Buttons\r\n            buttonTypeClassName=\"dark-btn ml-5\"\r\n            buttonText=\"Cancel\"\r\n            onClick={handleResetAndClose}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddEditManageResponsibleUser","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useImperativeHandle, useRef, useState } from 'react'\r\nimport PropTypes from 'prop-types'; \r\nimport { manageResponsibleUsersData } from '../config/ManageResponsibleUsers.data';\r\nimport { useDeleteFunctionalitiesResponsiblesUserMutation, useGetFunctionalitiesResponsiblesMutation } from '../../../../../../../app/services/configurationAPI';\r\nimport ToastService from '../../../../../../../services/toastService/ToastService';\r\nimport SwalAlert from '../../../../../../../services/swalService/SwalService';\r\nimport FinalMolGrid from '../../../../../../../components/FinalMolGrid/FinalMolGrid';\r\n\r\nconst ManageResponsibleUserList = (props) => {\r\n\r\n  const molGridRef = useRef();\r\n  const { confirm } = SwalAlert();\r\n  const [listData, setListData] = useState();\r\n  const [totalRowCount, setTotalRowCount] = useState(0);\r\n\r\n  const [getFunctionalitiesResponsible, { isLoading: isGetFunctionalitiesResponsiblesLoading, isSuccess: isGetFunctionalitiesResponsiblesSuccess, data: isGetFunctionalitiesResponsiblesData }] = useGetFunctionalitiesResponsiblesMutation();\r\n  const [deleteFunctionalitiesResponsiblesUser, { isSuccess: isDeleteFunctionalitiesResponsiblesUserSuccess, data: isDeleteFunctionalitiesResponsiblesUserData }] = useDeleteFunctionalitiesResponsiblesUserMutation();\r\n\r\n  const getLists = (pageObject, sortingString) => {\r\n    const request = {\r\n      pagination: {\r\n        pageNumber: pageObject.pageNumber,\r\n        pageSize: pageObject.pageSize,\r\n      },\r\n      filters: { searchText: \"\" },\r\n      sortString: sortingString,\r\n      functionalityId: props.functionalityId\r\n    };\r\n    getFunctionalitiesResponsible(request);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isDeleteFunctionalitiesResponsiblesUserSuccess && isDeleteFunctionalitiesResponsiblesUserData) {\r\n      ToastService.success(isDeleteFunctionalitiesResponsiblesUserData.errorMessage);\r\n      const currentPageObject = molGridRef.current.getCurrentPageObject();\r\n      getLists(currentPageObject, molGridRef.current.generateSortingString());\r\n    }\r\n  }, [isDeleteFunctionalitiesResponsiblesUserSuccess, isDeleteFunctionalitiesResponsiblesUserData]);\r\n\r\n  const handlePageChange = (page) => {\r\n    getLists(page, molGridRef.current.generateSortingString());\r\n  };\r\n\r\n  const handleSorting = (shortString) => {\r\n    getLists(molGridRef.current.getCurrentPageObject(), shortString);\r\n  };\r\n\r\n  const onGetData = () => {\r\n    if (molGridRef.current) {\r\n      const defaultPageObject = molGridRef.current.getCurrentPageObject();\r\n      getLists(defaultPageObject, molGridRef.current.generateSortingString());\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isGetFunctionalitiesResponsiblesSuccess && isGetFunctionalitiesResponsiblesData) {\r\n      if (isGetFunctionalitiesResponsiblesData) {\r\n        setListData(isGetFunctionalitiesResponsiblesData.dataSource);\r\n      }\r\n      if (isGetFunctionalitiesResponsiblesData.totalRecord) {\r\n        setTotalRowCount(isGetFunctionalitiesResponsiblesData.totalRecord);\r\n      }\r\n    }\r\n  }, [isGetFunctionalitiesResponsiblesSuccess, isGetFunctionalitiesResponsiblesData]);\r\n\r\n  const handleDeleteClick = (data) => {\r\n    confirm(\"Delete?\", \"Are you sure you want to Delete?\", \"Delete\", \"Cancel\"\r\n    ).then((confirmed) => {\r\n      if (confirmed) {\r\n        deleteFunctionalitiesResponsiblesUser(data.functionalitiesResponsiblesId);\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (molGridRef.current) {\r\n      const currentPageObject = molGridRef.current.getCurrentPageObject();\r\n      const currentsortingString = molGridRef.current.generateSortingString();\r\n      const request = {\r\n        pagination: {\r\n          pageNumber: currentPageObject.pageNumber,\r\n          pageSize: currentPageObject.pageSize,\r\n        },\r\n        filters: { searchText: \"\" },\r\n        sortString: currentsortingString,\r\n        functionalityId: props.functionalityId\r\n\r\n      };\r\n      getFunctionalitiesResponsible(request);\r\n    }\r\n  }, []);\r\n\r\n  const actionHandler = {\r\n    DELETE: handleDeleteClick,\r\n  };\r\n\r\n  useImperativeHandle(props.childRef, () => ({\r\n    callChildFunction: onGetData,\r\n  }));\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-md-12 table-striped api-provider\">\r\n        <FinalMolGrid\r\n          ref={molGridRef}\r\n          configuration={manageResponsibleUsersData}\r\n          dataSource={listData}\r\n          allowPagination={true}\r\n          pagination={{\r\n            totalCount: totalRowCount,\r\n            pageSize: 20,\r\n            currentPage: 1,\r\n          }}\r\n          onPageChange={handlePageChange}\r\n          onSorting={handleSorting}\r\n          isLoading={isGetFunctionalitiesResponsiblesLoading}\r\n          onActionChange={actionHandler}\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nManageResponsibleUserList.propTypes = {\r\n  functionalityId: PropTypes.number.isRequired,\r\n  childRef: PropTypes.shape({\r\n    current: PropTypes.shape({\r\n      callChildFunction: PropTypes.func,\r\n    }),\r\n  }),\r\n};\r\nexport default ManageResponsibleUserList","import React, { useRef, useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport AddEditManageResponsibleUser from './feature/AddEditManageResponsibleUser'\r\nimport ManageResponsibleUserList from './feature/ManageResponsibleUserList'\r\nimport CardSection from '../../../../../../components/ui/card/CardSection'\r\nimport { AppIcons } from '../../../../../../data/appIcons'\r\nimport SidebarModel from '../../../../../../components/ui/sidebarModel/SidebarModel'\r\n\r\nconst ManageResponsibleUsers = (props) => {\r\n\r\n    const childRef = useRef();\r\n    const [isModelOpen, setIsModelOpen] = useState(false);\r\n\r\n    const handleToggleModal = () => {\r\n        setIsModelOpen(true);\r\n    };\r\n\r\n    const onSidebarClose = () => {\r\n        setIsModelOpen(false);\r\n    };\r\n\r\n    const onGetData = () => {\r\n        if (childRef.current) {\r\n            childRef.current.callChildFunction();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <CardSection\r\n                cardTitle=\"Manage Responsible Users\"\r\n                buttonClassName=\"btn theme-button\"\r\n                // rightButton={buttonVisible ? true : false}\r\n                rightButton={true}\r\n                buttonText=\"Add\"\r\n                textWithIcon={true}\r\n                iconImg={AppIcons.PlusIcon}\r\n                titleButtonClick={handleToggleModal}\r\n            >\r\n                <ManageResponsibleUserList\r\n                    functionalityId={props.functionalityId}\r\n                    childRef={childRef}\r\n                />\r\n            </CardSection>\r\n\r\n            <SidebarModel\r\n                modalTitle=\"Add Responsible User\"\r\n                contentClass=\"content-35\"\r\n                onClose={onSidebarClose}\r\n                modalTitleIcon={AppIcons.AddIcon}\r\n                isOpen={isModelOpen}\r\n            >\r\n                <AddEditManageResponsibleUser\r\n                    onClose={onSidebarClose}\r\n                    isOpen={isModelOpen}\r\n                    functionalityId={props.functionalityId}\r\n                    onGetData={onGetData}\r\n                />\r\n            </SidebarModel>\r\n        </div>\r\n    )\r\n}\r\nManageResponsibleUsers.propTypes = {\r\n    functionalityId: PropTypes.number.isRequired,\r\n};\r\nexport default ManageResponsibleUsers","import React from 'react'\r\nimport PropTypes from 'prop-types'; \r\nimport RenderTabs from '../../../../../../components/ui/tabs/RenderTabs';\r\nimport ManageResponsibleUsers from '../manageResponsibleUsers/ManageResponsibleUsers';\r\nimport ViewFunctionalEvents from '../viewFunctionalEvents/ViewFunctionalEvents';\r\n\r\nconst FunctionalConfigurationViewTabs = (props) => {\r\n    const tabs = [\r\n        {\r\n            sMenuItemCaption: \"Manage Responsible Users\",\r\n            icon: \"fa fa-user\",\r\n            component: (\r\n                <div className=\"mt-2\">\r\n                    <ManageResponsibleUsers functionalityId={props.functionalityId} />\r\n                </div>\r\n            ),\r\n            // isVisible: hasAddressPermission.hasAccess,\r\n        },\r\n        {\r\n            sMenuItemCaption: \"View Functional Events\",\r\n            icon: \"fa fa-calendar\",\r\n            component: (\r\n                <div className=\"mt-2\">\r\n                    <ViewFunctionalEvents functionalityId={props.functionalityId} />\r\n                </div>\r\n            ),\r\n            // isVisible: hasContactPermission.hasAccess,\r\n        },\r\n    ];\r\n    return (\r\n        <div>\r\n            <RenderTabs tabs={tabs} />\r\n        </div>\r\n    )\r\n}\r\nFunctionalConfigurationViewTabs.propTypes = {\r\n    functionalityId: PropTypes.number.isRequired,\r\n};\r\nexport default FunctionalConfigurationViewTabs","import React from 'react'\r\nimport FunctionalConfigurationViewTabs from '../functionalConfigurationViewTabs/FunctionalConfigurationViewTabs'\r\nimport { AppIcons } from '../../../../../../data/appIcons'\r\nimport { useNavigate, useParams } from 'react-router-dom'\r\nimport { decryptUrlData } from '../../../../../../services/CryptoService'\r\nimport Buttons from '../../../../../../components/ui/button/Buttons'\r\n\r\nconst FunctionalConfigurationViewDetail = () => {\r\n    const { id, data } = useParams();\r\n    const functionalityId = id ? decryptUrlData(id) : 0;\r\n    const moduleName = data ? decryptUrlData(data) : '';\r\n    const navigate = useNavigate();\r\n\r\n    const BackButton = () => {\r\n        navigate(\"/FunctionalConfiguration\");\r\n    }\r\n\r\n    return (\r\n\r\n        <div className=''>\r\n            <div class=\"main-top-title p-2\">\r\n                <div class=\"left-section\">\r\n                    <div class=\"page-title\">\r\n                        <h3>{moduleName}</h3>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <Buttons\r\n                        buttonTypeClassName=\"dark-btn\"\r\n                        iconImg={AppIcons.BackArrowIcon}\r\n                        buttonText=\"Back\"\r\n                        textWithIcon={true}\r\n                        imagePath={AppIcons.BackArrowIcon}\r\n                        onClick={BackButton} />\r\n                </div>\r\n            </div>\r\n            <FunctionalConfigurationViewTabs functionalityId={functionalityId} />\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default FunctionalConfigurationViewDetail","import { GridColumnType } from \"../../../../../../../data/gridColumnType\";\r\n\r\nexport const viewFunctionalEventsData = {\r\n  columns: [\r\n    {\r\n      name: \"functionality\",\r\n      fieldName: \"functionalityName\",\r\n      colStyle: {\r\n        width: \"20%\",\r\n      },\r\n      allowShort: true,\r\n    },\r\n    {\r\n      name: \"event\",\r\n      fieldName: \"eventName\",\r\n      colStyle: {\r\n        width: \"25%\",\r\n      },\r\n      allowShort: true,\r\n    },\r\n    {\r\n      name: \"event Date\",\r\n      colStyle: {\r\n        width: \"20%\",\r\n      },\r\n      fieldName: \"eventDate\",\r\n      colType: GridColumnType.DATE,\r\n      colSettings: {\r\n        isUTC: true,\r\n        format: \"MM/DD/YYYY hh:mm A \",\r\n      },\r\n    },\r\n    {\r\n      name: \"description\",\r\n      fieldName: \"description\",\r\n      colStyle: {\r\n        width: \"35%\",\r\n      },\r\n      allowShort: true,\r\n    },\r\n\r\n  ],\r\n\r\n};","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useRef, useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { viewFunctionalEventsData } from './config/ViewFunctionalEvents.data'\r\nimport { useGetFunctionalityEventsMutation } from '../../../../../../app/services/configurationAPI';\r\nimport CardSection from '../../../../../../components/ui/card/CardSection';\r\nimport FinalMolGrid from '../../../../../../components/FinalMolGrid/FinalMolGrid';\r\n\r\nconst ViewFunctionalEvents = (props) => {\r\n  const molGridRef = useRef();\r\n  const [listData, setListData] = useState();\r\n  const [totalRowCount, setTotalRowCount] = useState(0);\r\n  const [getFunctionalityEvents, { isLoading: isGetFunctionalityEventsLoading, isSuccess: isGetFunctionalityEventsSuccess, data: isGetFunctionalityEventsData }] = useGetFunctionalityEventsMutation();\r\n\r\n  const getLists = (pageObject, sortingString) => {\r\n    const request = {\r\n      pagination: {\r\n        pageNumber: pageObject.pageNumber,\r\n        pageSize: pageObject.pageSize,\r\n      },\r\n      filters: { searchText: \"\" },\r\n      sortString: sortingString,\r\n      functionalityId: props.functionalityId\r\n    };\r\n    getFunctionalityEvents(request);\r\n  };\r\n\r\n  const handlePageChange = (page) => {\r\n    getLists(page, molGridRef.current.generateSortingString());\r\n  };\r\n\r\n  const handleSorting = (shortString) => {\r\n    getLists(molGridRef.current.getCurrentPageObject(), shortString);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isGetFunctionalityEventsSuccess && isGetFunctionalityEventsData) {\r\n      if (isGetFunctionalityEventsData) {\r\n        setListData(isGetFunctionalityEventsData.dataSource);\r\n      }\r\n      if (isGetFunctionalityEventsData.totalRecord) {\r\n        setTotalRowCount(isGetFunctionalityEventsData.totalRecord);\r\n      }\r\n    }\r\n  }, [isGetFunctionalityEventsSuccess, isGetFunctionalityEventsData]);\r\n\r\n  useEffect(() => {\r\n    if (molGridRef.current) {\r\n      const currentPageObject = molGridRef.current.getCurrentPageObject();\r\n      const currentsortingString = molGridRef.current.generateSortingString();\r\n      const request = {\r\n        pagination: {\r\n          pageNumber: currentPageObject.pageNumber,\r\n          pageSize: currentPageObject.pageSize,\r\n        },\r\n        filters: { searchText: \"\" },\r\n        sortString: currentsortingString,\r\n        functionalityId: props.functionalityId\r\n      };\r\n      getFunctionalityEvents(request);\r\n    }\r\n  }, [props.functionalityId]);\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-md-12 table-striped api-provider view-function-provider\">\r\n        <CardSection\r\n          cardTitle=\"Functional Events\"\r\n          buttonClassName=\"btn theme-button\"\r\n        >\r\n          <FinalMolGrid\r\n            ref={molGridRef}\r\n            configuration={viewFunctionalEventsData}\r\n            dataSource={listData}\r\n            allowPagination={false}\r\n            pagination={{\r\n              totalCount: totalRowCount,\r\n              pageSize: 20,\r\n              currentPage: 1,\r\n            }}\r\n            onPageChange={handlePageChange}\r\n            onSorting={handleSorting}\r\n            isLoading={isGetFunctionalityEventsLoading}\r\n          />\r\n        </CardSection>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nViewFunctionalEvents.propTypes = {\r\n  functionalityId: PropTypes.number.isRequired,\r\n};\r\nexport default ViewFunctionalEvents","import { SuccessMessage } from \"../../../../../data/appMessages\";\r\nimport { FormFieldTypes } from \"../../../../../data/formFieldType\";\r\nimport { GridColumnType } from \"../../../../../data/gridColumnType\";\r\nimport { getLabelClass } from \"../../../../../utils/StatusColors/StatusColors\";\r\n\r\nexport const excludingRoles = [\"Admin\", \"manager\"];\r\n\r\nexport const customerbasicData = {\r\n  initialState: {\r\n    name: \"\",\r\n    groupTypeId: 1,\r\n    countryId: 233,\r\n    territoryId: 2,\r\n    emailAddress: \"\",\r\n    website: \"\",\r\n    note: \"\",\r\n    isSubCustomer: false,\r\n    taxId: \"\",\r\n    isBuyingForThirdParty: false,\r\n    responsibleUserId: \"\",\r\n    customerNoteId: \"\",\r\n    incotermId: 11,\r\n    attachment: \"\",\r\n    base64File: \"\",\r\n    storagePath: \"\",\r\n  },\r\n  formFields: [\r\n    {\r\n      id: \"attachment\",\r\n      lable: \"Customer Logo \",\r\n      Field_Name: \"Attachment\",\r\n      fieldType: FormFieldTypes.IMAGE,\r\n      dataField: \"attachment\",\r\n      fieldSetting: {\r\n        placeholder: \"Upload Attachment\",\r\n        allowSpace: true,\r\n        isImageUpload: true,\r\n        isButtonVisible: true,\r\n        isCustomButtonVisible: false,\r\n        acceptedFiles: \".png , .jpg \",\r\n      },\r\n      style: {\r\n        containerCss:\r\n          \"col-xxl-4 col-xl-4 col-md-4 col-12 mb-input mb-0 custom-file-upload-section validation-image-uploader customer-logo-sec\",\r\n      },\r\n    },\r\n    // {\r\n    //   id: \"\",\r\n    //   lable: \"\",\r\n    //   Field_Name: \"\",\r\n    //   dataField: \"\",\r\n    //   style: {\r\n    //     containerCss: \"col-xxl-4 col-xl-4 col-md-4 col-4 col-4 remove-line\",\r\n    //   },\r\n    // },\r\n    {\r\n      id: \"name\",\r\n      lable: \"Customer Name \",\r\n      Field_Name: \"Customer Name\",\r\n      fieldType: FormFieldTypes.INPUT,\r\n      dataField: \"name\",\r\n      fieldSetting: {\r\n        placeholder: \"Enter Customer Name\",\r\n        allowSpace: true,\r\n        maxLength: 50,\r\n        exemptBoundarySpaces: true,\r\n      },\r\n      validation: [{ type: \"require\" }, { type: \"uniqueName\" }],\r\n      style: {\r\n        containerCss: \"col-xxl-8 col-xl-8 col-md-8 col-12 mb-input\",\r\n      },\r\n      inputButtonGroupConfig: {\r\n        isPrimaryButtonVisible: false,\r\n        // primaryButtonText: 'Verify',\r\n        infoButtonConfig: {\r\n          isInfoButtonVisible: true,\r\n          infoButtonIcon: \"fa-search\",\r\n          infoButtonTooltip: \"Customer Information\",\r\n        },\r\n      },\r\n    },\r\n    {\r\n      id: \"emailAddress\",\r\n      lable: \"Email \",\r\n      Field_Name: \"Email\",\r\n      fieldType: FormFieldTypes.INPUT,\r\n      dataField: \"emailAddress\",\r\n      fieldSetting: {\r\n        placeholder: \"Enter Email\",\r\n        allowSpace: false,\r\n        maxLength: 65,\r\n        exemptBoundarySpaces: true,\r\n      },\r\n      validation: [{ type: \"require\" }, { type: \"email\" }],\r\n      style: {\r\n        containerCss: \"col-xxl-6 col-xl-6 col-md-6 col-12 mb-input\",\r\n      },\r\n    },\r\n    {\r\n      id: \"website\",\r\n      lable: \"Website \",\r\n      Field_Name: \"Website\",\r\n      fieldType: FormFieldTypes.INPUT,\r\n      dataField: \"website\",\r\n      fieldSetting: {\r\n        placeholder: \"https://www.xyz.com\",\r\n        allowSpace: false,\r\n        maxLength: 250,\r\n      },\r\n      validation: [{ type: \"require\" }, { type: \"website\" }],\r\n      style: {\r\n        containerCss: \"col-xxl-6 col-xl-6 col-md-6 col-12 mb-input\",\r\n      },\r\n    },\r\n\r\n    {\r\n      id: \"groupTypeId\",\r\n      lable: \"Group Type \",\r\n      Field_Name: \"Group Type\",\r\n      fieldType: FormFieldTypes.SELECT,\r\n      dataField: \"groupTypeId\",\r\n      fieldSetting: {\r\n        placeholder: \"Select Group Type\",\r\n        isEnableOnChange: true,\r\n      },\r\n      validation: [{ type: \"require\" }],\r\n      style: {\r\n        containerCss: \"col-xxl-3 col-xl-4 col-md-6 col-12 mb-input\",\r\n      },\r\n    },\r\n\r\n    {\r\n      id: \"countryId\",\r\n      lable: \"Country \",\r\n      Field_Name: \"Country\",\r\n      fieldType: FormFieldTypes.SELECT,\r\n      dataField: \"countryId\",\r\n      fieldSetting: {\r\n        placeholder: \"Select Country\",\r\n        isEnableOnChange: true,\r\n      },\r\n      validation: [{ type: \"require\" }],\r\n      style: {\r\n        containerCss: \"col-xxl-3 col-xl-4 col-md-6 col-12 mb-input\",\r\n      },\r\n    },\r\n    {\r\n      id: \"territoryId\",\r\n      lable: \"Territory \",\r\n      Field_Name: \"Territory\",\r\n      fieldType: FormFieldTypes.SELECT,\r\n      dataField: \"territoryId\",\r\n      fieldSetting: {\r\n        placeholder: \"Select Territory\",\r\n        isEnableOnChange: true,\r\n      },\r\n      validation: [{ type: \"require\" }],\r\n      style: {\r\n        containerCss: \"col-xxl-3 col-xl-4 col-md-4 col-12 mb-input\",\r\n      },\r\n    },\r\n    {\r\n      id: \"incotermId\",\r\n      lable: \"Incoterm\",\r\n      Field_Name: \"Incoterm\",\r\n      fieldType: FormFieldTypes.SELECT,\r\n      dataField: \"incotermId\",\r\n      fieldSetting: {\r\n        placeholder: \"Select Incoterm\",\r\n        isEnableOnChange: true,\r\n      },\r\n      validation: [{ type: \"require\" }],\r\n      style: {\r\n        containerCss: \"col-xxl-3 col-xl-4 col-md-4 col-12 mb-input\",\r\n      },\r\n    },\r\n    {\r\n      id: \"taxId\",\r\n      lable: \"Tax Id \",\r\n      Field_Name: \"Tax Id\",\r\n      fieldType: FormFieldTypes.INPUT,\r\n      dataField: \"taxId\",\r\n      fieldSetting: {\r\n        placeholder: \"Tax Id\",\r\n        allowSpace: false,\r\n        minLength: 10,\r\n        maxLength: 10,\r\n        exemptBoundarySpaces: true,\r\n      },\r\n      inputIcon: {\r\n        isIconShow: true,\r\n        faIcon: \"fa-info-circle\",\r\n        message: SuccessMessage.DefaultUSATaxId,\r\n      },\r\n      style: {\r\n        containerCss: \"col-xxl-3 col-xl-3 col-md-4 col-12 mb-input\",\r\n      },\r\n    },\r\n    {\r\n      id: \"responsibleUserId\",\r\n      lable: \"Responsible User \",\r\n      Field_Name: \"Responsible User\",\r\n      fieldType: FormFieldTypes.SELECT,\r\n      dataField: \"responsibleUserId\",\r\n      fieldSetting: {\r\n        placeholder: \"Select Responsible User\",\r\n        isEnableOnChange: true,\r\n        isDisabled: false,\r\n      },\r\n      style: {\r\n        containerCss: \"col-xxl-4 col-xl-4 col-md-4 col-12 mb-input\",\r\n      },\r\n    },\r\n    {\r\n      id: \"isBuyingForThirdParty\",\r\n      lable: \"Is Buying for Third Party\",\r\n      Field_Name: \"Is Buying for Third Party\",\r\n      fieldType: FormFieldTypes.CHECKBOX,\r\n      dataField: \"isBuyingForThirdParty\",\r\n      style: {\r\n        containerCss:\r\n          \"col-xxl-2 col-xl-2 col-md-3 col-12 pt-2 mb-input margin-top-checkbox mt-2\",\r\n      },\r\n    },\r\n    {\r\n      id: \"isSubCustomer\",\r\n      lable: \"Is Sub Customer\",\r\n      Field_Name: \"Is Sub Customer\",\r\n      fieldType: FormFieldTypes.CHECKBOX,\r\n      dataField: \"isSubCustomer\",\r\n      style: {\r\n        containerCss:\r\n          \"col-xxl-2 col-xl-2 col-md-3 col-12 md-pt-0 pt-2 mb-input margin-top-checkbox margin-left0-checkbox mt-2\",\r\n      },\r\n    },\r\n    {\r\n      id: \"note\",\r\n      lable: \"Notes \",\r\n      Field_Name: \"Notes\",\r\n      fieldType: FormFieldTypes.CKEDITOR,\r\n      dataField: \"note\",\r\n      fieldSetting: {\r\n        placeholder: \"Enter Notes\",\r\n        maxLength: 1000,\r\n      },\r\n      // validation: [{ type: \"require\" }],\r\n      style: {\r\n        containerCss: \"col-xxl-5 col-xl-5 col-md-12 col-12 mb-input mb-0\",\r\n      },\r\n    },\r\n  ],\r\n  formSetting: {\r\n    isViewOnly: false,\r\n  },\r\n};\r\n\r\nexport const basicInfoData = {\r\n  columns: [\r\n    {\r\n      name: \"Name\",\r\n      fieldName: \"name\",\r\n      width: \"15%\",\r\n      // allowShort: true,\r\n    },\r\n    {\r\n      name: \"Tax Id\",\r\n      fieldName: \"taxId\",\r\n      width: \"15%\",\r\n      // allowShort: true,\r\n    },\r\n    {\r\n      name: \"Country\",\r\n      fieldName: \"countryName\",\r\n      width: \"15%\",\r\n      // allowShort: true,\r\n    },\r\n\r\n    {\r\n      name: \"Email\",\r\n      fieldName: \"emailAddress\",\r\n      width: \"15%\",\r\n      // allowShort: true,\r\n    },\r\n    {\r\n      name: \"Group Type\",\r\n      fieldName: \"groupType\",\r\n      width: \"15%\",\r\n      // allowShort: true,\r\n    },\r\n    {\r\n      name: \"Status\",\r\n      fieldName: \"status\",\r\n      allowShort: false,\r\n      colType: GridColumnType.LABLE,\r\n      width: \"15%\",\r\n      colSettings: {\r\n        valueField: \"status\",\r\n        getLableClass: getLabelClass,\r\n      },\r\n    },\r\n    {\r\n      name: \"Action\",\r\n      width: \"10%\",\r\n      colType: GridColumnType.ACTION,\r\n      defaultAction: {\r\n        allowEdit: true,\r\n        allowDisable: false,\r\n      },\r\n    },\r\n  ],\r\n};\r\n","export const getLabelClass = (value) => {\r\n    switch (value) {\r\n      case \"Active\":\r\n        return \"status-btn badge-gradient-success\";\r\n      case \"Open\":\r\n        return \"status-btn badge-gradient-info\";\r\n      case \"In Active\":\r\n        return \"status-btn badge-gradient-danger\";\r\n      case \"Pending\":\r\n        return \"status-btn badge-gradient-Pending\";\r\n      case \"In progress\":\r\n        return \"status-btn badge-gradient-theme\";\r\n      case \"Submitted\":\r\n        return \"status-btn badge-gradient-Submitted\";\r\n      case \"Approved\":\r\n        return \"status-btn badge-gradient-Approved\";\r\n      case \"Freeze\":\r\n        return \"status-btn badge-gradient-Frozen\";\r\n      case \"Block\":\r\n        return \"status-btn badge-gradient-Blocked\";\r\n      case \"Reject\":\r\n        return \"status-btn badge-gradient-reject\";\r\n      case \"Disable\":\r\n        return \"status-btn badge-gradient-disabled\";\r\n      default:\r\n        return \"status-btn badge-gradient-info\";\r\n    }\r\n  };"],"names":["AddEditResponsibleData","initialState","responsibleUserId","formFields","id","lable","Field_Name","fieldType","FormFieldTypes","SELECT","dataField","fieldSetting","placeholder","isEnableOnChange","isDisabled","style","containerCss","validation","type","formSetting","isViewOnly","manageResponsibleUsersData","columns","name","fieldName","colStyle","width","allowShort","colType","GridColumnType","ACTION","defaultAction","allowDelete","props","responsibleRef","useRef","responsibleData","setResponsibleData","useState","getAllUser","isSuccess","isGetAllUserSucess","data","allGetAllUserData","useLazyGetAllUserQuery","addFunctionalitiesResponsiblesUser","isLoading","isAddFunctionalitiesResponsiblesUserLoading","isAddFunctionalitiesResponsiblesUserSuccess","allAddFunctionalitiesResponsiblesUserData","useAddFunctionalitiesResponsiblesUserMutation","useEffect","filterData","filter","item","roleName","excludingRoles","map","role","toLowerCase","includes","uniqueData","Array","from","Map","fullName","values","setDropDownOptionField","errorMessage","ToastService","warning","handleResetAndClose","success","onGetData","onResetForm","isOpen","onClose","_jsxs","className","children","_jsx","FormCreator","config","ref","Buttons","buttonTypeClassName","buttonText","onClick","handleAddEditResponsibleUser","formData","current","getFormData","request","functionalityId","value","molGridRef","confirm","SwalAlert","listData","setListData","totalRowCount","setTotalRowCount","getFunctionalitiesResponsible","isGetFunctionalitiesResponsiblesLoading","isGetFunctionalitiesResponsiblesSuccess","isGetFunctionalitiesResponsiblesData","useGetFunctionalitiesResponsiblesMutation","deleteFunctionalitiesResponsiblesUser","isDeleteFunctionalitiesResponsiblesUserSuccess","isDeleteFunctionalitiesResponsiblesUserData","useDeleteFunctionalitiesResponsiblesUserMutation","getLists","pageObject","sortingString","pagination","pageNumber","pageSize","filters","searchText","sortString","currentPageObject","getCurrentPageObject","generateSortingString","defaultPageObject","dataSource","totalRecord","currentsortingString","actionHandler","DELETE","then","confirmed","functionalitiesResponsiblesId","useImperativeHandle","childRef","callChildFunction","FinalMolGrid","configuration","allowPagination","totalCount","currentPage","onPageChange","page","onSorting","shortString","onActionChange","isModelOpen","setIsModelOpen","onSidebarClose","CardSection","cardTitle","buttonClassName","rightButton","textWithIcon","iconImg","AppIcons","PlusIcon","titleButtonClick","handleToggleModal","ManageResponsibleUserList","SidebarModel","modalTitle","contentClass","modalTitleIcon","AddIcon","AddEditManageResponsibleUser","tabs","sMenuItemCaption","icon","component","ManageResponsibleUsers","ViewFunctionalEvents","RenderTabs","FunctionalConfigurationViewDetail","useParams","decryptUrlData","moduleName","navigate","useNavigate","class","BackArrowIcon","imagePath","BackButton","FunctionalConfigurationViewTabs","viewFunctionalEventsData","DATE","colSettings","isUTC","format","getFunctionalityEvents","isGetFunctionalityEventsLoading","isGetFunctionalityEventsSuccess","isGetFunctionalityEventsData","useGetFunctionalityEventsMutation","customerbasicData","groupTypeId","countryId","territoryId","emailAddress","website","note","isSubCustomer","taxId","isBuyingForThirdParty","customerNoteId","incotermId","attachment","base64File","storagePath","IMAGE","allowSpace","isImageUpload","isButtonVisible","isCustomButtonVisible","acceptedFiles","INPUT","maxLength","exemptBoundarySpaces","inputButtonGroupConfig","isPrimaryButtonVisible","infoButtonConfig","isInfoButtonVisible","infoButtonIcon","infoButtonTooltip","minLength","inputIcon","isIconShow","faIcon","message","SuccessMessage","DefaultUSATaxId","CHECKBOX","CKEDITOR","LABLE","getLabelClass"],"sourceRoot":""}