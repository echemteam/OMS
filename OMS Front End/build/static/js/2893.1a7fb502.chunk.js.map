{"version":3,"file":"static/js/2893.1a7fb502.chunk.js","mappings":"uJAKA,MA8EA,EA9EiBA,IAYV,IAZW,KAChBC,EAAO,GAAE,YACTC,EAAc,gBAAgBD,IAAM,MACpCE,EAAK,SACLC,EAAQ,aACRC,EAAY,aACZC,EAAY,OACZC,EAAM,UACNC,EAAS,UACTC,EAAS,UACTC,EAAS,WACTC,GACDX,EAEC,MAAOY,EAAiBC,IAAsBC,EAAAA,EAAAA,UAAS,CAAC,IAwBxDC,EAAAA,EAAAA,YAAU,KAtBeC,MAEvB,MAAMC,EAAe,IAAKL,GAEtBJ,IACFS,EAAaT,UAAYA,GAGvBC,IACFQ,EAAaR,UAAYA,GAOvBE,IACFM,EAAaC,SAAWP,GAE1BE,EAAmBI,EAAa,EAIhCD,EAAkB,GACjB,CAACR,EAAWC,IAQf,OACEU,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,UACxBF,EAAAA,EAAAA,KAAA,YACEC,UAAU,kBACVlB,YAAaA,EACbC,MAAOA,EACPC,SAZqBkB,IACrBlB,GACFA,EAASkB,EACX,EAUIC,KAAMlB,EACNmB,KAAMlB,EACNC,OAAQA,EACRkB,SAAUf,KACNE,KAEF,C","sources":["components/ui/inputs/textArea/TextArea.js"],"sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./TextArea.scss\"\r\n\r\nconst TextArea = ({\r\n  name = \"\",\r\n  placeholder = `Please Enter ${name}`,\r\n  value,\r\n  onChange,\r\n  textareaRows,\r\n  textareaCols,\r\n  onBlur,\r\n  minLength,\r\n  maxLength,\r\n  isDisable,\r\n  isReadOnly,\r\n}) => {\r\n\r\n  const [inputAttributes, setInputAttributes] = useState({});\r\n\r\n  const updateAttributes = () => {\r\n\r\n    const newAttribute = { ...inputAttributes };\r\n\r\n    if (minLength) {\r\n      newAttribute.minLength = minLength;\r\n    }\r\n\r\n    if (maxLength) {\r\n      newAttribute.maxLength = maxLength;\r\n    }\r\n\r\n    // if (isDisable) {\r\n    //   newAttribute.disabled = isDisable;\r\n    // }\r\n\r\n    if (isReadOnly) {\r\n      newAttribute.readOnly = isReadOnly;\r\n    }\r\n    setInputAttributes(newAttribute);\r\n  };\r\n\r\n  useEffect(() => {\r\n    updateAttributes();\r\n  }, [minLength, maxLength]);\r\n\r\n  const handleInputChange = (e) => {\r\n    if (onChange) {\r\n      onChange(e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"text-area\">\r\n      <textarea\r\n        className=\"text-area-input\"\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={handleInputChange}\r\n        rows={textareaRows}\r\n        cols={textareaCols}\r\n        onBlur={onBlur}\r\n        disabled={isDisable}\r\n        {...inputAttributes}\r\n      />\r\n    </div>\r\n  );\r\n}\r\nTextArea.propTypes = {\r\n  name: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  value: PropTypes.string.isRequired,  \r\n  onChange: PropTypes.func,\r\n  textareaRows: PropTypes.number,\r\n  textareaCols: PropTypes.number,\r\n  onBlur: PropTypes.func,\r\n  minLength: PropTypes.number,\r\n  maxLength: PropTypes.number,\r\n  isDisable: PropTypes.bool,\r\n  isReadOnly: PropTypes.bool,\r\n};\r\n\r\nexport default TextArea;\r\n"],"names":["_ref","name","placeholder","value","onChange","textareaRows","textareaCols","onBlur","minLength","maxLength","isDisable","isReadOnly","inputAttributes","setInputAttributes","useState","useEffect","updateAttributes","newAttribute","readOnly","_jsx","className","children","e","rows","cols","disabled"],"sourceRoot":""}