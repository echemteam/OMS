{"version":3,"file":"static/js/2019.fc4992e9.chunk.js","mappings":"uJAEA,MAAMA,EAAQC,EAAAA,MAAW,IAAM,0CACzBC,EAAQD,EAAAA,MAAW,IAAM,0CACzBE,EAAiBF,EAAAA,MAAW,IAChC,0CAwIF,EArIwBG,IAkBjB,IAlBkB,UACvBC,EAAS,KACTC,EAAI,SACJC,EAAQ,aACRC,EAAY,UACZC,EAAS,MACTC,EAAK,YACLC,EAAW,aACXC,EAAY,SACZC,EAAQ,cACRC,EAAa,uBACbC,EAAsB,oBACtBC,EAAmB,WACnBC,EAAU,UACVC,EAAS,eACTC,EAAc,uBACdC,KACGC,GACJjB,EAEC,MAAOkB,EAAcC,IAAmBC,EAAAA,EAAAA,UAAS,MAE3CC,EAAqBC,IACzB,GAAInB,EACF,GAAsB,SAAlBmB,EAAEC,OAAOC,KAAiB,CAC5BL,EAAgB,MAChB,IAAIM,EAAWH,EAAEC,OAAOG,MACpBT,EAAWU,uBACbF,EAAWA,EAASG,aAItBzB,EAASE,EAAWoB,GAChBZ,GACFA,EAAW,gBAAiBR,EAAWoB,EAE3C,MAAO,GAAIH,EAAEC,OAAOM,MAAM,GAAI,CAC5B,MAAMC,EAAUR,EAAEC,OAAOM,MAAM,GAE/BV,EAAgBW,GAEhB3B,EAASE,EAAWyB,EACtB,CACF,EAGIC,EAAgBT,IAIpB,GAHIlB,GACFA,EAAaC,GAEXY,EAAWU,qBAAsB,CACnC,IAAIF,EAAWH,EAAEC,OAAOG,MAAMM,OAC9B7B,EAASE,EAAWoB,EACtB,GAGF,OACEQ,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAkBF,SAAA,CAC9BlC,GAA2B,KAAdA,IACZgC,EAAAA,EAAAA,KAACnC,EAAK,CAACG,UAAWA,EAAWqC,IAAKpC,EAAMqC,WAAYtB,EAAWsB,cAAgBtB,IAGhFA,EAAWuB,mBACVP,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBF,SAAA,EAC9BF,EAAAA,EAAAA,KAAA,MAAAE,SAAKlB,EAAWuB,qBAChBP,EAAAA,EAAAA,KAACrC,EAAK,IACAqB,EACJwB,SAAUvB,EACVf,SAAUkB,EACVqB,OAAQX,EACRjB,UAAWA,EACXH,uBAAwBA,EACxBC,oBAAqBA,EACrBI,uBAAwBA,EACxB2B,WACa,OAAXpC,QAAW,IAAXA,OAAW,EAAXA,EAAaqC,cACH,OAAV3B,QAAU,IAAVA,OAAU,EAAVA,EAAY0B,aACC,OAAbjC,QAAa,IAAbA,OAAa,EAAbA,EAAeiC,aACf,UAMRV,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,KAACrC,EAAK,IACAqB,EACJwB,SAAUvB,EACVf,SAAUkB,EACVqB,OAAQX,EACRjB,UAAWA,EACXH,uBAAwBA,EACxBC,oBAAqBA,EACrBI,uBAAwBA,EACxB2B,WACa,OAAXpC,QAAW,IAAXA,OAAW,EAAXA,EAAaqC,cACH,OAAV3B,QAAU,IAAVA,OAAU,EAAVA,EAAY0B,aACC,OAAbjC,QAAa,IAAbA,OAAa,EAAbA,EAAeiC,aACf,OAKRV,EAAAA,EAAAA,KAAClC,EAAc,CAACO,MAAOA,GAAS,SAEjC,C","sources":["components/Forms/formField/FormInputFields.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nconst Input = React.lazy(() => import(\"../../ui/inputs/input/Input\"));\r\nconst Label = React.lazy(() => import(\"../../ui/label/Label\"));\r\nconst ValidationText = React.lazy(() =>\r\n  import(\"../../ui/inputs/validation/ValidationText.js\")\r\n);\r\n\r\nconst FormInputFields = ({\r\n  labelName,\r\n  name,\r\n  onChange,\r\n  onValidation,\r\n  dataField,\r\n  error,\r\n  formSetting,\r\n  changeAction,\r\n  formData,\r\n  overRideProps,\r\n  handleInputGroupButton,\r\n  handleInputShowInfo,\r\n  inputField,\r\n  inputIcon,\r\n  inputshowField,\r\n  inputButtonGroupConfig,\r\n  ...inputProps\r\n}) => {\r\n\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n\r\n  const handleInputChange = (e) => {\r\n    if (onChange) {\r\n      if (e.target.type !== \"file\") {\r\n        setSelectedFile(null);\r\n        let newValue = e.target.value;\r\n        if (inputProps.exemptBoundarySpaces) {\r\n          newValue = newValue.trimStart();\r\n          // newValue = newValue.replace(/\\s+/g, ' ').trim();\r\n          // newValue = newValue.trimEnd();\r\n        }\r\n        onChange(dataField, newValue);\r\n        if (inputField) {\r\n          inputField('INPUT_CHANGED', dataField, newValue);\r\n        }\r\n      } else if (e.target.files[0]) {\r\n        const fileObj = e.target.files[0];\r\n\r\n        setSelectedFile(fileObj);\r\n\r\n        onChange(dataField, fileObj);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleOnBlur = (e) => {\r\n    if (onValidation) {\r\n      onValidation(dataField);\r\n    }\r\n    if (inputProps.exemptBoundarySpaces) {\r\n      let newValue = e.target.value.trim();\r\n      onChange(dataField, newValue);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"input-label-part\">\r\n        {labelName && labelName !== \"\" && (\r\n          <Label labelName={labelName} for={name} isRequired={inputProps.isRequired} {...inputProps} />\r\n        )}\r\n\r\n        {inputProps.formSaparateTitle ? (\r\n          <>\r\n            <div className=\"input-top-title\">\r\n              <h5>{inputProps.formSaparateTitle}</h5>\r\n              <Input\r\n                {...inputProps}\r\n                filename={selectedFile}\r\n                onChange={handleInputChange}\r\n                onBlur={handleOnBlur}\r\n                inputIcon={inputIcon}\r\n                handleInputGroupButton={handleInputGroupButton}\r\n                handleInputShowInfo={handleInputShowInfo}\r\n                inputButtonGroupConfig={inputButtonGroupConfig}\r\n                isDisable={\r\n                  formSetting?.isViewOnly ||\r\n                  inputProps?.isDisable ||\r\n                  overRideProps?.isDisable ||\r\n                  false\r\n                }\r\n              />\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Input\r\n              {...inputProps}\r\n              filename={selectedFile}\r\n              onChange={handleInputChange}\r\n              onBlur={handleOnBlur}\r\n              inputIcon={inputIcon}\r\n              handleInputGroupButton={handleInputGroupButton}\r\n              handleInputShowInfo={handleInputShowInfo}\r\n              inputButtonGroupConfig={inputButtonGroupConfig}\r\n              isDisable={\r\n                formSetting?.isViewOnly ||\r\n                inputProps?.isDisable ||\r\n                overRideProps?.isDisable ||\r\n                false\r\n              }\r\n            />\r\n          </>\r\n        )}\r\n        <ValidationText error={error || \"\"} />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nFormInputFields.propTypes = {\r\n  labelName: PropTypes.string,\r\n  name: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func,\r\n  onValidation: PropTypes.func,\r\n  dataField: PropTypes.string.isRequired,\r\n  error: PropTypes.string,\r\n  formSetting: PropTypes.object,\r\n  changeAction: PropTypes.func,\r\n  formData: PropTypes.object,\r\n  overRideProps: PropTypes.object,\r\n  handleInputGroupButton: PropTypes.func,\r\n  handleInputShowInfo: PropTypes.func,\r\n  inputField: PropTypes.func,\r\n  inputIcon: PropTypes.node,\r\n  inputshowField: PropTypes.bool,\r\n  exemptBoundarySpaces: PropTypes.bool,\r\n  isRequired: PropTypes.bool,\r\n  isDisable: PropTypes.bool,\r\n  formSaparateTitle: PropTypes.string,\r\n\r\n};\r\nexport default FormInputFields;\r\n"],"names":["Input","React","Label","ValidationText","_ref","labelName","name","onChange","onValidation","dataField","error","formSetting","changeAction","formData","overRideProps","handleInputGroupButton","handleInputShowInfo","inputField","inputIcon","inputshowField","inputButtonGroupConfig","inputProps","selectedFile","setSelectedFile","useState","handleInputChange","e","target","type","newValue","value","exemptBoundarySpaces","trimStart","files","fileObj","handleOnBlur","trim","_jsx","_Fragment","children","_jsxs","className","for","isRequired","formSaparateTitle","filename","onBlur","isDisable","isViewOnly"],"sourceRoot":""}