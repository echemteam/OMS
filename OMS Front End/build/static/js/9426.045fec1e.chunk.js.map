{"version":3,"file":"static/js/9426.045fec1e.chunk.js","mappings":"uJAEA,MAAMA,EAAQC,EAAAA,MAAW,IAAM,0CACzBC,EAAiBD,EAAAA,MAAW,IAAM,0CAClCE,EAAmBF,EAAAA,MAAW,IAAM,kCA0F1C,EAxFgCG,IAezB,IAf0B,UAC7BC,EAAS,KACTC,EAAI,SACJC,EAAQ,aACRC,EAAY,UACZC,EAAS,MACTC,EAAK,MACLC,EAAK,YACLC,EAAW,QACXC,EAAO,YACPC,EAAW,aACXC,EAAY,cACZC,EAAa,cACbC,KACGC,GACNd,EAuBG,OACIe,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACIF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,mBAAkBD,SAAA,CAE5BhB,GAA2B,KAAdA,IAAoBkB,EAAAA,EAAAA,KAACvB,EAAK,CAACK,UAAWA,EAAWmB,IAAKlB,EAAMmB,WAAYP,EAAYO,cAClGF,EAAAA,EAAAA,KAACpB,EAAgB,CACbU,QAASA,EACTJ,UAAWA,EACXF,SA7BUmB,CAACC,EAAGC,EAAWC,KACjCtB,IACkB,UAAdqB,EACArB,EAASE,EAAW,CAAEqB,KAAMH,EAAEI,OAAOpB,MAAOqB,OAAO,IAC9B,aAAdJ,GACPrB,EAASE,EAAWoB,EAAclB,OAElCI,GAA2B,OAAXG,QAAW,IAAXA,GAAAA,EAAae,kBAC7BlB,EAAa,cAAeN,EAAWoB,GAE/C,EAoBYK,OAfKC,KACb3B,GACAA,EAAaC,EACjB,EAaYE,MAAOA,EACPG,YAAaA,EACbsB,OAAQlB,EAAYkB,UAChBlB,QAGZK,EAAAA,EAAAA,KAACrB,EAAc,CAACQ,MAAOA,GAAS,OACjC,C","sources":["components/Forms/formField/FormEditableSelectField.js"],"sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nconst Label = React.lazy(() => import('../../ui/label/Label'));\r\nconst ValidationText = React.lazy(() => import('../../ui/inputs/validation/ValidationText.js'));\r\nconst EditableDropdown = React.lazy(() => import('../../ui/inputs/editableDropdown/EditableDropdown'));\r\n\r\nconst FormEditableSelectField = ({\r\n    labelName,\r\n    name,\r\n    onChange,\r\n    onValidation,\r\n    dataField,\r\n    error,\r\n    value,\r\n    formSetting,\r\n    options,\r\n    placeholder,\r\n    fieldActions,\r\n    isMultiSelect,\r\n    overRideProps,\r\n    ...oteherProps\r\n}) => {\r\n\r\n    const handleInputChange = (e, fieldType, selectedValue) => {\r\n        if (onChange) {\r\n            if (fieldType === \"input\") {\r\n                onChange(dataField, { text: e.target.value, isNew: true });\r\n            } else if (fieldType === \"dropdown\") {\r\n                onChange(dataField, selectedValue.value);\r\n            }\r\n            if (fieldActions && oteherProps?.isEnableOnChange) {\r\n                fieldActions('DDL_CHANGED', dataField, selectedValue);\r\n              }\r\n        }\r\n    };\r\n\r\n\r\n\r\n    const handleOnBlur = () => {\r\n        if (onValidation) {\r\n            onValidation(dataField);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"input-label-part\">\r\n\r\n                {labelName && labelName !== \"\" && <Label labelName={labelName} for={name} isRequired={oteherProps.isRequired} />}\r\n                <EditableDropdown\r\n                    options={options}\r\n                    dataField={dataField}\r\n                    onChange={handleInputChange}\r\n                    onBlur={handleOnBlur}\r\n                    value={value}\r\n                    placeholder={placeholder}\r\n                    isText={oteherProps.isText}\r\n                    {...oteherProps}\r\n                />\r\n            </div>\r\n            <ValidationText error={error || \"\"} />\r\n        </>\r\n    )\r\n}\r\nFormEditableSelectField.propTypes = {\r\n    labelName: PropTypes.string,\r\n    name: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func,\r\n    onValidation: PropTypes.func,\r\n    dataField: PropTypes.string.isRequired,\r\n    error: PropTypes.string,\r\n    value: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.number,\r\n        PropTypes.object\r\n    ]),\r\n    formSetting: PropTypes.shape({\r\n        isViewOnly: PropTypes.bool,\r\n    }),\r\n    options: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            value: PropTypes.string.isRequired,\r\n            label: PropTypes.string\r\n        })\r\n    ),\r\n    placeholder: PropTypes.string,\r\n    fieldActions: PropTypes.func,\r\n    isMultiSelect: PropTypes.bool,\r\n    overRideProps: PropTypes.shape({\r\n        isText: PropTypes.bool,\r\n        isDisable: PropTypes.bool\r\n    }),\r\n    oteherProps: PropTypes.object\r\n};\r\nexport default FormEditableSelectField"],"names":["Label","React","ValidationText","EditableDropdown","_ref","labelName","name","onChange","onValidation","dataField","error","value","formSetting","options","placeholder","fieldActions","isMultiSelect","overRideProps","oteherProps","_jsxs","_Fragment","children","className","_jsx","for","isRequired","handleInputChange","e","fieldType","selectedValue","text","target","isNew","isEnableOnChange","onBlur","handleOnBlur","isText"],"sourceRoot":""}