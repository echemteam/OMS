{"version":3,"file":"static/js/3631.74baa535.chunk.js","mappings":"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","sources":["pages/order/orderDetail/feature/orderitemlist/feature/Config/OrderItem.Data.js","pages/order/orderDetail/feature/orderitemlist/feature/UpdateOrderItem.js"],"sourcesContent":["\r\nimport { FormFieldTypes } from \"../../../../../../../data/formFieldType\";\r\n\r\nconst initial = {\r\n    catalogId: \"\",\r\n    casNumber: \"\",\r\n    chemicalName: \"\",\r\n    mdlNumber: \"\",\r\n    note: \"\",\r\n    orderPriority: \"\",\r\n    requestDate: \"\",\r\n    promiseDate: \"\",\r\n}\r\n\r\nexport const orderItemFormData = {\r\n    name: \"Order Item From\",\r\n    initialState: initial,\r\n    formFields: [\r\n        {\r\n            id: \"chemicalName\",\r\n            lable: \"Chemical Name\",\r\n            Field_Name: \"Chemical Name\",\r\n            fieldType: FormFieldTypes.INPUT,\r\n            dataField: \"chemicalName\",\r\n            fieldSetting: {\r\n                placeholder: \"Enter Chemical Name\",\r\n                allowSpace: true,\r\n                maxLength: 1000,\r\n                isDisable: false\r\n            },\r\n            style: {\r\n                containerCss: \"col-xxl-9 col-xl-9 col-md-9 mb-input\",\r\n            },\r\n        },\r\n        {\r\n            id: \"catalogId\",\r\n            lable: \"Catalog\",\r\n            Field_Name: \"Catalog\",\r\n            fieldType: FormFieldTypes.INPUT,\r\n            dataField: \"catalogId\",\r\n            fieldSetting: {\r\n                placeholder: \"Enter Catalog\",\r\n                maxLength: 15,\r\n                allowSpace: false\r\n            },\r\n            style: {\r\n                containerCss: \"col-xxl-3 col-xl-3 col-md-3 mb-input\",\r\n            },\r\n        },\r\n        {\r\n            id: \"mdlNumber\",\r\n            lable: \"MDL Number\",\r\n            Field_Name: \"MDL Number\",\r\n            fieldType: FormFieldTypes.INPUT,\r\n            dataField: \"mdlNumber\",\r\n            fieldSetting: {\r\n                placeholder: \"Enter MDL Number\",\r\n                maxLength: 15,\r\n                allowSpace: false\r\n            },\r\n            style: {\r\n                containerCss: \"col-xxl-4 col-xl-4 col-md-4 mb-input\",\r\n            },\r\n        },\r\n        {\r\n            id: \"casNumber\",\r\n            lable: \"CAS Number\",\r\n            Field_Name: \"CAS Number\",\r\n            fieldType: FormFieldTypes.INPUT,\r\n            dataField: \"casNumber\",\r\n            fieldSetting: {\r\n                placeholder: \"Enter CAS Number\",\r\n                maxLength: 10,\r\n                allowSpace: false\r\n            },\r\n            style: {\r\n                containerCss: \"col-xxl-4 col-xl-4 col-md-4 mb-input\",\r\n            },\r\n        },\r\n        {\r\n            id: \"orderPriority\",\r\n            lable: \"Order Priority\",\r\n            Field_Name: \"Order Priority\",\r\n            fieldType: FormFieldTypes.SELECT,\r\n            dataField: \"orderPriority\",\r\n            fieldSetting: {\r\n                placeholder: \"Order Priority\",\r\n                isEnableOnChange: true,\r\n                options: [\r\n                    { value: \"High\", label: \"High\" },\r\n                    { value: \"Low\", label: \"Low\" }\r\n                ]\r\n            },\r\n            validation: [{ type: \"require\" }],\r\n            style: {\r\n                containerCss: \"col-xxl-4 col-xl-4 col-md-4 col-12 mb-input\",\r\n            },\r\n        },\r\n        {\r\n            id: \"requestDate\",\r\n            lable: \"Request Date\",\r\n            Field_Name: \"Request Date\",\r\n            fieldType: FormFieldTypes.DATEPICKER,\r\n            dataField: \"requestDate\",\r\n            fieldSetting: {\r\n                placeholder: \"Enter Request Date\",\r\n                options: [],\r\n            },\r\n            style: { containerCss: \"col-xxl-6 col-xl-12 col-md-12 col-12 col-12 mb-input\" },\r\n        },\r\n        {\r\n            id: \"promiseDate\",\r\n            lable: \"Promise Date\",\r\n            Field_Name: \"Promise Date\",\r\n            fieldType: FormFieldTypes.DATEPICKER,\r\n            dataField: \"promiseDate\",\r\n            fieldSetting: {\r\n                placeholder: \"Enter Promise Date\",\r\n                options: [],\r\n            },\r\n            style: { containerCss: \"col-xxl-6 col-xl-12 col-md-12 col-12 col-12 mb-input\" },\r\n        },\r\n        {\r\n            id: \"note\",\r\n            lable: \"Order Note\",\r\n            Field_Name: \"Order Note\",\r\n            fieldType: FormFieldTypes.TEXTAREA,\r\n            dataField: \"note\",\r\n            fieldSetting: {\r\n                placeholder: \"Enter Order Note\",\r\n                allowSpace: true,\r\n                maxLength: 1000,\r\n                isDisable: false\r\n            },\r\n            style: {\r\n                containerCss: \"col-xxl-12 col-xl-12 col-md-12 mb-input\",\r\n            },\r\n        }\r\n    ],\r\n    formSetting: {\r\n        isViewOnly: false\r\n    }\r\n};\r\n","import { useEffect, useImperativeHandle, useRef, useState } from \"react\";\r\n//** Lib's */\r\nimport { AppIcons } from \"../../../../../../data/appIcons\";\r\nimport { orderItemFormData } from \"./Config/OrderItem.Data\";\r\nimport Buttons from \"../../../../../../components/ui/button/Buttons\";\r\nimport FormCreator from \"../../../../../../components/Forms/FormCreator\";\r\nimport DataLoader from \"../../../../../../components/ui/dataLoader/DataLoader\";\r\nimport SidebarModel from \"../../../../../../components/ui/sidebarModel/SidebarModel\";\r\n//** Service's */\r\nimport ToastService from \"../../../../../../services/toastService/ToastService\";\r\nimport { useLazyGetOrderItemByOrderItemIdQuery, useUpdateOrderItemByOrderItemIdMutation } from \"../../../../../../app/services/orderAPI\";\r\n\r\nconst UpdateOrderItem = ({ orderId, orderItemref, getOrderItemList }) => {\r\n\r\n    //** State */\r\n    const ref = useRef();\r\n    const [isModelOpen, setIsModelOpen] = useState(false);\r\n    const [formData, setFormData] = useState(orderItemFormData);\r\n\r\n    //** API Call's */\r\n    const [update, { isLoading, isSuccess: isUpdateSuccess, data: isUpdateData }] = useUpdateOrderItemByOrderItemIdMutation();\r\n    const [getById, { isFetching, isSuccess: isGetByIdSuccess, data: isGetByIdData }] = useLazyGetOrderItemByOrderItemIdQuery();\r\n\r\n    //** Use Effect */\r\n    useEffect(() => {\r\n        if (!isFetching && isGetByIdSuccess && isGetByIdData) {\r\n            const data = { ...formData }\r\n            data.initialState = isGetByIdData;\r\n            setFormData(data);\r\n        }\r\n    }, [isFetching, isGetByIdSuccess, isGetByIdData]);\r\n\r\n    useEffect(() => {\r\n        if (isUpdateSuccess && isUpdateData) {\r\n            onSidebarClose();\r\n            ToastService.success(isUpdateData.errorMessage);\r\n            getOrderItemList();\r\n        }\r\n    }, [isUpdateSuccess, isUpdateData]);\r\n\r\n    //** Handle Change's */\r\n    const handleUpdate = () => {\r\n        let data = ref.current.getFormData();\r\n        if (data) {\r\n            let request = {\r\n                ...data,\r\n                orderId,\r\n                orderPriority: data.orderPriority && typeof data.orderPriority === \"object\" ? data.orderPriority.value : data.orderPriority,\r\n            }\r\n            update(request);\r\n        }\r\n    }\r\n    const onSidebarClose = () => {\r\n        setIsModelOpen(!isModelOpen);\r\n    };\r\n    const handleToggleModal = (orderItemId) => {\r\n        setIsModelOpen(!isModelOpen);\r\n        getById(orderItemId);\r\n    };\r\n\r\n    //** Use Imperative Handle */\r\n    useImperativeHandle(orderItemref, () => ({\r\n        handleToggleModal\r\n    }));\r\n\r\n    return (\r\n        isModelOpen &&\r\n        <SidebarModel modalTitle=\"Update Order Item\" contentClass=\"content-50\" onClose={onSidebarClose} modalTitleIcon={AppIcons.AddIcon} isOpen={isModelOpen}>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-12 add-edit-user-form\">\r\n                    <div className=\"row vertical-form\">\r\n                        {!isFetching ?\r\n                            <FormCreator config={formData}\r\n                                ref={ref} isLoading={isFetching} />\r\n                            : <DataLoader />}\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-12\">\r\n                    <div className=\"d-flex align-item-center justify-content-end\">\r\n                        <Buttons\r\n                            buttonTypeClassName=\"theme-button\"\r\n                            onClick={handleUpdate}\r\n                            buttonText=\"Update\"\r\n                            isLoading={isLoading} />\r\n                        <Buttons\r\n                            buttonTypeClassName=\"dark-btn ml-5\"\r\n                            buttonText=\"Cancel\"\r\n                            onClick={onSidebarClose} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </SidebarModel>\r\n    )\r\n}\r\n\r\nexport default UpdateOrderItem"],"names":["orderItemFormData","name","initialState","catalogId","casNumber","chemicalName","mdlNumber","note","orderPriority","requestDate","promiseDate","formFields","id","lable","Field_Name","fieldType","FormFieldTypes","INPUT","dataField","fieldSetting","placeholder","allowSpace","maxLength","isDisable","style","containerCss","SELECT","isEnableOnChange","options","value","label","validation","type","DATEPICKER","TEXTAREA","formSetting","isViewOnly","_ref","orderId","orderItemref","getOrderItemList","ref","useRef","isModelOpen","setIsModelOpen","useState","formData","setFormData","update","isLoading","isSuccess","isUpdateSuccess","data","isUpdateData","useUpdateOrderItemByOrderItemIdMutation","getById","isFetching","isGetByIdSuccess","isGetByIdData","useLazyGetOrderItemByOrderItemIdQuery","useEffect","onSidebarClose","ToastService","success","errorMessage","handleToggleModal","orderItemId","useImperativeHandle","_jsx","SidebarModel","modalTitle","contentClass","onClose","modalTitleIcon","AppIcons","AddIcon","isOpen","children","_jsxs","className","DataLoader","FormCreator","config","Buttons","buttonTypeClassName","onClick","handleUpdate","current","getFormData","request","buttonText"],"sourceRoot":""}