{"version":3,"file":"static/js/1966.d97bf2f7.chunk.js","mappings":"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","sources":["pages/order/feature/orderItemDetail/feature/ProductPriceDetails/config/ProductPriceList.data.js","pages/order/feature/orderItemDetail/feature/ProductPriceDetails/ProductPriceList.js","utils/Enums/APIEventEnums.js"],"sourcesContent":["import { GridColumnType } from \"../../../../../../../components/FinalMolGrid/libs/data/gridColumnType\";\r\nimport { EditGridColumnType } from \"../../../../../../../components/FinalMolGrid/libs/data/editGridColumnType\";\r\n\r\nexport const priceListConfig = {\r\n  columns: [\r\n    {\r\n      name: \"Quantity\",\r\n      colStyle: {\r\n        width: \"7%\",\r\n      },\r\n      fieldName: \"Quantity\",\r\n      allowEditColumn: true,\r\n      editColumn: {\r\n        editColType: EditGridColumnType.NUMERIC,\r\n        editColFieldName: \"Quantity\",\r\n        isDisable: false,\r\n      },\r\n      colSettings: {},\r\n      allowShort: false\r\n    },\r\n    {\r\n      name: \"Size\",\r\n      colStyle: {\r\n        width: \"7%\",\r\n      },\r\n      fieldName: \"Size\",\r\n      allowEditColumn: true,\r\n      editColumn: {\r\n        editColType: EditGridColumnType.NUMERIC,\r\n        editColFieldName: \"Size\",\r\n        isDisable: false,\r\n      },\r\n      colSettings: {},\r\n      allowShort: false\r\n    },\r\n    {\r\n      name: \"Unit\",\r\n      fieldName: \"Unit\",\r\n      allowEditColumn: true,\r\n      editColumn: {\r\n        editColType: EditGridColumnType.DROPDOWN,\r\n        editColFieldName: \"Unit\",\r\n        isDisable: false,\r\n        isMultiSelect: false,\r\n        options: [\r\n          { value: \"MG\", label: \"MG\" },\r\n          { value: \"G\", label: \"G\" },\r\n          { value: \"KG\", label: \"KG\" },\r\n        ],\r\n        // editColValidation: [\r\n        //   // { type: \"required\", message: \"Lead Cast is required.\" },\r\n        // ],\r\n      },\r\n      colStyle: {\r\n        width: \"10%\",\r\n      },\r\n      allowShort: false\r\n    },\r\n    {\r\n      name: \"Price\",\r\n      colStyle: {\r\n        width: \"12%\",\r\n      },\r\n      fieldName: \"Price\",\r\n      allowEditColumn: true,\r\n      editColumn: {\r\n        editColType: EditGridColumnType.NUMERIC,\r\n        editColFieldName: \"Price\",\r\n        isDisable: false,\r\n        // editColValidation: [\r\n        //   // { type: \"required\", message: \"Price is required.\" },\r\n        // ],\r\n      },\r\n      colSettings: {},\r\n      allowShort: false\r\n    },\r\n    {\r\n      name: \"Order Note\",\r\n      fieldName: \"orderNote\",\r\n      allowEditColumn: true,\r\n      editColumn: {\r\n        editColType: EditGridColumnType.INPUT,\r\n        placeholder: \"Order Note\",\r\n        editColFieldName: \"orderNote\",\r\n        isDisable: false,\r\n        colConfig: {\r\n          maxLength: 20,\r\n          isReadOnly: false,\r\n        },\r\n        // editColValidation: [{ type: \"required\", message: \"Order Note .\" }],\r\n      },\r\n      colStyle: {\r\n        width: \"29%\",\r\n        textAlign: \"center\",\r\n      },\r\n      allowShort: false,\r\n    },\r\n    {\r\n      name: \"Req-Date\",\r\n      fieldName: \"requestDate\",\r\n      colType: GridColumnType.DATE,\r\n      colSettings: {\r\n        format: \"DD-MMM-YYYY\"\r\n      },\r\n      allowEditColumn: true,\r\n      editColumn: {\r\n        editColType: EditGridColumnType.DATEPICKER,\r\n        placeholder: \"Req-Date\",\r\n        editColFieldName: \"requestDate\",\r\n        isDisable: false,\r\n        colConfig: {\r\n          format: \"DD/MM/YYYY\"\r\n        },\r\n        // editColValidation: [\r\n        //   { type: \"required\", message: \"Req-Date is required.\" },\r\n        // ],\r\n      },\r\n      colStyle: {\r\n        textAlign: \"right\",\r\n        width: \"15%\",\r\n      },\r\n      allowShort: false,\r\n    },\r\n    {\r\n      name: \"Promise Date\",\r\n      fieldName: \"promiseDate\",\r\n      colType: GridColumnType.DATE,\r\n      colSettings: {\r\n        format: \"DD-MMM-YYYY\"\r\n      },\r\n      allowEditColumn: true,\r\n      editColumn: {\r\n        placeholder: \"Promise Date\",\r\n        editColType: EditGridColumnType.DATEPICKER,\r\n        editColFieldName: \"promiseDate\",\r\n        isDisable: false,\r\n        colConfig: {\r\n          format: \"DD/MM/YYYY\"\r\n        },\r\n        // editColValidation: [\r\n        //   { type: \"required\", message: \"Promise Date is required.\" },\r\n        // ],\r\n      },\r\n      colStyle: {\r\n        textAlign: \"right\",\r\n        width: \"15%\",\r\n      },\r\n      allowShort: false,\r\n    },\r\n    {\r\n      name: \"Priority\",\r\n      fieldName: \"orderPriority\",\r\n      allowEditColumn: true,\r\n      editColumn: {\r\n        editColType: EditGridColumnType.DROPDOWN,\r\n        editColFieldName: \"orderPriority\",\r\n        isDisable: false,\r\n        isMultiSelect: false,\r\n        options: [\r\n          { value: \"High\", label: \"High\" },\r\n          { value: \"Low\", label: \"Low\" },\r\n        ],\r\n        // editColValidation: [\r\n        //   // { type: \"required\", message: \"Lead Cast is required.\" },\r\n        // ],\r\n      },\r\n      colStyle: {\r\n        width: \"10%\",\r\n      },\r\n      allowShort: false\r\n    },\r\n    {\r\n      name: \"Action\",\r\n      colStyle: {\r\n        width: \"10%\",\r\n      },\r\n      colType: GridColumnType.ACTION,\r\n      defaultAction: {\r\n        allowEdit: true,\r\n        allowDelete: true,\r\n      },\r\n      allowShort: false\r\n    },\r\n  ],\r\n  allowEdit: true,\r\n  editSettings: {\r\n    defualtEditableView: true,\r\n    buttons: {\r\n      save: true,\r\n      delete: true,\r\n      cancel: false\r\n    }\r\n  }\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { useEffect, useRef, useState } from \"react\";\r\n//** Lib's */\r\nimport { priceListConfig } from \"./config/ProductPriceList.data\";\r\nimport { ErrorMessage, SuccessMessage } from \"../../../../../../data/appMessages\";\r\nimport { EventName } from \"../../../../../../utils/Enums/APIEventEnums\";\r\nimport CardSection from \"../../../../../../components/ui/card/CardSection\";\r\n//** Service's */\r\nimport ToastService from \"../../../../../../services/toastService/ToastService\";\r\nimport { useThirdPartyAPICallMutation } from \"../../../../../../app/services/thirdPartyAPI\";\r\nimport FinalMolGrid from \"../../../../../../components/FinalMolGrid/FinalMolGrid\";\r\nimport SwalAlert from \"../../../../../../services/swalService/SwalService\";\r\n\r\nconst ProductPriceList = ({ productId, onPriceListUpdate, isVerifyProduct }) => {\r\n  const molGridRef = useRef();\r\n  const [priceList, setPriceList] = useState([]);\r\n  const { confirm } = SwalAlert();\r\n\r\n  useEffect(() => {\r\n    if (priceList) {\r\n      const blankRow = {\r\n        orderPriority: \"\",\r\n        promiseDate: '',\r\n        requestDate: '',\r\n        orderNote: '',\r\n        Price: '',\r\n        Size: '',\r\n        Unit: '',\r\n        Quantity: 1\r\n      };\r\n\r\n      setPriceList([...priceList, blankRow]);\r\n    }\r\n  }, []);\r\n\r\n  const handleAddRow = () => {\r\n    const blankRow = {\r\n      orderPriority: \"\",\r\n      promiseDate: '',\r\n      requestDate: '',\r\n      orderNote: '',\r\n      Price: '',\r\n      Size: '',\r\n      Unit: '',\r\n      Quantity: 1\r\n    };\r\n    setPriceList(prevData => [...prevData, blankRow]);\r\n  };\r\n\r\n  const [\r\n    getThirdPartyApiResponse,\r\n    {\r\n      isLoading: isApiResponseLoading,\r\n      isSuccess: isApiResponseSucess,\r\n      data: isApiResponseData,\r\n    },\r\n  ] = useThirdPartyAPICallMutation();\r\n\r\n  useEffect(() => {\r\n    if (productId) {\r\n      getProductPriceByProductId();\r\n    }\r\n  }, [productId]);\r\n\r\n  const mapApiResponseToPriceList = (responseData) => {\r\n    return responseData.map(item => ({\r\n      orderPriority: item.orderPriority || \"\",\r\n      promiseDate: item.promiseDate || '',\r\n      requestDate: item.requestDate || '',\r\n      orderNote: item.orderNote || '',\r\n      Price: item.Price || '',\r\n      Size: item.Size || '',\r\n      Unit: item.Unit || '', // Ensure this is mapped properly\r\n      Quantity: 1\r\n    }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isApiResponseSucess && isApiResponseData) {\r\n      if (isApiResponseData.isSuccess) {\r\n        const responseData = JSON.parse(isApiResponseData.data);\r\n        const mappedData = mapApiResponseToPriceList(responseData?.data || []);\r\n        setPriceList(mappedData);\r\n      } else {\r\n        ToastService.warning(isApiResponseData.message || ErrorMessage.DefaultMessage);\r\n      }\r\n    }\r\n  }, [isApiResponseSucess, isApiResponseData]);\r\n\r\n  const getProductPriceByProductId = () => {\r\n    let dynamicParameters = {\r\n      productId: productId,\r\n    };\r\n    let request = {\r\n      eventName: EventName.AURUMPRODUCTPRICELIST,\r\n      isDynamicParameter: true,\r\n      parameters: JSON.stringify(dynamicParameters),\r\n    };\r\n    getThirdPartyApiResponse(request);\r\n  };\r\n\r\n  const handleEditClick = (data, rowIndex) => {\r\n    if (isVerifyProduct) {\r\n      const updatedRow = {\r\n        ...priceList[rowIndex],\r\n        ...data,\r\n      };\r\n      const updatedPriceList = priceList.map((row, index) =>\r\n        index === rowIndex ? updatedRow : row\r\n      );\r\n      setPriceList(updatedPriceList);\r\n      const isEmptyOrInvalid = (value) => value === '' || !value || value <= 0;\r\n      if (isEmptyOrInvalid(updatedRow.Quantity)) {\r\n        return ToastService.warning(\"Please enter valid quantity\");\r\n      } else if (isEmptyOrInvalid(updatedRow.Size)) {\r\n        return ToastService.warning(\"Please enter valid size\");\r\n      } else if (isEmptyOrInvalid(updatedRow.Unit)) {\r\n        return ToastService.warning(\"Please select unit\");\r\n      } else if (isEmptyOrInvalid(updatedRow.Price)) {\r\n        return ToastService.warning(\"Please enter valid price\");\r\n      } else {\r\n        onPriceListUpdate(updatedRow);\r\n      }\r\n    } else {\r\n      ToastService.warning(SuccessMessage.VerifyProduct)\r\n    }\r\n  };\r\n\r\n  const handleDeleteClick = (rowIndex) => {\r\n    confirm(\r\n      \"Delete?\",\r\n      \"Are you sure you want to Delete?\",\r\n      \"Delete\",\r\n      \"Cancel\"\r\n    ).then((confirmed) => {\r\n      if (confirmed) {\r\n        const updatedPriceList = priceList.filter((_, index) => index !== rowIndex);\r\n        setPriceList(updatedPriceList);\r\n      }\r\n    });\r\n  }\r\n\r\n  // const actionHandler = {\r\n  //   // EDIT: handleEditClick,\r\n  //   // DELETE: handleDeleteClick,\r\n  // };\r\n\r\n  return (\r\n    <CardSection\r\n      cardTitle=\"Product Price List\"\r\n      rightButton={true}\r\n      buttonClassName=\"theme-button my-2\"\r\n      titleButtonClick={handleAddRow}\r\n      buttonText=\"Add Row\"\r\n    >\r\n      <div className=\"order-price-list responsive-grid\">\r\n        <FinalMolGrid\r\n          key={JSON.stringify(priceList)}\r\n          ref={molGridRef}\r\n          dataSource={priceList}\r\n          configuration={priceListConfig}\r\n          isLoading={isApiResponseLoading}\r\n          onRowDataUpdate={handleEditClick}\r\n          onRowDataDelete={handleDeleteClick}\r\n          allowPagination={false}\r\n        // onActionChange={actionHandler}\r\n        />\r\n        {/* <Buttons\r\n          onClick={handleAddRow}\r\n          buttonTypeClassName=\"theme-button my-2\"\r\n          buttonText={\"Add Row\"}\r\n        /> */}\r\n      </div>\r\n    </CardSection>\r\n  );\r\n};\r\n\r\nexport default ProductPriceList;\r\n","export const EventName = {\r\n    AURUMPRODUCTSEARCH: \"Aurum Product Search\",\r\n    AURUMPRODUCTDETAILS: \"Aurum Product Details\",\r\n    AURUMPRODUCTPRICELIST: \"Aurum Product Price List\"\r\n}"],"names":["priceListConfig","columns","name","colStyle","width","fieldName","allowEditColumn","editColumn","editColType","EditGridColumnType","NUMERIC","editColFieldName","isDisable","colSettings","allowShort","DROPDOWN","isMultiSelect","options","value","label","INPUT","placeholder","colConfig","maxLength","isReadOnly","textAlign","colType","GridColumnType","DATE","format","DATEPICKER","ACTION","defaultAction","allowEdit","allowDelete","editSettings","defualtEditableView","buttons","save","delete","cancel","_ref","productId","onPriceListUpdate","isVerifyProduct","molGridRef","useRef","priceList","setPriceList","useState","confirm","SwalAlert","useEffect","blankRow","orderPriority","promiseDate","requestDate","orderNote","Price","Size","Unit","Quantity","getThirdPartyApiResponse","isLoading","isApiResponseLoading","isSuccess","isApiResponseSucess","data","isApiResponseData","useThirdPartyAPICallMutation","getProductPriceByProductId","responseData","JSON","parse","mappedData","map","item","mapApiResponseToPriceList","ToastService","warning","message","ErrorMessage","DefaultMessage","dynamicParameters","request","eventName","EventName","AURUMPRODUCTPRICELIST","isDynamicParameter","parameters","stringify","_jsx","CardSection","cardTitle","rightButton","buttonClassName","titleButtonClick","handleAddRow","prevData","buttonText","children","className","FinalMolGrid","ref","dataSource","configuration","onRowDataUpdate","handleEditClick","rowIndex","updatedRow","updatedPriceList","row","index","isEmptyOrInvalid","SuccessMessage","VerifyProduct","onRowDataDelete","then","confirmed","filter","_","allowPagination","AURUMPRODUCTSEARCH","AURUMPRODUCTDETAILS"],"sourceRoot":""}